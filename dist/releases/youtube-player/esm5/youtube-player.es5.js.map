{"version":3,"file":"youtube-player.es5.js","sources":["../../src/youtube-player/youtube-module.ts","../../src/youtube-player/youtube-player.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {YouTubePlayer} from './youtube-player';\n\nconst COMPONENTS = [YouTubePlayer];\n\n@NgModule({\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class YouTubePlayerModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {\n  combineLatest,\n  ConnectableObservable,\n  merge,\n  MonoTypeOperatorFunction,\n  Observable,\n  of as observableOf,\n  OperatorFunction,\n  pipe,\n  Subject,\n} from 'rxjs';\n\nimport {\n  combineLatest as combineLatestOp,\n  distinctUntilChanged,\n  filter,\n  first,\n  flatMap,\n  map,\n  publish,\n  scan,\n  skipWhile,\n  startWith,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\n\ndeclare global {\n  interface Window {\n    YT: typeof YT | undefined;\n    onYouTubeIframeAPIReady: (() => void) | undefined;\n  }\n}\n\nexport const DEFAULT_PLAYER_WIDTH = 640;\nexport const DEFAULT_PLAYER_HEIGHT = 390;\n\n// The native YT.Player doesn't expose the set videoId, but we need it for\n// convenience.\ninterface Player extends YT.Player {\n  videoId?: string | undefined;\n}\n\n// The player isn't fully initialized when it's constructed.\n// The only field available is destroy and addEventListener.\ntype UninitializedPlayer = Pick<Player, 'videoId' | 'destroy' | 'addEventListener'>;\n\n/**\n * Whether we're currently rendering inside a browser. Equivalent of `Platform.isBrowser`,\n * but copied over here so we don't have to add another dependency.\n */\nconst isBrowser = typeof window === 'object' && !!window;\n\n/**\n * Angular component that renders a YouTube player via the YouTube player\n * iframe API.\n * @see https://developers.google.com/youtube/iframe_api_reference\n */\n@Component({\n  moduleId: module.id,\n  selector: 'youtube-player',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  // This div is *replaced* by the YouTube player embed.\n  template: '<div #youtubeContainer></div>',\n})\nexport class YouTubePlayer implements AfterViewInit, OnDestroy, OnInit {\n  /** YouTube Video ID to view */\n  @Input()\n  get videoId(): string | undefined { return this._videoId; }\n  set videoId(videoId: string | undefined) {\n    this._videoId = videoId;\n    this._videoIdObs.emit(videoId);\n  }\n  private _videoId: string | undefined;\n  private _videoIdObs = new EventEmitter<string | undefined>();\n\n  /** Height of video player */\n  @Input()\n  get height(): number | undefined { return this._height; }\n  set height(height: number | undefined) {\n    this._height = height || DEFAULT_PLAYER_HEIGHT;\n    this._heightObs.emit(this._height);\n  }\n  private _height = DEFAULT_PLAYER_HEIGHT;\n  private _heightObs = new EventEmitter<number>();\n\n  /** Width of video player */\n  @Input()\n  get width(): number | undefined { return this._width; }\n  set width(width: number | undefined) {\n    this._width = width || DEFAULT_PLAYER_WIDTH;\n    this._widthObs.emit(this._width);\n  }\n  private _width = DEFAULT_PLAYER_WIDTH;\n  private _widthObs = new EventEmitter<number>();\n\n  /** The moment when the player is supposed to start playing */\n  @Input() set startSeconds(startSeconds: number | undefined) {\n    this._startSeconds.emit(startSeconds);\n  }\n  private _startSeconds = new EventEmitter<number | undefined>();\n\n  /** The moment when the player is supposed to stop playing */\n  @Input() set endSeconds(endSeconds: number | undefined) {\n    this._endSeconds.emit(endSeconds);\n  }\n  private _endSeconds = new EventEmitter<number | undefined>();\n\n  /** The suggested quality of the player */\n  @Input() set suggestedQuality(suggestedQuality: YT.SuggestedVideoQuality | undefined) {\n    this._suggestedQuality.emit(suggestedQuality);\n  }\n  private _suggestedQuality = new EventEmitter<YT.SuggestedVideoQuality | undefined>();\n\n  /**\n   * Whether the iframe will attempt to load regardless of the status of the api on the\n   * page. Set this to true if you don't want the `onYouTubeIframeAPIReady` field to be\n   * set on the global window.\n   */\n  @Input() showBeforeIframeApiLoads: boolean | undefined;\n\n  /** Outputs are direct proxies from the player itself. */\n  @Output() ready = new EventEmitter<YT.PlayerEvent>();\n  @Output() stateChange = new EventEmitter<YT.OnStateChangeEvent>();\n  @Output() error = new EventEmitter<YT.OnErrorEvent>();\n  @Output() apiChange = new EventEmitter<YT.PlayerEvent>();\n  @Output() playbackQualityChange = new EventEmitter<YT.OnPlaybackQualityChangeEvent>();\n  @Output() playbackRateChange = new EventEmitter<YT.OnPlaybackRateChangeEvent>();\n\n  /** The element that will be replaced by the iframe. */\n  @ViewChild('youtubeContainer', {static: false})\n  youtubeContainer: ElementRef<HTMLElement>;\n\n  private _youtubeContainer = new EventEmitter<HTMLElement>();\n  private _destroyed = new EventEmitter<undefined>();\n  private _player: Player | undefined;\n\n  constructor(private _ngZone: NgZone) {}\n\n  ngOnInit() {\n    // Don't do anything if we're not in a browser environment.\n    if (!isBrowser) {\n      return;\n    }\n\n    let iframeApiAvailableObs: Observable<boolean> = observableOf(true);\n    if (!window.YT) {\n      if (this.showBeforeIframeApiLoads) {\n        throw new Error('Namespace YT not found, cannot construct embedded youtube player. ' +\n            'Please install the YouTube Player API Reference for iframe Embeds: ' +\n            'https://developers.google.com/youtube/iframe_api_reference');\n      }\n\n      const iframeApiAvailableSubject = new Subject<boolean>();\n      window.onYouTubeIframeAPIReady = () => {\n        this._ngZone.run(() => iframeApiAvailableSubject.next(true));\n      };\n      iframeApiAvailableObs = iframeApiAvailableSubject.pipe(take(1), startWith(false));\n    }\n\n    // Add initial values to all of the inputs.\n    const videoIdObs = this._videoIdObs.pipe(startWith(this._videoId));\n    const widthObs = this._widthObs.pipe(startWith(this._width));\n    const heightObs = this._heightObs.pipe(startWith(this._height));\n\n    const startSecondsObs = this._startSeconds.pipe(startWith(undefined));\n    const endSecondsObs = this._endSeconds.pipe(startWith(undefined));\n    const suggestedQualityObs = this._suggestedQuality.pipe(startWith(undefined));\n\n    /** An observable of the currently loaded player. */\n    const playerObs =\n      createPlayerObservable(\n        this._youtubeContainer,\n        videoIdObs,\n        iframeApiAvailableObs,\n        widthObs,\n        heightObs,\n        this.createEventsBoundInZone(),\n      ).pipe(waitUntilReady(), takeUntil(this._destroyed), publish());\n\n    /** Set up side effects to bind inputs to the player. */\n    playerObs.subscribe(player => this._player = player);\n\n    bindSizeToPlayer(playerObs, widthObs, heightObs);\n\n    bindSuggestedQualityToPlayer(playerObs, suggestedQualityObs);\n\n    bindCueVideoCall(\n      playerObs,\n      videoIdObs,\n      startSecondsObs,\n      endSecondsObs,\n      suggestedQualityObs,\n      this._destroyed);\n\n    // After all of the subscriptions are set up, connect the observable.\n    (playerObs as ConnectableObservable<Player>).connect();\n  }\n\n  createEventsBoundInZone(): YT.Events {\n    return {\n      onReady: this._runInZone((event) => this.ready.emit(event)),\n      onStateChange: this._runInZone((event) => this.stateChange.emit(event)),\n      onPlaybackQualityChange:\n          this._runInZone((event) => this.playbackQualityChange.emit(event)),\n      onPlaybackRateChange: this._runInZone((event) => this.playbackRateChange.emit(event)),\n      onError: this._runInZone((event) => this.error.emit(event)),\n      onApiChange: this._runInZone((event) => this.apiChange.emit(event)),\n    };\n  }\n\n  ngAfterViewInit() {\n    this._youtubeContainer.emit(this.youtubeContainer.nativeElement);\n  }\n\n  ngOnDestroy() {\n    if (this._player) {\n      this._player.destroy();\n      window.onYouTubeIframeAPIReady = undefined;\n      this._destroyed.emit();\n    }\n  }\n\n  private _runInZone<T extends (...args: any[]) => void>(callback: T):\n      (...args: Parameters<T>) => void {\n    return (...args: Parameters<T>) => {\n      this._ngZone.run(() => callback(...args));\n    };\n  }\n\n  /** Proxied methods. */\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#playVideo */\n  playVideo() {\n    if (this._player) {\n      this._player.playVideo();\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#pauseVideo */\n  pauseVideo() {\n    if (this._player) {\n      this._player.pauseVideo();\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#stopVideo */\n  stopVideo() {\n    if (this._player) {\n      this._player.stopVideo();\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#seekTo */\n  seekTo(seconds: number, allowSeekAhead: boolean) {\n    if (this._player) {\n      this._player.seekTo(seconds, allowSeekAhead);\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#mute */\n  mute() {\n    if (this._player) {\n      this._player.mute();\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#unMute */\n  unMute() {\n    if (this._player) {\n      this._player.unMute();\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#isMuted */\n  isMuted(): boolean {\n    return !this._player || this._player.isMuted();\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#setVolume */\n  setVolume(volume: number) {\n    if (this._player) {\n      this._player.setVolume(volume);\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVolume */\n  getVolume(): number {\n    return this._player ? this._player.getVolume() : 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate */\n  setPlaybackRate(playbackRate: number) {\n    if (this._player) {\n      return this._player.setPlaybackRate(playbackRate);\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackRate */\n  getPlaybackRate(): number {\n    return this._player ? this._player.getPlaybackRate() : 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getAvailablePlaybackRates */\n  getAvailablePlaybackRates(): number[] {\n    return this._player ? this._player.getAvailablePlaybackRates() : [];\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoLoadedFraction */\n  getVideoLoadedFraction(): number {\n    return this._player ? this._player.getVideoLoadedFraction() : 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlayerState */\n  getPlayerState(): YT.PlayerState | undefined {\n    if (!isBrowser || !window.YT) {\n      return undefined;\n    }\n\n    return this._player ? this._player.getPlayerState() : YT.PlayerState.UNSTARTED;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getCurrentTime */\n  getCurrentTime(): number {\n    return this._player ? this._player.getCurrentTime() : 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackQuality */\n  getPlaybackQuality(): YT.SuggestedVideoQuality {\n    return this._player ? this._player.getPlaybackQuality() : 'default';\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getAvailableQualityLevels */\n  getAvailableQualityLevels(): YT.SuggestedVideoQuality[] {\n    return this._player ? this._player.getAvailableQualityLevels() : [];\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getDuration */\n  getDuration(): number {\n    return this._player ? this._player.getDuration() : 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoUrl */\n  getVideoUrl(): string {\n    return this._player ? this._player.getVideoUrl() : '';\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoEmbedCode */\n  getVideoEmbedCode(): string {\n    return this._player ? this._player.getVideoEmbedCode() : '';\n  }\n}\n\n/** Listens to changes to the given width and height and sets it on the player. */\nfunction bindSizeToPlayer(\n  playerObs: Observable<YT.Player | undefined>,\n  widthObs: Observable<number>,\n  heightObs: Observable<number>\n) {\n  return combineLatest([playerObs, widthObs, heightObs])\n      .subscribe(([player, width, height]) => player && player.setSize(width, height));\n}\n\n/** Listens to changes from the suggested quality and sets it on the given player. */\nfunction bindSuggestedQualityToPlayer(\n  playerObs: Observable<YT.Player | undefined>,\n  suggestedQualityObs: Observable<YT.SuggestedVideoQuality | undefined>\n) {\n  return combineLatest([\n    playerObs,\n    suggestedQualityObs\n  ]).subscribe(\n    ([player, suggestedQuality]) =>\n        player && suggestedQuality && player.setPlaybackQuality(suggestedQuality));\n}\n\n/**\n * Returns an observable that emits the loaded player once it's ready. Certain properties/methods\n * won't be available until the iframe finishes loading.\n */\nfunction waitUntilReady()\n    : OperatorFunction<UninitializedPlayer | undefined, Player | undefined> {\n  return flatMap(player => {\n      if (!player) {\n        return observableOf<Player|undefined>(undefined);\n      }\n      if ('getPlayerStatus' in player) {\n        return observableOf(player as Player);\n      }\n      // The player is not initialized fully until the ready is called.\n      return fromPlayerOnReady(player)\n          .pipe(first(), startWith(undefined));\n    });\n}\n\n/** Since removeEventListener is not on Player when it's initialized, we can't use fromEvent. */\nfunction fromPlayerOnReady(player: UninitializedPlayer): Observable<Player> {\n  return new Observable<Player>(emitter => {\n    let aborted = false;\n\n    const onReady = (event: YT.PlayerEvent) => {\n      if (aborted) {\n        return;\n      }\n      event.target.removeEventListener('onReady', onReady);\n      emitter.next(event.target);\n    };\n\n    player.addEventListener('onReady', onReady);\n\n    return () => {\n      aborted = true;\n    };\n  });\n}\n\n/** Create an observable for the player based on the given options. */\nfunction createPlayerObservable(\n  youtubeContainer: Observable<HTMLElement>,\n  videoIdObs: Observable<string | undefined>,\n  iframeApiAvailableObs: Observable<boolean>,\n  widthObs: Observable<number>,\n  heightObs: Observable<number>,\n  events: YT.Events,\n): Observable<UninitializedPlayer | undefined> {\n\n  const playerOptions =\n    videoIdObs\n    .pipe(\n      withLatestFrom(combineLatest([widthObs, heightObs])),\n      map(([videoId, [width, height]]) => videoId ? ({videoId, width, height, events}) : undefined),\n    );\n\n  return combineLatest([youtubeContainer, playerOptions])\n      .pipe(\n        skipUntilRememberLatest(iframeApiAvailableObs),\n        scan(syncPlayerState, undefined),\n        distinctUntilChanged());\n}\n\n/** Skips the given observable until the other observable emits true, then emit the latest. */\nfunction skipUntilRememberLatest<T>(notifier: Observable<boolean>): MonoTypeOperatorFunction<T> {\n  return pipe(\n    combineLatestOp(notifier),\n    skipWhile(([_, doneSkipping]) => !doneSkipping),\n    map(([value]) => value));\n}\n\n/** Destroy the player if there are no options, or create the player if there are options. */\nfunction syncPlayerState(\n  player: UninitializedPlayer | undefined,\n  [container, videoOptions]: [HTMLElement, YT.PlayerOptions | undefined],\n): UninitializedPlayer | undefined {\n  if (!videoOptions) {\n    if (player) {\n      player.destroy();\n    }\n    return;\n  }\n  if (player) {\n    return player;\n  }\n\n  const newPlayer: UninitializedPlayer = new YT.Player(container, videoOptions);\n  // Bind videoId for future use.\n  newPlayer.videoId = videoOptions.videoId;\n  return newPlayer;\n}\n\n/**\n * Call cueVideoById if the videoId changes, or when start or end seconds change. cueVideoById will\n * change the loaded video id to the given videoId, and set the start and end times to the given\n * start/end seconds.\n */\nfunction bindCueVideoCall(\n  playerObs: Observable<Player | undefined>,\n  videoIdObs: Observable<string | undefined>,\n  startSecondsObs: Observable<number | undefined>,\n  endSecondsObs: Observable<number | undefined>,\n  suggestedQualityObs: Observable<YT.SuggestedVideoQuality | undefined>,\n  destroyed: Observable<undefined>,\n) {\n  const cueOptionsObs = combineLatest([startSecondsObs, endSecondsObs])\n    .pipe(map(([startSeconds, endSeconds]) => ({startSeconds, endSeconds})));\n\n  // Only respond to changes in cue options if the player is not running.\n  const filteredCueOptions = cueOptionsObs\n    .pipe(filterOnOther(playerObs, player => !!player && !hasPlayerStarted(player)));\n\n  // If the video id changed, there's no reason to run 'cue' unless the player\n  // was initialized with a different video id.\n  const changedVideoId = videoIdObs\n      .pipe(filterOnOther(playerObs, (player, videoId) => !!player && player.videoId !== videoId));\n\n  // If the player changed, there's no reason to run 'cue' unless there are cue options.\n  const changedPlayer = playerObs.pipe(\n    filterOnOther(\n      combineLatest([videoIdObs, cueOptionsObs]),\n      ([videoId, cueOptions], player) =>\n          !!player &&\n            (videoId != player.videoId || !!cueOptions.startSeconds || !!cueOptions.endSeconds)));\n\n  merge(changedPlayer, changedVideoId, filteredCueOptions)\n    .pipe(\n      withLatestFrom(combineLatest([playerObs, videoIdObs, cueOptionsObs, suggestedQualityObs])),\n      map(([_, values]) => values),\n      takeUntil(destroyed),\n    )\n    .subscribe(([player, videoId, cueOptions, suggestedQuality]) => {\n      if (!videoId || !player) {\n        return;\n      }\n      player.videoId = videoId;\n      player.cueVideoById({\n        videoId,\n        suggestedQuality,\n        ...cueOptions,\n      });\n    });\n}\n\nfunction hasPlayerStarted(player: YT.Player): boolean {\n  return [YT.PlayerState.UNSTARTED, YT.PlayerState.CUED].indexOf(player.getPlayerState()) === -1;\n}\n\n/** Combines the two observables temporarily for the filter function. */\nfunction filterOnOther<R, T>(\n  otherObs: Observable<T>,\n  filterFn: (t: T, r?: R) => boolean,\n): MonoTypeOperatorFunction<R> {\n  return pipe(\n    withLatestFrom(otherObs),\n    filter(([value, other]) => filterFn(other, value)),\n    map(([value]) => value),\n  );\n}\n"],"names":["tslib_1.__assign","observableOf"],"mappings":"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"}