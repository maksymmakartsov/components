{"version":3,"file":"cdk-experimental-popover-edit.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/cdk-experimental/popover-edit/polyfill.ts","../../src/cdk-experimental/popover-edit/edit-event-dispatcher.ts","../../src/cdk-experimental/popover-edit/constants.ts","../../src/cdk-experimental/popover-edit/edit-ref.ts","../../src/cdk-experimental/popover-edit/focus-dispatcher.ts","../../src/cdk-experimental/popover-edit/form-value-container.ts","../../src/cdk-experimental/popover-edit/lens-directives.ts","../../src/cdk-experimental/popover-edit/popover-edit-position-strategy-factory.ts","../../src/cdk-experimental/popover-edit/edit-services.ts","../../src/cdk-experimental/popover-edit/focus-escape-notifier.ts","../../src/cdk-experimental/popover-edit/table-directives.ts","../../src/cdk-experimental/popover-edit/popover-edit-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IE 11 compatible matches implementation. */\nexport function matches(element: Element, selector: string): boolean {\n  return element.matches ?\n      element.matches(selector) :\n      (element as any)['msMatchesSelector'](selector);\n}\n\n/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */\nexport function closest(element: EventTarget|Element|null|undefined, selector: string):\n    Element|null {\n  if (!(element instanceof Node)) { return null; }\n\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element)) {\n    curr = curr.parentNode;\n  }\n\n  return curr && (hasNativeClosest ?\n      curr.closest(selector) : polyfillClosest(curr, selector)) as Element|null;\n}\n\n/** Polyfill for browsers without Element.closest. */\nfunction polyfillClosest(element: Element, selector: string): Element|null {\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n    curr = curr.parentNode;\n  }\n\n  return (curr || null) as Element|null;\n}\n\nconst hasNativeClosest = !!Element.prototype.closest;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {combineLatest, MonoTypeOperatorFunction, Observable, pipe, Subject} from 'rxjs';\nimport {\n  audit,\n  auditTime,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  share,\n  skip,\n  startWith,\n} from 'rxjs/operators';\n\nimport {CELL_SELECTOR, ROW_SELECTOR} from './constants';\nimport {closest} from './polyfill';\nimport {EditRef} from './edit-ref';\n\n/** The delay applied to mouse events before hiding or showing hover content. */\nconst MOUSE_EVENT_DELAY_MS = 40;\n\n/** The delay for reacting to focus/blur changes. */\nconst FOCUS_DELAY = 0;\n\n/**\n * The possible states for hover content:\n * OFF - Not rendered.\n * FOCUSABLE - Rendered in the dom and stylyed for its contents to be focusable but invisible.\n * ON - Rendered and fully visible.\n */\nexport const enum HoverContentState {\n  OFF = 0,\n  FOCUSABLE,\n  ON,\n}\n\n/**\n * Service for sharing delegated events and state for triggering table edits.\n */\n@Injectable()\nexport class EditEventDispatcher {\n  /** A subject that indicates which table cell is currently editing. */\n  readonly editing = new Subject<Element|null>();\n\n  /** A subject that indicates which table row is currently hovered. */\n  readonly hovering = new Subject<Element|null>();\n\n  /** A subject that indicates which table row currently contains focus. */\n  readonly focused = new Subject<Element|null>();\n\n  /** A subject that indicates all elements in the table matching ROW_SELECTOR. */\n  readonly allRows = new Subject<NodeList>();\n\n  /** A subject that emits mouse move events from the table indicating the targeted row. */\n  readonly mouseMove = new Subject<Element|null>();\n\n  /** The EditRef for the currently active edit lens (if any). */\n  get editRef(): EditRef<any>|null {\n    return this._editRef;\n  }\n  private _editRef: EditRef<any>|null = null;\n\n  // Optimization: Precompute common pipeable operators used per row/cell.\n  private readonly _distinctUntilChanged =\n      distinctUntilChanged<Element|HoverContentState|boolean|null>();\n  private readonly _startWithNull = startWith<Element|null>(null);\n  private readonly _distinctShare = pipe(\n    this._distinctUntilChanged as MonoTypeOperatorFunction<HoverContentState>,\n    share(),\n  );\n  private readonly _startWithNullDistinct = pipe(\n    this._startWithNull,\n    this._distinctUntilChanged as MonoTypeOperatorFunction<Element|null>,\n  );\n\n  /** An observable that emits the row containing focus or an active edit. */\n  readonly editingOrFocused = combineLatest([\n      this.editing.pipe(\n          map(cell => closest(cell, ROW_SELECTOR)),\n          this._startWithNull,\n      ),\n      this.focused.pipe(this._startWithNull),\n  ]).pipe(\n      map(([editingRow, focusedRow]) => focusedRow || editingRow),\n      this._distinctUntilChanged as MonoTypeOperatorFunction<Element|null>,\n      auditTime(FOCUS_DELAY), // Use audit to skip over blur events to the next focused element.\n      this._distinctUntilChanged as MonoTypeOperatorFunction<Element|null>,\n      share(),\n  );\n\n  /** Tracks rows that contain hover content with a reference count. */\n  private _rowsWithHoverContent = new WeakMap<Element, number>();\n\n  /** The table cell that has an active edit lens (or null). */\n  private _currentlyEditing: Element|null = null;\n\n  /** The combined set of row hover content states organized by row. */\n  private readonly _hoveredContentStateDistinct = combineLatest([\n      this._getFirstRowWithHoverContent(),\n      this._getLastRowWithHoverContent(),\n      this.editingOrFocused,\n      this.hovering.pipe(\n          distinctUntilChanged(),\n          audit(row => this.mouseMove.pipe(\n              filter(mouseMoveRow => row === mouseMoveRow),\n              this._startWithNull,\n              debounceTime(MOUSE_EVENT_DELAY_MS)),\n          ),\n          this._startWithNullDistinct,\n      ),\n  ]).pipe(\n      skip(1), // Skip the initial emission of [null, null, null, null].\n      map(computeHoverContentState),\n      distinctUntilChanged(areMapEntriesEqual),\n      // Optimization: Enter the zone before share() so that we trigger a single\n      // ApplicationRef.tick for all row updates.\n      this._enterZone(),\n      share(),\n  );\n\n  private readonly _editingDistinct = this.editing.pipe(\n      distinctUntilChanged(),\n      this._enterZone(),\n      share(),\n  );\n\n  // Optimization: Share row events observable with subsequent callers.\n  // At startup, calls will be sequential by row.\n  private _lastSeenRow: Element|null = null;\n  private _lastSeenRowHoverOrFocus: Observable<HoverContentState>|null = null;\n\n  constructor(private readonly _ngZone: NgZone) {\n    this._editingDistinct.subscribe(cell => {\n      this._currentlyEditing = cell;\n    });\n  }\n\n  /**\n   * Gets an Observable that emits true when the specified element's cell\n   * is editing and false when not.\n   */\n  editingCell(element: Element|EventTarget): Observable<boolean> {\n    let cell: Element|null = null;\n\n    return this._editingDistinct.pipe(\n        map(editCell => editCell === (cell || (cell = closest(element, CELL_SELECTOR)))),\n        this._distinctUntilChanged as MonoTypeOperatorFunction<boolean>,\n    );\n  }\n\n  /**\n   * Stops editing for the specified cell. If the specified cell is not the current\n   * edit cell, does nothing.\n   */\n  doneEditingCell(element: Element|EventTarget): void {\n    const cell = closest(element, CELL_SELECTOR);\n\n    if (this._currentlyEditing === cell) {\n      this.editing.next(null);\n    }\n  }\n\n  /** Sets the currently active EditRef. */\n  setActiveEditRef(ref: EditRef<any>) {\n    this._editRef = ref;\n  }\n\n  /** Unsets the currently active EditRef, if the specified editRef is active. */\n  unsetActiveEditRef(ref: EditRef<any>) {\n    if (this._editRef !== ref) {\n      return;\n    }\n\n    this._editRef = null;\n  }\n\n  /** Adds the specified table row to be tracked for first/last row comparisons. */\n  registerRowWithHoverContent(row: Element): void {\n    this._rowsWithHoverContent.set(row, (this._rowsWithHoverContent.get(row) || 0) + 1);\n  }\n\n  /**\n   * Reference decrements and ultimately removes the specified table row from first/last row\n   * comparisons.\n   */\n  deregisterRowWithHoverContent(row: Element): void {\n    const refCount = this._rowsWithHoverContent.get(row) || 0;\n\n    if (refCount <= 1) {\n      this._rowsWithHoverContent.delete(row);\n    } else {\n      this._rowsWithHoverContent.set(row, refCount - 1);\n    }\n  }\n\n  /**\n   * Gets an Observable that emits true when the specified element's row\n   * contains the focused element or is being hovered over and false when not.\n   * Hovering is defined as when the mouse has momentarily stopped moving over the cell.\n   */\n  hoverOrFocusOnRow(row: Element): Observable<HoverContentState> {\n    if (row !== this._lastSeenRow) {\n      this._lastSeenRow = row;\n      this._lastSeenRowHoverOrFocus = this._hoveredContentStateDistinct.pipe(\n        map(state => state.get(row) || HoverContentState.OFF),\n        this._distinctShare,\n      );\n    }\n\n    return this._lastSeenRowHoverOrFocus!;\n  }\n\n  /**\n   * RxJS operator that enters the Angular zone, used to reduce boilerplate in\n   * re-entering the zone for stream pipelines.\n   */\n  private _enterZone<T>(): MonoTypeOperatorFunction<T> {\n    return (source: Observable<T>) =>\n        new Observable<T>((observer) => source.subscribe({\n             next: (value) => this._ngZone.run(() => observer.next(value)),\n             error: (err) => observer.error(err),\n             complete: () => observer.complete()\n           }));\n  }\n\n  private _getFirstRowWithHoverContent(): Observable<Element|null> {\n    return this._mapAllRowsToSingleRow(rows => {\n      for (let i = 0, row; row = rows[i]; i++) {\n        if (this._rowsWithHoverContent.has(row as Element)) {\n          return row as Element;\n        }\n      }\n      return null;\n    });\n  }\n\n  private _getLastRowWithHoverContent(): Observable<Element|null> {\n    return this._mapAllRowsToSingleRow(rows => {\n      for (let i = rows.length - 1, row; row = rows[i]; i--) {\n        if (this._rowsWithHoverContent.has(row as Element)) {\n          return row as Element;\n        }\n      }\n      return null;\n    });\n  }\n\n  private _mapAllRowsToSingleRow(mapper: (rows: NodeList) => Element|null):\n      Observable<Element|null> {\n    return this.allRows.pipe(\n        map(mapper),\n        this._startWithNullDistinct,\n    );\n  }\n}\n\nfunction computeHoverContentState([firstRow, lastRow, activeRow, hoverRow]: Array<Element|null>):\n     Map<Element, HoverContentState> {\n  const hoverContentState = new Map<Element, HoverContentState>();\n\n  // Add focusable rows.\n  for (const focussableRow of [\n    firstRow,\n    lastRow,\n    activeRow && activeRow.previousElementSibling,\n    activeRow && activeRow.nextElementSibling,\n  ]) {\n    if (focussableRow) {\n      hoverContentState.set(focussableRow as Element, HoverContentState.FOCUSABLE);\n    }\n  }\n\n  // Add/overwrite with fully visible rows.\n  for (const onRow of [activeRow, hoverRow]) {\n    if (onRow) {\n      hoverContentState.set(onRow, HoverContentState.ON);\n    }\n  }\n\n  return hoverContentState;\n}\n\nfunction areMapEntriesEqual<K, V>(a: Map<K, V>, b: Map<K, V>): boolean {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  // TODO: use Map.prototype.entries once we're off IE11.\n  for (const aKey of Array.from(a.keys())) {\n    if (b.get(aKey) !== a.get(aKey)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Selector for finding table cells. */\nexport const CELL_SELECTOR = '.cdk-cell, .mat-cell, td';\n\n/** Selector for finding editable table cells. */\nexport const EDITABLE_CELL_SELECTOR = '.cdk-popover-edit-cell, .mat-popover-edit-cell';\n\n/** Selector for finding table rows. */\nexport const ROW_SELECTOR = '.cdk-row, .mat-row, tr';\n\n/** Selector for finding the table element. */\nexport const TABLE_SELECTOR = 'table, cdk-table, mat-table';\n\n/** CSS class added to the edit lens pane. */\nexport const EDIT_PANE_CLASS = 'cdk-edit-pane';\n\n/** Selector for finding the edit lens pane. */\nexport const EDIT_PANE_SELECTOR = `.${EDIT_PANE_CLASS}, .mat-edit-pane`;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, OnDestroy, Self, NgZone} from '@angular/core';\nimport {ControlContainer} from '@angular/forms';\nimport {Observable, Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {EditEventDispatcher} from './edit-event-dispatcher';\n\n/**\n * Used for communication between the form within the edit lens and the\n * table that launched it. Provided by CdkEditControl within the lens.\n */\n@Injectable()\nexport class EditRef<FormValue> implements OnDestroy {\n  /** Emits the final value of this edit instance before closing. */\n  private readonly _finalValueSubject = new Subject<FormValue>();\n  readonly finalValue: Observable<FormValue> = this._finalValueSubject.asObservable();\n\n  /** Emits when the user tabs out of this edit lens before closing. */\n  private readonly _blurredSubject = new Subject<void>();\n  readonly blurred: Observable<void> = this._blurredSubject.asObservable();\n\n  /** The value to set the form back to on revert. */\n  private _revertFormValue: FormValue;\n\n  constructor(\n      @Self() private readonly _form: ControlContainer,\n      private readonly _editEventDispatcher: EditEventDispatcher,\n      private readonly _ngZone: NgZone) {\n    this._editEventDispatcher.setActiveEditRef(this);\n  }\n\n  /**\n   * Called by the host directive's OnInit hook. Reads the initial state of the\n   * form and overrides it with persisted state from previous openings, if\n   * applicable.\n   */\n  init(previousFormValue: FormValue|undefined): void {\n    // Wait for the zone to stabilize before caching the initial value.\n    // This ensures that all form controls have been initialized.\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this.updateRevertValue();\n      if (previousFormValue) {\n        this.reset(previousFormValue);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._editEventDispatcher.unsetActiveEditRef(this);\n    this._finalValueSubject.next(this._form.value);\n    this._finalValueSubject.complete();\n  }\n\n  /** Whether the attached form is in a valid state. */\n  isValid(): boolean|null {\n    return this._form.valid;\n  }\n\n  /** Set the form's current value as what it will be set to on revert/reset. */\n  updateRevertValue(): void {\n    this._revertFormValue = this._form.value;\n  }\n\n  /** Tells the table to close the edit popup. */\n  close(): void {\n    this._editEventDispatcher.editing.next(null);\n  }\n\n  /** Notifies the active edit that the user has moved focus out of the lens. */\n  blur(): void {\n    this._blurredSubject.next();\n  }\n\n  /**\n   * Resets the form value to the specified value or the previously set\n   * revert value.\n   */\n  reset(value?: FormValue): void {\n    this._form.reset(value || this._revertFormValue);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {Injectable} from '@angular/core';\nimport {PartialObserver} from 'rxjs';\n\nimport {EDITABLE_CELL_SELECTOR, ROW_SELECTOR, TABLE_SELECTOR} from './constants';\nimport {closest} from './polyfill';\n\n/**\n * Service responsible for moving cell focus around in response to keyboard events.\n * May be overridden to customize the keyboard behavior of popover edit.\n */\n@Injectable({providedIn: 'root'})\nexport class FocusDispatcher {\n  /** Observes keydown events triggered from the table. */\n  readonly keyObserver: PartialObserver<KeyboardEvent>;\n\n  constructor(protected readonly directionality: Directionality) {\n    this.keyObserver = {next: (event) => this.handleKeyboardEvent(event)};\n  }\n\n  /**\n   * Moves focus to earlier or later cells (in dom order) by offset cells relative to\n   * currentCell.\n   */\n  moveFocusHorizontally(currentCell: HTMLElement, offset: number): void {\n    const cells = Array.from(closest(currentCell, TABLE_SELECTOR)!.querySelectorAll(\n                      EDITABLE_CELL_SELECTOR)) as HTMLElement[];\n    const currentIndex = cells.indexOf(currentCell);\n    const newIndex = currentIndex + offset;\n\n    if (cells[newIndex]) {\n      cells[newIndex].focus();\n    }\n  }\n\n  /** Moves focus to up or down by row by offset cells relative to currentCell. */\n  moveFocusVertically(currentCell: HTMLElement, offset: number): void {\n    const currentRow = closest(currentCell, ROW_SELECTOR)!;\n    const rows = Array.from(closest(currentRow, TABLE_SELECTOR)!.querySelectorAll(ROW_SELECTOR));\n    const currentRowIndex = rows.indexOf(currentRow);\n    const currentIndexWithinRow =\n        Array.from(currentRow.querySelectorAll(EDITABLE_CELL_SELECTOR)).indexOf(currentCell);\n    const newRowIndex = currentRowIndex + offset;\n\n    if (rows[newRowIndex]) {\n      const rowToFocus =\n          Array.from(rows[newRowIndex].querySelectorAll(EDITABLE_CELL_SELECTOR)) as HTMLElement[];\n\n      if (rowToFocus[currentIndexWithinRow]) {\n        rowToFocus[currentIndexWithinRow].focus();\n      }\n    }\n  }\n\n  /** Translates arrow keydown events into focus move operations. */\n  protected handleKeyboardEvent(event: KeyboardEvent): void {\n    const cell = closest(event.target, EDITABLE_CELL_SELECTOR) as HTMLElement | null;\n\n    if (!cell) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case UP_ARROW:\n        this.moveFocusVertically(cell, -1);\n        break;\n      case DOWN_ARROW:\n        this.moveFocusVertically(cell, 1);\n        break;\n      case LEFT_ARROW:\n        this.moveFocusHorizontally(cell, this.directionality.value === 'ltr' ? -1 : 1);\n        break;\n      case RIGHT_ARROW:\n        this.moveFocusHorizontally(cell, this.directionality.value === 'ltr' ? 1 : -1);\n        break;\n      default:\n        // If the keyboard event is not handled, return now so that we don't `preventDefault`.\n        return;\n    }\n\n    event.preventDefault();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface Entry<FormValue> {\n  value?: FormValue;\n}\n\n/**\n * A convenience class for preserving unsaved form state while an edit lens is closed.\n *\n * Example usage:\n * class MyComponent {\n *   readonly nameEditValues = new FormValueContainer&lt;Item, {name: string}&gt;();\n * }\n *\n * &lt;form cdkEditControl [(cdkEditControlPreservedFormValue)]=\"nameEditValues.for(item).value\"&gt;\n */\nexport class FormValueContainer<Key extends object, FormValue> {\n  private _formValues = new WeakMap<Key, Entry<FormValue>>();\n\n  for(key: Key): Entry<FormValue> {\n    const _formValues = this._formValues;\n\n    let entry = _formValues.get(key);\n    if (!entry) {\n      // Expose entry as an object so that we can [(two-way)] bind to its value member\n      entry = {};\n      _formValues.set(key, entry);\n    }\n\n    return entry;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReplaySubject} from 'rxjs';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Input,\n  HostListener,\n} from '@angular/core';\nimport {hasModifierKey} from '@angular/cdk/keycodes';\nimport {EDIT_PANE_SELECTOR} from './constants';\nimport {closest} from './polyfill';\nimport {EditRef} from './edit-ref';\n\n/** Options for what do to when the user clicks outside of an edit lens. */\nexport type PopoverEditClickOutBehavior = 'close' | 'submit' | 'noop';\n\n/**\n * A directive that attaches to a form within the edit lens.\n * It coordinates the form state with the table-wide edit system and handles\n * closing the edit lens when the form is submitted or the user clicks\n * out.\n */\n@Directive({\n  selector: 'form[cdkEditControl]',\n  inputs: [\n    'clickOutBehavior: cdkEditControlClickOutBehavior',\n    'preservedFormValue: cdkEditControlPreservedFormValue',\n    'ignoreSubmitUnlessValid: cdkEditControlIgnoreSubmitUnlessValid',\n  ],\n  outputs: ['preservedFormValueChange: cdkEditControlPreservedFormValueChange'],\n  providers: [EditRef],\n})\nexport class CdkEditControl<FormValue> implements OnDestroy, OnInit {\n  protected readonly destroyed = new ReplaySubject<void>();\n\n  /**\n   * Specifies what should happen when the user clicks outside of the edit lens.\n   * The default behavior is to close the lens without submitting the form.\n   */\n  clickOutBehavior: PopoverEditClickOutBehavior = 'close';\n\n  /**\n   * A two-way binding for storing unsubmitted form state. If not provided\n   * then form state will be discarded on close. The PeristBy directive is offered\n   * as a convenient shortcut for these bindings.\n   */\n  preservedFormValue?: FormValue;\n  readonly preservedFormValueChange = new EventEmitter<FormValue>();\n\n  /**\n   * Determines whether the lens will close on form submit if the form is not in a valid\n   * state. By default the lens will remain open.\n   */\n  ignoreSubmitUnlessValid = true;\n\n  constructor(protected readonly elementRef: ElementRef, readonly editRef: EditRef<FormValue>) {}\n\n  ngOnInit(): void {\n    this.editRef.init(this.preservedFormValue);\n    this.editRef.finalValue.subscribe(this.preservedFormValueChange);\n    this.editRef.blurred.subscribe(() => this._handleBlur());\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  /**\n   * Called when the form submits. If ignoreSubmitUnlessValid is true, checks\n   * the form for validity before proceeding.\n   * Updates the revert state with the latest submitted value then closes the edit.\n   */\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('ngSubmit')\n  handleFormSubmit(): void {\n    if (this.ignoreSubmitUnlessValid && !this.editRef.isValid()) { return; }\n\n    this.editRef.updateRevertValue();\n    this.editRef.close();\n  }\n\n  /** Called on Escape keyup. Closes the edit. */\n  close(): void {\n    // todo - allow this behavior to be customized as well, such as calling\n    // reset before close\n    this.editRef.close();\n  }\n\n  /**\n   * Called on click anywhere in the document.\n   * If the click was outside of the lens, trigger the specified click out behavior.\n   */\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('document:click', ['$event'])\n  handlePossibleClickOut(evt: Event): void {\n    if (closest(evt.target, EDIT_PANE_SELECTOR)) { return; }\n    switch (this.clickOutBehavior) {\n      case 'submit':\n        // Manually cause the form to submit before closing.\n        this._triggerFormSubmit();\n        this.editRef.close();\n        break;\n      case 'close':\n        this.editRef.close();\n        break;\n      default:\n        break;\n    }\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('keydown', ['$event'])\n  _handleKeydown(event: KeyboardEvent) {\n    if (event.key === 'Escape' && !hasModifierKey(event)) {\n      this.close();\n      event.preventDefault();\n    }\n  }\n\n  /** Triggers submit on tab out if clickOutBehavior is 'submit'. */\n  private _handleBlur(): void {\n    if (this.clickOutBehavior === 'submit') {\n      // Manually cause the form to submit before closing.\n      this._triggerFormSubmit();\n    }\n  }\n\n  private _triggerFormSubmit() {\n    this.elementRef.nativeElement!.dispatchEvent(new Event('submit'));\n  }\n}\n\n/** Reverts the form to its initial or previously submitted state on click. */\n@Directive({\n  selector: 'button[cdkEditRevert]',\n  host: {\n    'type': 'button', // Prevents accidental form submits.\n  }\n})\nexport class CdkEditRevert<FormValue> {\n  /** Type of the button. Defaults to `button` to avoid accident form submits. */\n  @Input() type: string = 'button';\n\n  constructor(\n      protected readonly editRef: EditRef<FormValue>) {}\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('click')\n  revertEdit(): void {\n    this.editRef.reset();\n  }\n}\n\n/** Closes the lens on click. */\n@Directive({\n  selector: 'button[cdkEditClose]',\n  host: {\n    'type': 'button', // Prevents accidental form submits.\n  }\n})\nexport class CdkEditClose<FormValue> {\n  /** Type of the button. Defaults to `button` to avoid accident form submits. */\n  @Input() type: string = 'button';\n\n  constructor(\n      protected readonly editRef: EditRef<FormValue>) {}\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('click')\n  closeEdit(): void {\n    // Note that we use `click` here, rather than a keyboard event, because some screen readers\n    // will emit a fake click event instead of an enter keyboard event on buttons.\n    this.editRef.close();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay, OverlaySizeConfig, PositionStrategy} from '@angular/cdk/overlay';\nimport {Injectable} from '@angular/core';\n\n/**\n * Overridable factory responsible for configuring how cdkPopoverEdit popovers are positioned\n * and sized.\n */\n@Injectable()\nexport abstract class PopoverEditPositionStrategyFactory {\n  /**\n   * Creates a PositionStrategy based on the specified table cells.\n   * The cells will be provided in DOM order.\n   */\n  abstract positionStrategyForCells(cells: HTMLElement[]): PositionStrategy;\n\n  /**\n   * Creates an OverlaySizeConfig based on the specified table cells.\n   * The cells will be provided in DOM order.\n   */\n  abstract sizeConfigForCells(cells: HTMLElement[]): OverlaySizeConfig;\n}\n\n/**\n * Default implementation of PopoverEditPositionStrategyFactory.\n * Uses a FlexibleConnectedPositionStrategy anchored to the start + top of the cell.\n * Note: This will change to CoverPositionStrategy once it implemented.\n */\n@Injectable()\nexport class DefaultPopoverEditPositionStrategyFactory extends PopoverEditPositionStrategyFactory {\n  constructor(protected readonly direction: Directionality, protected readonly overlay: Overlay) {\n    super();\n  }\n\n  positionStrategyForCells(cells: HTMLElement[]): PositionStrategy {\n    return this.overlay.position()\n        .flexibleConnectedTo(cells[0])\n        .withGrowAfterOpen()\n        .withPush()\n        .withViewportMargin(16)\n        .withPositions([{\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'top',\n        }]);\n  }\n\n  sizeConfigForCells(cells: HTMLElement[]): OverlaySizeConfig {\n    if (cells.length === 0) {\n      return {};\n    }\n\n    if (cells.length === 1) {\n      return {width: cells[0].getBoundingClientRect().width};\n    }\n\n    let firstCell, lastCell;\n    if (this.direction.value === 'ltr') {\n      firstCell = cells[0];\n      lastCell = cells[cells.length - 1];\n    } else {\n      lastCell = cells[0];\n      firstCell = cells[cells.length - 1];\n    }\n\n    return {width: lastCell.getBoundingClientRect().right - firstCell.getBoundingClientRect().left};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {FocusTrapFactory} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay} from '@angular/cdk/overlay';\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\n\nimport {EditEventDispatcher} from './edit-event-dispatcher';\nimport {FocusDispatcher} from './focus-dispatcher';\nimport {PopoverEditPositionStrategyFactory} from './popover-edit-position-strategy-factory';\n\n/**\n * Optimization\n * Collects multiple Injectables into a singleton shared across the table. By reducing the\n * number of services injected into each CdkPopoverEdit, this saves about 0.023ms of cpu time\n * and 56 bytes of memory per instance.\n */\n@Injectable()\nexport class EditServices {\n  constructor(\n      readonly directionality: Directionality,\n      readonly editEventDispatcher: EditEventDispatcher, readonly focusDispatcher: FocusDispatcher,\n      readonly focusTrapFactory: FocusTrapFactory, readonly ngZone: NgZone,\n      readonly overlay: Overlay, readonly positionFactory: PopoverEditPositionStrategyFactory,\n      readonly scrollDispatcher: ScrollDispatcher, readonly viewportRuler: ViewportRuler) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {FocusTrap, InteractivityChecker} from '@angular/cdk/a11y';\nimport {Observable, Subject} from 'rxjs';\n\n/** Value indicating whether focus left the target area before or after the enclosed elements. */\nexport const enum FocusEscapeNotifierDirection {\n  START,\n  END,\n}\n\n/**\n * Like FocusTrap, but rather than trapping focus within a dom region, notifies subscribers when\n * focus leaves the region.\n */\nexport class FocusEscapeNotifier extends FocusTrap {\n  private _escapeSubject = new Subject<FocusEscapeNotifierDirection>();\n\n  constructor(\n      element: HTMLElement,\n      checker: InteractivityChecker,\n      ngZone: NgZone,\n      document: Document) {\n    super(element, checker, ngZone, document, true /* deferAnchors */);\n\n    // The focus trap adds \"anchors\" at the beginning and end of a trapped region that redirect\n    // focus. We override that redirect behavior here with simply emitting on a stream.\n    this.startAnchorListener = () => {\n      this._escapeSubject.next(FocusEscapeNotifierDirection.START);\n      return true;\n    };\n    this.endAnchorListener = () => {\n      this._escapeSubject.next(FocusEscapeNotifierDirection.END);\n      return true;\n    };\n\n    this.attachAnchors();\n  }\n\n  escapes(): Observable<FocusEscapeNotifierDirection> {\n    return this._escapeSubject.asObservable();\n  }\n}\n\n/** Factory that allows easy instantiation of focus escape notifiers. */\n@Injectable({providedIn: 'root'})\nexport class FocusEscapeNotifierFactory {\n  private _document: Document;\n\n  constructor(\n      private _checker: InteractivityChecker,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n  }\n\n  /**\n   * Creates a focus escape notifier region around the given element.\n   * @param element The element around which focus will be monitored.\n   * @returns The created focus escape notifier instance.\n   */\n  create(element: HTMLElement): FocusEscapeNotifier {\n    return new FocusEscapeNotifier(element, this._checker, this._ngZone, this._document);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {FocusTrap} from '@angular/cdk/a11y';\nimport {OverlayRef, PositionStrategy} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  NgZone,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n  HostListener,\n} from '@angular/core';\nimport {fromEvent, fromEventPattern, merge, ReplaySubject} from 'rxjs';\nimport {\n  filter,\n  map,\n  mapTo,\n  share,\n  startWith,\n  takeUntil,\n  throttleTime,\n  withLatestFrom,\n} from 'rxjs/operators';\n\nimport {CELL_SELECTOR, EDIT_PANE_CLASS, EDIT_PANE_SELECTOR, ROW_SELECTOR} from './constants';\nimport {EditEventDispatcher, HoverContentState} from './edit-event-dispatcher';\nimport {EditServices} from './edit-services';\nimport {FocusDispatcher} from './focus-dispatcher';\nimport {\n  FocusEscapeNotifier,\n  FocusEscapeNotifierDirection,\n  FocusEscapeNotifierFactory\n} from './focus-escape-notifier';\nimport {closest} from './polyfill';\n\n/**\n * Describes the number of columns before and after the originating cell that the\n * edit popup should span. In left to right locales, before means left and after means\n * right. In right to left locales before means right and after means left.\n */\nexport interface CdkPopoverEditColspan {\n  before?: number;\n  after?: number;\n}\n\n/** Used for rate-limiting mousemove events. */\nconst MOUSE_MOVE_THROTTLE_TIME_MS = 10;\n\n/**\n * A directive that must be attached to enable editability on a table.\n * It is responsible for setting up delegated event handlers and providing the\n * EditEventDispatcher service for use by the other edit directives.\n */\n@Directive({\n  selector: 'table[editable], cdk-table[editable], mat-table[editable]',\n  providers: [EditEventDispatcher, EditServices],\n})\nexport class CdkEditable implements AfterViewInit, OnDestroy {\n  protected readonly destroyed = new ReplaySubject<void>();\n\n  constructor(\n      protected readonly elementRef: ElementRef,\n      protected readonly editEventDispatcher: EditEventDispatcher,\n      protected readonly focusDispatcher: FocusDispatcher, protected readonly ngZone: NgZone) {}\n\n  ngAfterViewInit(): void {\n    this._listenForTableEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  private _listenForTableEvents(): void {\n    const element = this.elementRef.nativeElement;\n    const toClosest = (selector: string) =>\n        map((event: UIEvent) => closest(event.target, selector));\n\n    this.ngZone.runOutsideAngular(() => {\n      // Track mouse movement over the table to hide/show hover content.\n      fromEvent<MouseEvent>(element, 'mouseover').pipe(\n          toClosest(ROW_SELECTOR),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.hovering);\n      fromEvent<MouseEvent>(element, 'mouseleave').pipe(\n          mapTo(null),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.hovering);\n      fromEvent<MouseEvent>(element, 'mousemove').pipe(\n          throttleTime(MOUSE_MOVE_THROTTLE_TIME_MS),\n          toClosest(ROW_SELECTOR),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.mouseMove);\n\n      // Track focus within the table to hide/show/make focusable hover content.\n      fromEventPattern<FocusEvent>(\n          (handler) => element.addEventListener('focus', handler, true),\n          (handler) => element.removeEventListener('focus', handler, true)\n          ).pipe(\n              takeUntil(this.destroyed),\n              toClosest(ROW_SELECTOR),\n              share(),\n              ).subscribe(this.editEventDispatcher.focused);\n      fromEventPattern<FocusEvent>(\n          (handler) => element.addEventListener('blur', handler, true),\n          (handler) => element.removeEventListener('blur', handler, true)\n          ).pipe(\n              takeUntil(this.destroyed),\n              mapTo(null),\n              share(),\n              ).subscribe(this.editEventDispatcher.focused);\n\n      // Keep track of rows within the table. This is used to know which rows with hover content\n      // are first or last in the table. They are kept focusable in case focus enters from above\n      // or below the table.\n      this.ngZone.onStable.pipe(\n          takeUntil(this.destroyed),\n          // Optimization: ignore dom changes while focus is within the table as we already\n          // ensure that rows above and below the focused/active row are tabbable.\n          withLatestFrom(this.editEventDispatcher.editingOrFocused),\n          filter(([_, activeRow]) => activeRow == null),\n          map(() => element.querySelectorAll(ROW_SELECTOR)),\n          share(),\n          ).subscribe(this.editEventDispatcher.allRows);\n\n      fromEvent<KeyboardEvent>(element, 'keydown').pipe(\n          filter(event => event.key === 'Enter'),\n          toClosest(CELL_SELECTOR),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.editing);\n\n      // Keydown must be used here or else key autorepeat does not work properly on some platforms.\n      fromEvent<KeyboardEvent>(element, 'keydown')\n          .pipe(takeUntil(this.destroyed))\n          .subscribe(this.focusDispatcher.keyObserver);\n    });\n  }\n}\n\nconst POPOVER_EDIT_HOST_BINDINGS = {\n  'tabIndex': '0',\n  'class': 'cdk-popover-edit-cell',\n  '[attr.aria-haspopup]': 'true',\n};\n\nconst POPOVER_EDIT_INPUTS = [\n  'template: cdkPopoverEdit',\n  'context: cdkPopoverEditContext',\n  'colspan: cdkPopoverEditColspan',\n];\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[cdkPopoverEdit]:not([cdkPopoverEditTabOut])',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class CdkPopoverEdit<C> implements AfterViewInit, OnDestroy {\n  /** The edit lens template shown over the cell on edit. */\n  template: TemplateRef<any>|null = null;\n\n  /**\n   * Implicit context to pass along to the template. Can be omitted if the template\n   * is defined within the cell.\n   */\n  context?: C;\n\n  /**\n   * Specifies that the popup should cover additional table cells before and/or after\n   * this one.\n   */\n  get colspan(): CdkPopoverEditColspan {\n    return this._colspan;\n  }\n  set colspan(value: CdkPopoverEditColspan) {\n    this._colspan = value;\n\n    // Recompute positioning when the colspan changes.\n    if (this.overlayRef) {\n      this.overlayRef.updatePositionStrategy(this._getPositionStrategy());\n\n      if (this.overlayRef.hasAttached()) {\n        this._updateOverlaySize();\n      }\n    }\n  }\n  private _colspan: CdkPopoverEditColspan = {};\n\n  protected focusTrap?: FocusTrap;\n  protected overlayRef?: OverlayRef;\n  protected readonly destroyed = new ReplaySubject<void>();\n\n  constructor(\n      protected readonly services: EditServices, protected readonly elementRef: ElementRef,\n      protected readonly viewContainerRef: ViewContainerRef) {}\n\n  ngAfterViewInit(): void {\n    this._startListeningToEditEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n\n    if (this.focusTrap) {\n      this.focusTrap.destroy();\n      this.focusTrap = undefined;\n    }\n\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n    }\n  }\n\n  protected initFocusTrap(): void {\n    this.focusTrap = this.services.focusTrapFactory.create(this.overlayRef!.overlayElement);\n  }\n\n  protected closeEditOverlay(): void {\n    this.services.editEventDispatcher.doneEditingCell(this.elementRef.nativeElement!);\n  }\n\n  protected panelClass(): string {\n    return EDIT_PANE_CLASS;\n  }\n\n  private _startListeningToEditEvents(): void {\n    this.services.editEventDispatcher.editingCell(this.elementRef.nativeElement!)\n        .pipe(takeUntil(this.destroyed))\n        .subscribe((open) => {\n          if (open && this.template) {\n            if (!this.overlayRef) {\n              this._createEditOverlay();\n            }\n\n            this._showEditOverlay();\n          } else if (this.overlayRef) {\n            this._maybeReturnFocusToCell();\n\n            this.overlayRef.detach();\n          }\n        });\n  }\n\n  private _createEditOverlay(): void {\n    this.overlayRef = this.services.overlay.create({\n      disposeOnNavigation: true,\n      panelClass: this.panelClass(),\n      positionStrategy: this._getPositionStrategy(),\n      scrollStrategy: this.services.overlay.scrollStrategies.reposition(),\n      direction: this.services.directionality,\n    });\n\n    this.initFocusTrap();\n    this.overlayRef.overlayElement.setAttribute('aria-role', 'dialog');\n\n    this.overlayRef.detachments().subscribe(() => this.closeEditOverlay());\n  }\n\n  private _showEditOverlay(): void {\n    this.overlayRef!.attach(new TemplatePortal(\n        this.template!,\n        this.viewContainerRef,\n        {$implicit: this.context}));\n\n    // We have to defer trapping focus, because doing so too early can cause the form inside\n    // the overlay to be submitted immediately if it was opened on an Enter keydown event.\n    this.services.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.focusTrap!.focusInitialElement();\n      });\n    });\n\n    // Update the size of the popup initially and on subsequent changes to\n    // scroll position and viewport size.\n    merge(this.services.scrollDispatcher.scrolled(), this.services.viewportRuler.change())\n        .pipe(\n            startWith(null),\n            takeUntil(this.overlayRef!.detachments()),\n            takeUntil(this.destroyed),\n            )\n        .subscribe(() => {\n          this._updateOverlaySize();\n        });\n  }\n\n  private _getOverlayCells(): HTMLElement[] {\n    const cell = closest(this.elementRef.nativeElement!, CELL_SELECTOR) as HTMLElement;\n\n    if (!this._colspan.before && !this._colspan.after) {\n      return [cell];\n    }\n\n    const row = closest(this.elementRef.nativeElement!, ROW_SELECTOR)!;\n    const rowCells = Array.from(row.querySelectorAll(CELL_SELECTOR)) as HTMLElement[];\n    const ownIndex = rowCells.indexOf(cell);\n\n    return rowCells.slice(\n        ownIndex - (this._colspan.before || 0), ownIndex + (this._colspan.after || 0) + 1);\n  }\n\n  private _getPositionStrategy(): PositionStrategy {\n    return this.services.positionFactory.positionStrategyForCells(this._getOverlayCells());\n  }\n\n  private _updateOverlaySize(): void {\n    this.overlayRef!.updateSize(\n        this.services.positionFactory.sizeConfigForCells(this._getOverlayCells()));\n  }\n\n  private _maybeReturnFocusToCell(): void {\n    if (closest(document.activeElement, EDIT_PANE_SELECTOR) ===\n        this.overlayRef!.overlayElement) {\n      this.elementRef.nativeElement!.focus();\n    }\n  }\n}\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[cdkPopoverEdit][cdkPopoverEditTabOut]',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class CdkPopoverEditTabOut<C> extends CdkPopoverEdit<C> {\n  protected focusTrap?: FocusEscapeNotifier;\n\n  constructor(\n      elementRef: ElementRef, viewContainerRef: ViewContainerRef, services: EditServices,\n      protected readonly focusEscapeNotifierFactory: FocusEscapeNotifierFactory) {\n    super(services, elementRef, viewContainerRef);\n  }\n\n  protected initFocusTrap(): void {\n    this.focusTrap = this.focusEscapeNotifierFactory.create(this.overlayRef!.overlayElement);\n\n    this.focusTrap.escapes().pipe(takeUntil(this.destroyed)).subscribe(direction => {\n      if (this.services.editEventDispatcher.editRef) {\n        this.services.editEventDispatcher.editRef.blur();\n      }\n\n      this.services.focusDispatcher.moveFocusHorizontally(\n          closest(this.elementRef.nativeElement!, CELL_SELECTOR) as HTMLElement,\n          direction === FocusEscapeNotifierDirection.START ? -1 : 1);\n\n      this.closeEditOverlay();\n    });\n  }\n}\n\n/**\n * A structural directive that shows its contents when the table row containing\n * it is hovered or when an element in the row has focus.\n */\n@Directive({\n  selector: '[cdkRowHoverContent]',\n})\nexport class CdkRowHoverContent implements AfterViewInit, OnDestroy {\n  protected readonly destroyed = new ReplaySubject<void>();\n  protected viewRef: EmbeddedViewRef<any>|null = null;\n\n  private _row?: Element;\n\n  constructor(\n      protected readonly services: EditServices, protected readonly elementRef: ElementRef,\n      protected readonly templateRef: TemplateRef<any>,\n      protected readonly viewContainerRef: ViewContainerRef) {}\n\n  ngAfterViewInit(): void {\n    this._row = closest(this.elementRef.nativeElement!, ROW_SELECTOR)!;\n\n    this.services.editEventDispatcher.registerRowWithHoverContent(this._row);\n    this._listenForHoverAndFocusEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n\n    if (this.viewRef) {\n      this.viewRef.destroy();\n    }\n\n    if (this._row) {\n      this.services.editEventDispatcher.deregisterRowWithHoverContent(this._row);\n    }\n  }\n\n  /**\n   * Called immediately after the hover content is created and added to the dom.\n   * In the CDK version, this is a noop but subclasses such as MatRowHoverContent use this\n   * to prepare/style the inserted element.\n   */\n  protected initElement(_: HTMLElement): void {\n  }\n\n  /**\n   * Called when the hover content needs to be focusable to preserve a reasonable tab ordering\n   * but should not yet be shown.\n   */\n  protected makeElementHiddenButFocusable(element: HTMLElement): void {\n    element.style.opacity = '0';\n  }\n\n  /**\n   * Called when the hover content needs to be focusable to preserve a reasonable tab ordering\n   * but should not yet be shown.\n   */\n  protected makeElementVisible(element: HTMLElement): void {\n    element.style.opacity = '';\n  }\n\n  private _listenForHoverAndFocusEvents(): void {\n    this.services.editEventDispatcher.hoverOrFocusOnRow(this._row!)\n        .pipe(takeUntil(this.destroyed))\n        .subscribe(eventState => {\n          // When in FOCUSABLE state, add the hover content to the dom but make it transparent so\n          // that it is in the tab order relative to the currently focused row.\n\n          if (eventState === HoverContentState.ON || eventState === HoverContentState.FOCUSABLE) {\n            if (!this.viewRef) {\n              this.viewRef = this.viewContainerRef.createEmbeddedView(this.templateRef, {});\n              this.initElement(this.viewRef.rootNodes[0] as HTMLElement);\n            } else if (this.viewContainerRef.indexOf(this.viewRef) === -1) {\n              this.viewContainerRef.insert(this.viewRef!);\n            }\n\n            if (eventState === HoverContentState.ON) {\n              this.makeElementVisible(this.viewRef.rootNodes[0] as HTMLElement);\n            } else {\n              this.makeElementHiddenButFocusable(this.viewRef.rootNodes[0] as HTMLElement);\n            }\n          } else if (this.viewRef) {\n            this.viewContainerRef.detach(this.viewContainerRef.indexOf(this.viewRef));\n          }\n        });\n  }\n}\n\n/**\n * Opens the closest edit popover to this element, whether it's associated with this exact\n * element or an ancestor element.\n */\n@Directive({\n  selector: '[cdkEditOpen]',\n})\nexport class CdkEditOpen {\n  constructor(\n      protected readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly editEventDispatcher: EditEventDispatcher) {\n\n    const nativeElement = elementRef.nativeElement;\n\n    // Prevent accidental form submits.\n    if (nativeElement.nodeName === 'BUTTON' && !nativeElement.getAttribute('type')) {\n      nativeElement.setAttribute('type', 'button');\n    }\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('click', ['$event'])\n  openEdit(evt: Event): void {\n    this.editEventDispatcher.editing.next(closest(this.elementRef.nativeElement!, CELL_SELECTOR));\n    evt.stopPropagation();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {\n  CdkPopoverEdit,\n  CdkPopoverEditTabOut,\n  CdkRowHoverContent,\n  CdkEditable,\n  CdkEditOpen\n} from './table-directives';\nimport {CdkEditControl,\n  CdkEditRevert,\n  CdkEditClose\n} from './lens-directives';\nimport {\n  DefaultPopoverEditPositionStrategyFactory,\n  PopoverEditPositionStrategyFactory\n} from './popover-edit-position-strategy-factory';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkPopoverEdit,\n  CdkPopoverEditTabOut,\n  CdkRowHoverContent,\n  CdkEditControl,\n  CdkEditRevert,\n  CdkEditClose,\n  CdkEditable,\n  CdkEditOpen,\n];\n\n@NgModule({\n  imports: [\n    OverlayModule,\n  ],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n  providers: [{\n    provide: PopoverEditPositionStrategyFactory,\n    useClass: DefaultPopoverEditPositionStrategyFactory\n  }],\n})\nexport class CdkPopoverEditModule { }\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","matches","element","selector","closest","Node","curr","Element","parentNode","hasNativeClosest","polyfillClosest","computeHoverContentState","_a","firstRow","lastRow","activeRow","hoverRow","hoverContentState","Map","_i","_b","previousElementSibling","nextElementSibling","length","focussableRow","set","_c","_d","onRow","areMapEntriesEqual","a","size","Array","from","keys","aKey","get","setPrototypeOf","__proto__","p","hasOwnProperty","CELL_SELECTOR","EDITABLE_CELL_SELECTOR","ROW_SELECTOR","MOUSE_EVENT_DELAY_MS","FOCUS_DELAY","EditEventDispatcher","_ngZone","_this","editing","Subject","hovering","focused","allRows","mouseMove","_editRef","_distinctUntilChanged","distinctUntilChanged","_startWithNull","startWith","_distinctShare","pipe","share","_startWithNullDistinct","editingOrFocused","combineLatest","map","cell","editingRow","auditTime","_rowsWithHoverContent","WeakMap","_currentlyEditing","_hoveredContentStateDistinct","_getFirstRowWithHoverContent","_getLastRowWithHoverContent","audit","row","filter","mouseMoveRow","debounceTime","skip","_enterZone","_editingDistinct","_lastSeenRow","_lastSeenRowHoverOrFocus","subscribe","defineProperty","editingCell","editCell","doneEditingCell","next","setActiveEditRef","ref","unsetActiveEditRef","registerRowWithHoverContent","deregisterRowWithHoverContent","refCount","delete","hoverOrFocusOnRow","state","source","Observable","observer","value","run","error","err","complete","_mapAllRowsToSingleRow","rows","i","has","mapper","type","Injectable","NgZone","EditRef","_form","_editEventDispatcher","_finalValueSubject","finalValue","asObservable","_blurredSubject","blurred","init","previousFormValue","onStable","take","updateRevertValue","reset","ngOnDestroy","isValid","valid","_revertFormValue","close","blur","ControlContainer","decorators","Self","FocusDispatcher","directionality","keyObserver","event","handleKeyboardEvent","moveFocusHorizontally","currentCell","offset","cells","querySelectorAll","currentIndex","indexOf","newIndex","focus","moveFocusVertically","currentRow","currentRowIndex","currentIndexWithinRow","newRowIndex","rowToFocus","target","keyCode","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","preventDefault","args","providedIn","Directionality","FormValueContainer","_formValues","for","key","entry","CdkEditControl","elementRef","editRef","destroyed","ReplaySubject","clickOutBehavior","preservedFormValueChange","EventEmitter","ignoreSubmitUnlessValid","ngOnInit","preservedFormValue","_handleBlur","handleFormSubmit","handlePossibleClickOut","evt","_triggerFormSubmit","_handleKeydown","hasModifierKey","dispatchEvent","Event","Directive","inputs","outputs","providers","ElementRef","HostListener","CdkEditRevert","revertEdit","host","Input","CdkEditClose","closeEdit","PopoverEditPositionStrategyFactory","DefaultPopoverEditPositionStrategyFactory","_super","direction","overlay","call","tslib_1.__extends","positionStrategyForCells","position","flexibleConnectedTo","withGrowAfterOpen","withPush","withViewportMargin","withPositions","originX","originY","overlayX","overlayY","sizeConfigForCells","width","getBoundingClientRect","firstCell","lastCell","right","left","Overlay","EditServices","editEventDispatcher","focusDispatcher","focusTrapFactory","ngZone","positionFactory","scrollDispatcher","viewportRuler","FocusTrapFactory","ScrollDispatcher","ViewportRuler","FocusEscapeNotifier","checker","document","_escapeSubject","startAnchorListener","endAnchorListener","attachAnchors","escapes","FocusTrap","FocusEscapeNotifierFactory","_checker","_document","InteractivityChecker","undefined","Inject","DOCUMENT","CdkEditable","ngAfterViewInit","_listenForTableEvents","nativeElement","toClosest","runOutsideAngular","fromEvent","takeUntil","mapTo","throttleTime","fromEventPattern","handler","addEventListener","removeEventListener","withLatestFrom","POPOVER_EDIT_HOST_BINDINGS","tabIndex","class","[attr.aria-haspopup]","POPOVER_EDIT_INPUTS","CdkPopoverEdit","services","viewContainerRef","template","_colspan","overlayRef","updatePositionStrategy","_getPositionStrategy","hasAttached","_updateOverlaySize","_startListeningToEditEvents","focusTrap","destroy","dispose","initFocusTrap","overlayElement","closeEditOverlay","panelClass","open","_createEditOverlay","_showEditOverlay","_maybeReturnFocusToCell","detach","disposeOnNavigation","positionStrategy","scrollStrategy","scrollStrategies","reposition","setAttribute","detachments","attach","TemplatePortal","$implicit","context","setTimeout","focusInitialElement","merge","scrolled","change","_getOverlayCells","before","after","rowCells","ownIndex","slice","updateSize","activeElement","ViewContainerRef","CdkPopoverEditTabOut","focusEscapeNotifierFactory","CdkRowHoverContent","templateRef","viewRef","_row","_listenForHoverAndFocusEvents","initElement","_","makeElementHiddenButFocusable","style","opacity","makeElementVisible","eventState","insert","createEmbeddedView","rootNodes","TemplateRef","CdkEditOpen","nodeName","getAttribute","openEdit","stopPropagation","EXPORTED_DECLARATIONS","CdkPopoverEditModule","NgModule","imports","OverlayModule","exports","declarations","provide","useClass"],"mappings":"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"}