{"version":3,"file":"material-experimental-mdc-button.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material-experimental/mdc-button/button-base.ts","../../src/material-experimental/mdc-button/button.ts","../../src/material-experimental/mdc-button/fab.ts","../../src/material-experimental/mdc-button/icon-button.ts","../../src/material-experimental/mdc-button/module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {ElementRef, NgZone, ViewChild} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisable,\n  CanDisableCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  MatRipple,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  RippleAnimationConfig\n} from '@angular/material/core';\nimport {numbers} from '@material/ripple';\n\n/** Inputs common to all buttons. */\nexport const MAT_BUTTON_INPUTS = ['disabled', 'disableRipple', 'color'];\n\n/** Shared host configuration for all buttons */\nexport const MAT_BUTTON_HOST = {\n  '[attr.disabled]': 'disabled || null',\n  '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  // MDC automatically applies the primary theme color to the button, but we want to support\n  // an unthemed version. If color is undefined, apply a CSS class that makes it easy to\n  // select and style this \"theme\".\n  '[class.mat-unthemed]': '!color',\n};\n\n/** List of classes to add to buttons instances based on host attribute selector. */\nconst HOST_SELECTOR_MDC_CLASS_PAIR: {selector: string, mdcClasses: string[]}[] = [\n  {\n    selector: 'mat-button',\n    mdcClasses: ['mdc-button', 'mat-mdc-button'],\n  },\n  {\n    selector: 'mat-flat-button',\n    mdcClasses: ['mdc-button', 'mdc-button--unelevated', 'mat-mdc-unelevated-button'],\n  },\n  {\n    selector: 'mat-raised-button',\n    mdcClasses: ['mdc-button', 'mdc-button--raised', 'mat-mdc-raised-button'],\n  },\n  {\n    selector: 'mat-stroked-button',\n    mdcClasses: ['mdc-button', 'mdc-button--outlined', 'mat-mdc-outlined-button'],\n  },\n  {\n    selector: 'mat-fab',\n    mdcClasses: ['mdc-fab', 'mat-mdc-fab'],\n  },\n  {\n    selector: 'mat-mini-fab',\n    mdcClasses: ['mdc-fab', 'mdc-fab--mini', 'mat-mdc-mini-fab'],\n  },\n  {\n    selector: 'mat-icon-button',\n    mdcClasses: ['mdc-icon-button', 'mat-mdc-icon-button'],\n  }\n];\n\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nexport class MatButtonMixinCore {\n  constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _MatButtonBaseMixin: CanDisableRippleCtor&CanDisableCtor&CanColorCtor&\n    typeof MatButtonMixinCore = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonMixinCore)));\n\n/** Base class for all buttons.  */\nexport class MatButtonBase extends _MatButtonBaseMixin implements CanDisable, CanColor,\n                                                                  CanDisableRipple {\n  /** The ripple animation configuration to use for the buttons. */\n  _rippleAnimation: RippleAnimationConfig = {\n    enterDuration: numbers.DEACTIVATION_TIMEOUT_MS,\n    exitDuration: numbers.FG_DEACTIVATION_MS\n  };\n\n  /** Whether the ripple is centered on the button. */\n  _isRippleCentered = false;\n\n  /** Reference to the MatRipple instance of the button. */\n  @ViewChild(MatRipple, {static: false}) ripple: MatRipple;\n\n  constructor(\n      elementRef: ElementRef, public _platform: Platform, public _ngZone: NgZone,\n      public _animationMode?: string) {\n    super(elementRef);\n\n    // For each of the variant selectors that is present in the button's host\n    // attributes, add the correct corresponding MDC classes.\n    for (const pair of HOST_SELECTOR_MDC_CLASS_PAIR) {\n      if (this._hasHostAttributes(pair.selector)) {\n        (elementRef.nativeElement as HTMLElement).classList.add(...pair.mdcClasses);\n      }\n    }\n  }\n\n  /** Focuses the button. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Gets whether the button has one of the given attributes. */\n  private _hasHostAttributes(...attributes: string[]) {\n    return attributes.some(attribute => this._elementRef.nativeElement.hasAttribute(attribute));\n  }\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n}\n\n/** Shared inputs by buttons using the `<a>` tag */\nexport const MAT_ANCHOR_INPUTS = ['disabled', 'disableRipple', 'color', 'tabIndex'];\n\n/** Shared host configuration for buttons using the `<a>` tag. */\nexport const MAT_ANCHOR_HOST = {\n  '[attr.disabled]': 'disabled || null',\n  '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n\n  // Note that we ignore the user-specified tabindex when it's disabled for\n  // consistency with the `mat-button` applied on native buttons where even\n  // though they have an index, they're not tabbable.\n  '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n  '[attr.aria-disabled]': 'disabled.toString()',\n  '(click)': '_haltDisabledEvents($event)',\n  // MDC automatically applies the primary theme color to the button, but we want to support\n  // an unthemed version. If color is undefined, apply a CSS class that makes it easy to\n  // select and style this \"theme\".\n  '[class.mat-unthemed]': '!color',\n};\n\n/**\n * Anchor button base.\n */\nexport class MatAnchorBase extends MatButtonBase {\n  tabIndex: number;\n\n  constructor(elementRef: ElementRef, platform: Platform, ngZone: NgZone, animationMode?: string) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n\n  _haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  NgZone,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\nimport {\n  MAT_ANCHOR_HOST,\n  MAT_ANCHOR_INPUTS,\n  MAT_BUTTON_HOST,\n  MAT_BUTTON_INPUTS,\n  MatAnchorBase,\n  MatButtonBase\n} from './button-base';\n\n/**\n * Material Design button component. Users interact with a button to perform an action.\n * See https://material.io/components/buttons\n *\n * The `MatButton` class applies to native button elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatButton` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\n@Component({\n  moduleId: module.id,\n  selector: `\n    button[mat-button], button[mat-raised-button], button[mat-flat-button],\n    button[mat-stroked-button]\n  `,\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  inputs: MAT_BUTTON_INPUTS,\n  host: MAT_BUTTON_HOST,\n  exportAs: 'matButton',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatButton extends MatButtonBase {\n  constructor(\n      elementRef: ElementRef, platform: Platform, ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n}\n\n/**\n * Material Design button component for anchor elements. Anchor elements are used to provide\n * links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons\n *\n * The `MatAnchor` class applies to native anchor elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatAnchor` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\n@Component({\n  moduleId: module.id,\n  selector: `a[mat-button], a[mat-raised-button], a[mat-flat-button], a[mat-stroked-button]`,\n  exportAs: 'matButton, matAnchor',\n  host: MAT_ANCHOR_HOST,\n  inputs: MAT_ANCHOR_INPUTS,\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatAnchor extends MatAnchorBase {\n  constructor(\n      elementRef: ElementRef, platform: Platform, ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  NgZone,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\nimport {MatAnchor} from './button';\nimport {\n  MAT_ANCHOR_HOST,\n  MAT_ANCHOR_INPUTS,\n  MAT_BUTTON_HOST,\n  MAT_BUTTON_INPUTS,\n  MatButtonBase\n} from './button-base';\nimport {ThemePalette} from '@angular/material/core';\n\n/**\n * Material Design floating action button (FAB) component. These buttons represent the primary\n * or most common action for users to interact with.\n * See https://material.io/components/buttons-floating-action-button/\n *\n * The `MatFabButton` class has two appearances: normal and mini.\n */\n@Component({\n  moduleId: module.id,\n  selector: `button[mat-fab], button[mat-mini-fab]`,\n  templateUrl: 'button.html',\n  styleUrls: ['fab.css'],\n  inputs: MAT_BUTTON_INPUTS,\n  host: MAT_BUTTON_HOST,\n  exportAs: 'matButton',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatFabButton extends MatButtonBase {\n  // The FAB by default has its color set to accent.\n  color = 'accent' as ThemePalette;\n\n  constructor(\n      elementRef: ElementRef, platform: Platform, ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n}\n\n\n/**\n * Material Design floating action button (FAB) component for anchor elements. Anchor elements\n * are used to provide links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons-floating-action-button/\n *\n * The `MatFabAnchor` class has two appearances: normal and mini.\n */\n@Component({\n  moduleId: module.id,\n  selector: `a[mat-fab], a[mat-mini-fab]`,\n  templateUrl: 'button.html',\n  styleUrls: ['fab.css'],\n  inputs: MAT_ANCHOR_INPUTS,\n  host: MAT_ANCHOR_HOST,\n  exportAs: 'matButton, matAnchor',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatFabAnchor extends MatAnchor {\n  // The FAB by default has its color set to accent.\n  color = 'accent' as ThemePalette;\n\n  constructor(\n      elementRef: ElementRef, platform: Platform, ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  NgZone,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\nimport {\n  MAT_ANCHOR_HOST,\n  MAT_ANCHOR_INPUTS,\n  MAT_BUTTON_HOST,\n  MAT_BUTTON_INPUTS,\n  MatAnchorBase,\n  MatButtonBase\n} from './button-base';\n\n/**\n * Material Design icon button component. This type of button displays a single interactive icon for\n * users to perform an action.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\n@Component({\n  moduleId: module.id,\n  selector: `button[mat-icon-button]`,\n  templateUrl: 'button.html',\n  styleUrls: ['icon-button.css'],\n  inputs: MAT_BUTTON_INPUTS,\n  host: MAT_BUTTON_HOST,\n  exportAs: 'matButton',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatIconButton extends MatButtonBase {\n  // Set the ripple to be centered for icon buttons\n  _isRippleCentered = true;\n\n  constructor(\n      elementRef: ElementRef, platform: Platform, ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n}\n\n/**\n * Material Design icon button component for anchor elements. This button displays a single\n * interaction icon that allows users to navigate across different routes or pages.\n * See https://material.io/develop/web/components/buttons/icon-buttons/\n */\n@Component({\n  moduleId: module.id,\n  selector: `a[mat-icon-button]`,\n  templateUrl: 'button.html',\n  styleUrls: ['icon-button.css'],\n  inputs: MAT_ANCHOR_INPUTS,\n  host: MAT_ANCHOR_HOST,\n  exportAs: 'matButton, matAnchor',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatIconAnchor extends MatAnchorBase {\n  // Set the ripple to be centered for icon buttons\n  _isRippleCentered = true;\n\n  constructor(\n      elementRef: ElementRef, platform: Platform, ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatAnchor, MatButton} from './button';\nimport {MatFabAnchor, MatFabButton} from './fab';\nimport {MatIconAnchor, MatIconButton} from './icon-button';\n\n@NgModule({\n  imports: [MatCommonModule, CommonModule, MatRippleModule],\n  exports: [\n    MatAnchor,\n    MatButton,\n    MatIconAnchor,\n    MatIconButton,\n    MatFabAnchor,\n    MatFabButton,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatAnchor,\n    MatButton,\n    MatIconAnchor,\n    MatIconButton,\n    MatFabAnchor,\n    MatFabButton,\n  ],\n})\nexport class MatButtonModule {\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","MAT_BUTTON_INPUTS","MAT_BUTTON_HOST","[attr.disabled]","[class._mat-animation-noopable]","[class.mat-unthemed]","HOST_SELECTOR_MDC_CLASS_PAIR","selector","mdcClasses","MatButtonMixinCore","_elementRef","_MatButtonBaseMixin","mixinColor","mixinDisabled","mixinDisableRipple","MatButtonBase","_super","elementRef","_platform","_ngZone","_animationMode","_this","call","_rippleAnimation","enterDuration","numbers","DEACTIVATION_TIMEOUT_MS","exitDuration","FG_DEACTIVATION_MS","_isRippleCentered","_i","HOST_SELECTOR_MDC_CLASS_PAIR_1","length","pair","_hasHostAttributes","_a","classList","add","apply","tslib_1.__extends","focus","nativeElement","attributes","arguments","some","attribute","hasAttribute","_isRippleDisabled","disableRipple","disabled","ripple","type","ViewChild","args","MatRipple","static","MAT_ANCHOR_INPUTS","MAT_ANCHOR_HOST","[attr.tabindex]","[attr.aria-disabled]","(click)","MatAnchorBase","platform","ngZone","animationMode","_haltDisabledEvents","event","preventDefault","stopImmediatePropagation","MatButton","Component","template","styles","inputs","host","exportAs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","NgZone","String","decorators","Optional","Inject","ANIMATION_MODULE_TYPE","MatAnchor","ctorParameters","ElementRef","MatFabButton","color","MatFabAnchor","MatIconButton","MatIconAnchor","MatButtonModule","NgModule","imports","MatCommonModule","CommonModule","MatRippleModule","exports","declarations"],"mappings":"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"}