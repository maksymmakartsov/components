{"version":3,"file":"tab-nav-bar.js","sourceRoot":"","sources":["../../../../../../src/material/tabs/tab-nav-bar/tab-nav-bar.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FocusMonitor, FocusableOption} from '@angular/cdk/a11y';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MatInkBar} from '../ink-bar';\nimport {MatPaginatedTabHeader, MatPaginatedTabHeaderItem} from '../paginated-tab-header';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-nav-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked,\n  AfterContentInit, OnDestroy {\n\n  /** Query list of all tab links of the tab navigation. */\n  abstract _items: QueryList<MatPaginatedTabHeaderItem & {active: boolean}>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  /** Theme color of the nav bar. */\n  @Input() color: ThemePalette = 'primary';\n\n  constructor(elementRef: ElementRef,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              /**\n               * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n               */\n              @Optional() platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected() {\n    // noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(_element?: ElementRef) {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    'class': 'mat-tab-nav-bar mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavBase {\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true}) _items: QueryList<MatTabLink>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator', {static: false}) _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator', {static: false}) _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n    @Optional() dir: Directionality,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    viewportRuler: ViewportRuler,\n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    @Optional() platform?: Platform,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n}\n\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\nconst _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkMixinBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n\n/** Base class with all of the `MatTabLink` functionality. */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-link-base'\n})\n// tslint:disable-next-line:class-name\nexport class _MatTabLinkBase extends _MatTabLinkMixinBase implements OnDestroy, CanDisable,\n  CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this.elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(\n      private _tabNavBar: _MatTabNavBase, public elementRef: ElementRef,\n      @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n      @Attribute('tabindex') tabIndex: string, private _focusMonitor: FocusMonitor,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super();\n\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {enterDuration: 0, exitDuration: 0};\n    }\n\n    _focusMonitor.monitor(elementRef);\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-current]': 'active ? \"page\" : null',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkBase implements OnDestroy {\n  /** Reference to the RippleRenderer for the tab-link. */\n  private _tabLinkRipple: RippleRenderer;\n\n  constructor(\n    tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone,\n    platform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n    @Attribute('tabindex') tabIndex: string, focusMonitor: FocusMonitor,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\n"]}