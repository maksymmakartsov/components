{"version":3,"file":"list.js","sourceRoot":"","sources":["../../../../../src/material/list/list.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Optional,\n  QueryList,\n  ViewEncapsulation,\n  OnChanges,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  MatLine,\n  setLines,\n  mixinDisableRipple,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nclass MatListBase {}\nconst _MatListMixinBase: CanDisableRippleCtor & typeof MatListBase =\n    mixinDisableRipple(MatListBase);\n\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nclass MatListItemBase {}\nconst _MatListItemMixinBase: CanDisableRippleCtor & typeof MatListItemBase =\n    mixinDisableRipple(MatListItemBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-nav-list',\n  exportAs: 'matNavList',\n  host: {\n    'role': 'navigation',\n    'class': 'mat-nav-list mat-list-base'\n  },\n  templateUrl: 'list.html',\n  styleUrls: ['list.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatNavList extends _MatListMixinBase implements CanDisableRipple, OnChanges,\n  OnDestroy {\n  /** Emits when the state of the list changes. */\n  _stateChanges = new Subject<void>();\n\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-list, mat-action-list',\n  exportAs: 'matList',\n  templateUrl: 'list.html',\n  host: {\n    'class': 'mat-list mat-list-base'\n  },\n  styleUrls: ['list.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatList extends _MatListMixinBase implements CanDisableRipple, OnChanges, OnDestroy {\n  /** Emits when the state of the list changes. */\n  _stateChanges = new Subject<void>();\n\n  constructor(private _elementRef: ElementRef<HTMLElement>) {\n    super();\n\n    if (this._getListType() === 'action-list') {\n      _elementRef.nativeElement.classList.add('mat-action-list');\n    }\n  }\n\n  _getListType(): 'list' | 'action-list' | null {\n    const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n\n    if (nodeName === 'mat-list') {\n      return 'list';\n    }\n\n    if (nodeName === 'mat-action-list') {\n      return 'action-list';\n    }\n\n    return null;\n  }\n\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-list-avatar], [matListAvatar]',\n  host: {'class': 'mat-list-avatar'}\n})\nexport class MatListAvatarCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-list-icon], [matListIcon]',\n  host: {'class': 'mat-list-icon'}\n})\nexport class MatListIconCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-subheader], [matSubheader]',\n  host: {'class': 'mat-subheader'}\n})\nexport class MatListSubheaderCssMatStyler {}\n\n/** An item within a Material Design list. */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n  exportAs: 'matListItem',\n  host: {\n    'class': 'mat-list-item',\n    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n    '[class.mat-list-item-avatar]': '_avatar || _icon',\n    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n  },\n  inputs: ['disableRipple'],\n  templateUrl: 'list-item.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatListItem extends _MatListItemMixinBase implements AfterContentInit,\n    CanDisableRipple, OnDestroy {\n  private _isInteractiveList: boolean = false;\n  private _list?: MatNavList | MatList;\n  private _destroyed = new Subject<void>();\n\n  @ContentChildren(MatLine, {descendants: true}) _lines: QueryList<MatLine>;\n  @ContentChild(MatListAvatarCssMatStyler, {static: false}) _avatar: MatListAvatarCssMatStyler;\n  @ContentChild(MatListIconCssMatStyler, {static: false}) _icon: MatListIconCssMatStyler;\n\n  constructor(private _element: ElementRef<HTMLElement>,\n              _changeDetectorRef: ChangeDetectorRef,\n              @Optional() navList?: MatNavList,\n              @Optional() list?: MatList) {\n    super();\n    this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n    this._list = navList || list;\n\n    // If no type attributed is specified for <button>, set it to \"button\".\n    // If a type attribute is already specified, do nothing.\n    const element = this._getHostElement();\n\n    if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n      element.setAttribute('type', 'button');\n    }\n\n    if (this._list) {\n      // React to changes in the state of the parent list since\n      // some of the item's properties depend on it (e.g. `disableRipple`).\n      this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        _changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Whether this list item should show a ripple effect when clicked. */\n  _isRippleDisabled() {\n    return !this._isInteractiveList || this.disableRipple ||\n           !!(this._list && this._list.disableRipple);\n  }\n\n  /** Retrieves the DOM element of the component host. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n}\n"]}