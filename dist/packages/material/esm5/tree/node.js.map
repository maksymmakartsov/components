{"version":3,"file":"node.js","sourceRoot":"","sources":["../../../../../src/material/tree/node.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  CDK_TREE_NODE_OUTLET_NODE,\n  CdkNestedTreeNode,\n  CdkTree,\n  CdkTreeNode,\n  CdkTreeNodeDef,\n} from '@angular/cdk/tree';\nimport {\n  AfterContentInit,\n  Attribute,\n  Directive,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  CanDisable,\n  CanDisableCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinDisabled,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst _MatTreeNodeMixinBase: HasTabIndexCtor & CanDisableCtor & typeof CdkTreeNode =\n    mixinTabIndex(mixinDisabled(CdkTreeNode));\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n  selector: 'mat-tree-node',\n  exportAs: 'matTreeNode',\n  inputs: ['disabled', 'tabIndex'],\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n    '[attr.role]': 'role',\n    'class': 'mat-tree-node'\n  },\n  providers: [{provide: CdkTreeNode, useExisting: MatTreeNode}]\n})\nexport class MatTreeNode<T> extends _MatTreeNodeMixinBase<T>\n    implements CanDisable, HasTabIndex {\n  @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _tree: CdkTree<T>,\n              @Attribute('tabindex') tabIndex: string) {\n    super(_elementRef, _tree);\n\n    this.tabIndex = Number(tabIndex) || 0;\n  }\n}\n\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n */\n@Directive({\n  selector: '[matTreeNodeDef]',\n  inputs: [\n    'when: matTreeNodeDefWhen'\n  ],\n  providers: [{provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef}]\n})\nexport class MatTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n  @Input('matTreeNode') data: T;\n}\n\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\n@Directive({\n  selector: 'mat-nested-tree-node',\n  exportAs: 'matNestedTreeNode',\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.role]': 'role',\n    'class': 'mat-nested-tree-node',\n  },\n  providers: [\n    {provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode},\n    {provide: CdkTreeNode, useExisting: MatNestedTreeNode},\n    {provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode}\n  ]\n})\nexport class MatNestedTreeNode<T> extends CdkNestedTreeNode<T> implements AfterContentInit,\n  OnDestroy {\n  @Input('matNestedTreeNode') node: T;\n\n  /** Whether the node is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled = false;\n\n  /** Tabindex for the node. */\n  @Input()\n  get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n  set tabIndex(value: number) {\n    // If the specified tabIndex value is null or undefined, fall back to the default value.\n    this._tabIndex = value != null ? value : 0;\n  }\n  private _tabIndex: number;\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _tree: CdkTree<T>,\n              protected _differs: IterableDiffers,\n              @Attribute('tabindex') tabIndex: string) {\n    super(_elementRef, _tree, _differs);\n    this.tabIndex = Number(tabIndex) || 0;\n  }\n\n  // This is a workaround for https://github.com/angular/angular/issues/23091\n  // In aot mode, the lifecycle hooks from parent class are not called.\n  // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}\n"]}