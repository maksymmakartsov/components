{"version":3,"file":"outlet.js","sourceRoot":"","sources":["../../../../src/cdk/tree/outlet.ts"],"names":[],"mappings":";;;;;;;;;;;AAOA,OAAO,EACL,SAAS,EACT,MAAM,EACN,cAAc,EACd,QAAQ,EACR,gBAAgB,GACjB,MAAM,eAAe,CAAC;;;;;;;AAOvB,MAAM,OAAO,yBAAyB,GAAG,IAAI,cAAc,CAAK,2BAA2B,CAAC;;;;;AAS5F,MAAM,OAAO,iBAAiB;;;;;IAC5B,YACW,aAA+B,EACgB,KAAW;QAD1D,kBAAa,GAAb,aAAa,CAAkB;QACgB,UAAK,GAAL,KAAK,CAAM;IAAG,CAAC;;;YAN1E,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;aAChC;;;;YAhBC,gBAAgB;4CAoBX,MAAM,SAAC,yBAAyB,cAAG,QAAQ;;;;IAD5C,0CAAsC;;IACtC,kCAAiE","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  Inject,\n  InjectionToken,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\n\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nexport const CDK_TREE_NODE_OUTLET_NODE = new InjectionToken<{}>('CDK_TREE_NODE_OUTLET_NODE');\n\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\n@Directive({\n  selector: '[cdkTreeNodeOutlet]'\n})\nexport class CdkTreeNodeOutlet {\n  constructor(\n      public viewContainer: ViewContainerRef,\n      @Inject(CDK_TREE_NODE_OUTLET_NODE) @Optional() public _node?: any) {}\n}\n"]}