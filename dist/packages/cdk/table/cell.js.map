{"version":3,"file":"cell.js","sourceRoot":"","sources":["../../../../src/cdk/table/cell.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ContentChild, Directive, ElementRef, Input, TemplateRef} from '@angular/core';\nimport {CanStick, CanStickCtor, mixinHasStickyInput} from './can-stick';\n\n\n/** Base interface for a cell definition. Captures a column's cell template definition. */\nexport interface CellDef {\n  template: TemplateRef<any>;\n}\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({selector: '[cdkCellDef]'})\nexport class CdkCellDef implements CellDef {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) {}\n}\n\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({selector: '[cdkHeaderCellDef]'})\nexport class CdkHeaderCellDef implements CellDef {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) {}\n}\n\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({selector: '[cdkFooterCellDef]'})\nexport class CdkFooterCellDef implements CellDef {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) {}\n}\n\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {}\nconst _CdkColumnDefBase: CanStickCtor&typeof CdkColumnDefBase =\n    mixinHasStickyInput(CdkColumnDefBase);\n\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[cdkColumnDef]',\n  inputs: ['sticky'],\n  providers: [{provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef}],\n})\nexport class CdkColumnDef extends _CdkColumnDefBase implements CanStick {\n  /** Unique name for this column. */\n  @Input('cdkColumnDef')\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    // If the directive is set without a name (updated programatically), then this setter will\n    // trigger with an empty string and should not overwrite the programatically set value.\n    if (!name) {\n      return;\n    }\n\n    this._name = name;\n    this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n  }\n  _name: string;\n\n  /**\n   * Whether this column should be sticky positioned on the end of the row. Should make sure\n   * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n   * has been changed.\n   */\n  @Input('stickyEnd')\n  get stickyEnd(): boolean {\n    return this._stickyEnd;\n  }\n  set stickyEnd(v: boolean) {\n    const prevValue = this._stickyEnd;\n    this._stickyEnd = coerceBooleanProperty(v);\n    this._hasStickyChanged = prevValue !== this._stickyEnd;\n  }\n  _stickyEnd: boolean = false;\n\n  /** @docs-private */\n  @ContentChild(CdkCellDef, {static: false}) cell: CdkCellDef;\n\n  /** @docs-private */\n  @ContentChild(CdkHeaderCellDef, {static: false}) headerCell: CdkHeaderCellDef;\n\n  /** @docs-private */\n  @ContentChild(CdkFooterCellDef, {static: false}) footerCell: CdkFooterCellDef;\n\n  /**\n   * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n   * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n   * do not match are replaced by the '-' character.\n   */\n  cssClassFriendlyName: string;\n}\n\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nexport class BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n    elementRef.nativeElement.classList.add(columnClassName);\n  }\n}\n\n/** Header cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'cdk-header-cell, th[cdk-header-cell]',\n  host: {\n    'class': 'cdk-header-cell',\n    'role': 'columnheader',\n  },\n})\nexport class CdkHeaderCell extends BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n  }\n}\n\n/** Footer cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n  host: {\n    'class': 'cdk-footer-cell',\n    'role': 'gridcell',\n  },\n})\nexport class CdkFooterCell extends BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n  }\n}\n\n/** Cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'cdk-cell, td[cdk-cell]',\n  host: {\n    'class': 'cdk-cell',\n    'role': 'gridcell',\n  },\n})\nexport class CdkCell extends BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n  }\n}\n"]}