{"version":3,"file":"dispatch-events.js","sourceRoot":"","sources":["../../../../src/cdk/testing/dispatch-events.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EACL,eAAe,EACf,mBAAmB,EACnB,gBAAgB,EAChB,gBAAgB,EAEjB,MAAM,iBAAiB,CAAC;;;;;;;;AAMzB,MAAM,UAAU,aAAa,CAAC,IAAmB,EAAE,KAAY;IAC7D,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1B,OAAO,KAAK,CAAC;AACf,CAAC;;;;;;;;;AAMD,MAAM,UAAU,iBAAiB,CAAC,IAAmB,EAAE,IAAY,EAAE,SAAmB;IACtF,OAAO,aAAa,CAAC,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;AAC/D,CAAC;;;;;;;;;;;;AAMD,MAAM,UAAU,qBAAqB,CAAC,IAAU,EAAE,IAAY,EAAE,OAAgB,EAAE,GAAY,EACxD,MAAgB,EAAE,SAAwB;IAC9E,OAAO,mBAAA,aAAa,CAAC,IAAI,EACrB,mBAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,EAAiB,CAAC;AACnF,CAAC;;;;;;;;;;;AAMD,MAAM,UAAU,kBAAkB,CAAC,IAAU,EAAE,IAAY,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EACvE,KAAK,GAAG,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,OAAO,mBAAA,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,EAAc,CAAC;AAClD,CAAC;;;;;;;;;;AAMD,MAAM,UAAU,kBAAkB,CAAC,IAAU,EAAE,IAAY,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC;IACvE,OAAO,aAAa,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  createFakeEvent,\n  createKeyboardEvent,\n  createMouseEvent,\n  createTouchEvent,\n  ModifierKeys\n} from './event-objects';\n\n/**\n * Utility to dispatch any event on a Node.\n * @docs-private\n */\nexport function dispatchEvent(node: Node | Window, event: Event): Event {\n  node.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Shorthand to dispatch a fake event on a specified node.\n * @docs-private\n */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/**\n * Shorthand to dispatch a keyboard event with a specified key code.\n * @docs-private\n */\nexport function dispatchKeyboardEvent(node: Node, type: string, keyCode?: number, key?: string,\n                                      target?: Element, modifiers?: ModifierKeys): KeyboardEvent {\n  return dispatchEvent(node,\n      createKeyboardEvent(type, keyCode, key, target, modifiers)) as KeyboardEvent;\n}\n\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchMouseEvent(node: Node, type: string, x = 0, y = 0,\n  event = createMouseEvent(type, x, y)): MouseEvent {\n  return dispatchEvent(node, event) as MouseEvent;\n}\n\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchTouchEvent(node: Node, type: string, x = 0, y = 0) {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n"]}