{"version":3,"file":"form-value-container.js","sourceRoot":"","sources":["../../../../../src/cdk-experimental/popover-edit/form-value-container.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAQA,2BAEC;;;IADC,sBAAkB;;;;;;;;;;;;;AAapB;;;;;;;;;;;;IAAA;QACU,gBAAW,GAAG,IAAI,OAAO,EAAyB,CAAC;IAc7D,CAAC;;;;;IAZC,gCAAG;;;;IAAH,UAAI,GAAQ;;YACJ,WAAW,GAAG,IAAI,CAAC,WAAW;;YAEhC,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE;YACV,gFAAgF;YAChF,KAAK,GAAG,EAAE,CAAC;YACX,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC7B;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IACH,yBAAC;AAAD,CAAC,AAfD,IAeC;;;;;;;;;;;;;;;;;;IAdC,yCAA2D","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface Entry<FormValue> {\n  value?: FormValue;\n}\n\n/**\n * A convenience class for preserving unsaved form state while an edit lens is closed.\n *\n * Example usage:\n * class MyComponent {\n *   readonly nameEditValues = new FormValueContainer&lt;Item, {name: string}&gt;();\n * }\n *\n * &lt;form cdkEditControl [(cdkEditControlPreservedFormValue)]=\"nameEditValues.for(item).value\"&gt;\n */\nexport class FormValueContainer<Key extends object, FormValue> {\n  private _formValues = new WeakMap<Key, Entry<FormValue>>();\n\n  for(key: Key): Entry<FormValue> {\n    const _formValues = this._formValues;\n\n    let entry = _formValues.get(key);\n    if (!entry) {\n      // Expose entry as an object so that we can [(two-way)] bind to its value member\n      entry = {};\n      _formValues.set(key, entry);\n    }\n\n    return entry;\n  }\n}\n"]}