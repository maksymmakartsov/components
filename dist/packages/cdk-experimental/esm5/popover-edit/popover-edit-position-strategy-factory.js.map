{"version":3,"file":"popover-edit-position-strategy-factory.js","sourceRoot":"","sources":["../../../../../src/cdk-experimental/popover-edit/popover-edit-position-strategy-factory.ts"],"names":[],"mappings":";;;;;;;;;;;;AAQA,OAAO,EAAC,cAAc,EAAC,MAAM,mBAAmB,CAAC;AACjD,OAAO,EAAC,OAAO,EAAsC,MAAM,sBAAsB,CAAC;AAClF,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;;;;;;AAMzC;IAAA;IAaA,CAAC;;gBAbA,UAAU;;IAaX,yCAAC;CAAA,AAbD,IAaC;SAZqB,kCAAkC;;;;;;;;;IAKtD,6FAA0E;;;;;;;;IAM1E,uFAAqE;;;;;;;AAQvE;IAC+D,qEAAkC;IAC/F,mDAA+B,SAAyB,EAAqB,OAAgB;QAA7F,YACE,iBAAO,SACR;QAF8B,eAAS,GAAT,SAAS,CAAgB;QAAqB,aAAO,GAAP,OAAO,CAAS;;IAE7F,CAAC;;;;;IAED,4EAAwB;;;;IAAxB,UAAyB,KAAoB;QAC3C,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;aACzB,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC7B,iBAAiB,EAAE;aACnB,QAAQ,EAAE;aACV,kBAAkB,CAAC,EAAE,CAAC;aACtB,aAAa,CAAC,CAAC;gBACd,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC,CAAC;IACV,CAAC;;;;;IAED,sEAAkB;;;;IAAlB,UAAmB,KAAoB;QACrC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO,EAAE,CAAC;SACX;QAED,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO,EAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,qBAAqB,EAAE,CAAC,KAAK,EAAC,CAAC;SACxD;;YAEG,SAAS;;YAAE,QAAQ;QACvB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,KAAK,EAAE;YAClC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACpC;aAAM;YACL,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACrC;QAED,OAAO,EAAC,KAAK,EAAE,QAAQ,CAAC,qBAAqB,EAAE,CAAC,KAAK,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAC,CAAC;IAClG,CAAC;;gBAvCF,UAAU;;;;gBA5BH,cAAc;gBACd,OAAO;;IAmEf,gDAAC;CAAA,AAxCD,CAC+D,kCAAkC,GAuChG;SAvCY,yCAAyC;;;;;;IACxC,8DAA4C;;;;;IAAE,4DAAmC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay, OverlaySizeConfig, PositionStrategy} from '@angular/cdk/overlay';\nimport {Injectable} from '@angular/core';\n\n/**\n * Overridable factory responsible for configuring how cdkPopoverEdit popovers are positioned\n * and sized.\n */\n@Injectable()\nexport abstract class PopoverEditPositionStrategyFactory {\n  /**\n   * Creates a PositionStrategy based on the specified table cells.\n   * The cells will be provided in DOM order.\n   */\n  abstract positionStrategyForCells(cells: HTMLElement[]): PositionStrategy;\n\n  /**\n   * Creates an OverlaySizeConfig based on the specified table cells.\n   * The cells will be provided in DOM order.\n   */\n  abstract sizeConfigForCells(cells: HTMLElement[]): OverlaySizeConfig;\n}\n\n/**\n * Default implementation of PopoverEditPositionStrategyFactory.\n * Uses a FlexibleConnectedPositionStrategy anchored to the start + top of the cell.\n * Note: This will change to CoverPositionStrategy once it implemented.\n */\n@Injectable()\nexport class DefaultPopoverEditPositionStrategyFactory extends PopoverEditPositionStrategyFactory {\n  constructor(protected readonly direction: Directionality, protected readonly overlay: Overlay) {\n    super();\n  }\n\n  positionStrategyForCells(cells: HTMLElement[]): PositionStrategy {\n    return this.overlay.position()\n        .flexibleConnectedTo(cells[0])\n        .withGrowAfterOpen()\n        .withPush()\n        .withViewportMargin(16)\n        .withPositions([{\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'top',\n        }]);\n  }\n\n  sizeConfigForCells(cells: HTMLElement[]): OverlaySizeConfig {\n    if (cells.length === 0) {\n      return {};\n    }\n\n    if (cells.length === 1) {\n      return {width: cells[0].getBoundingClientRect().width};\n    }\n\n    let firstCell, lastCell;\n    if (this.direction.value === 'ltr') {\n      firstCell = cells[0];\n      lastCell = cells[cells.length - 1];\n    } else {\n      lastCell = cells[0];\n      firstCell = cells[cells.length - 1];\n    }\n\n    return {width: lastCell.getBoundingClientRect().right - firstCell.getBoundingClientRect().left};\n  }\n}\n"]}