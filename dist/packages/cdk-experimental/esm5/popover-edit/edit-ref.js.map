{"version":3,"file":"edit-ref.js","sourceRoot":"","sources":["../../../../../src/cdk-experimental/popover-edit/edit-ref.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,UAAU,EAAa,IAAI,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;AAClE,OAAO,EAAC,gBAAgB,EAAC,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAa,OAAO,EAAC,MAAM,MAAM,CAAC;AACzC,OAAO,EAAC,IAAI,EAAC,MAAM,gBAAgB,CAAC;AAEpC,OAAO,EAAC,mBAAmB,EAAC,MAAM,yBAAyB,CAAC;;;;;;AAM5D;IAaE,iBAC6B,KAAuB,EAC/B,oBAAyC,EACzC,OAAe;QAFP,UAAK,GAAL,KAAK,CAAkB;QAC/B,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,YAAO,GAAP,OAAO,CAAQ;;;;QAbnB,uBAAkB,GAAG,IAAI,OAAO,EAAa,CAAC;QACtD,eAAU,GAA0B,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;;;;QAGnE,oBAAe,GAAG,IAAI,OAAO,EAAQ,CAAC;QAC9C,YAAO,GAAqB,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QASvE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED;;;;OAIG;;;;;;;;IACH,sBAAI;;;;;;;IAAJ,UAAK,iBAAsC;QAA3C,iBASC;QARC,mEAAmE;QACnE,6DAA6D;QAC7D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;;;QAAC;YAC5C,KAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,iBAAiB,EAAE;gBACrB,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;aAC/B;QACH,CAAC,EAAC,CAAC;IACL,CAAC;;;;IAED,6BAAW;;;IAAX;QACE,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAED,qDAAqD;;;;;IACrD,yBAAO;;;;IAAP;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;IAC1B,CAAC;IAED,8EAA8E;;;;;IAC9E,mCAAiB;;;;IAAjB;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,+CAA+C;;;;;IAC/C,uBAAK;;;;IAAL;QACE,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,8EAA8E;;;;;IAC9E,sBAAI;;;;IAAJ;QACE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED;;;OAGG;;;;;;;IACH,uBAAK;;;;;;IAAL,UAAM,KAAiB;QACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACnD,CAAC;;gBApEF,UAAU;;;;gBAVH,gBAAgB,uBAwBjB,IAAI;gBApBH,mBAAmB;gBALU,MAAM;;IAgF3C,cAAC;CAAA,AArED,IAqEC;SApEY,OAAO;;;;;;;IAElB,qCAA+D;;IAC/D,6BAAoF;;;;;;IAGpF,kCAAuD;;IACvD,0BAAyE;;;;;;IAGzE,mCAAoC;;;;;IAGhC,wBAAgD;;;;;IAChD,uCAA0D;;;;;IAC1D,0BAAgC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, OnDestroy, Self, NgZone} from '@angular/core';\nimport {ControlContainer} from '@angular/forms';\nimport {Observable, Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {EditEventDispatcher} from './edit-event-dispatcher';\n\n/**\n * Used for communication between the form within the edit lens and the\n * table that launched it. Provided by CdkEditControl within the lens.\n */\n@Injectable()\nexport class EditRef<FormValue> implements OnDestroy {\n  /** Emits the final value of this edit instance before closing. */\n  private readonly _finalValueSubject = new Subject<FormValue>();\n  readonly finalValue: Observable<FormValue> = this._finalValueSubject.asObservable();\n\n  /** Emits when the user tabs out of this edit lens before closing. */\n  private readonly _blurredSubject = new Subject<void>();\n  readonly blurred: Observable<void> = this._blurredSubject.asObservable();\n\n  /** The value to set the form back to on revert. */\n  private _revertFormValue: FormValue;\n\n  constructor(\n      @Self() private readonly _form: ControlContainer,\n      private readonly _editEventDispatcher: EditEventDispatcher,\n      private readonly _ngZone: NgZone) {\n    this._editEventDispatcher.setActiveEditRef(this);\n  }\n\n  /**\n   * Called by the host directive's OnInit hook. Reads the initial state of the\n   * form and overrides it with persisted state from previous openings, if\n   * applicable.\n   */\n  init(previousFormValue: FormValue|undefined): void {\n    // Wait for the zone to stabilize before caching the initial value.\n    // This ensures that all form controls have been initialized.\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this.updateRevertValue();\n      if (previousFormValue) {\n        this.reset(previousFormValue);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._editEventDispatcher.unsetActiveEditRef(this);\n    this._finalValueSubject.next(this._form.value);\n    this._finalValueSubject.complete();\n  }\n\n  /** Whether the attached form is in a valid state. */\n  isValid(): boolean|null {\n    return this._form.valid;\n  }\n\n  /** Set the form's current value as what it will be set to on revert/reset. */\n  updateRevertValue(): void {\n    this._revertFormValue = this._form.value;\n  }\n\n  /** Tells the table to close the edit popup. */\n  close(): void {\n    this._editEventDispatcher.editing.next(null);\n  }\n\n  /** Notifies the active edit that the user has moved focus out of the lens. */\n  blur(): void {\n    this._blurredSubject.next();\n  }\n\n  /**\n   * Resets the form value to the specified value or the previously set\n   * revert value.\n   */\n  reset(value?: FormValue): void {\n    this._form.reset(value || this._revertFormValue);\n  }\n}\n"]}