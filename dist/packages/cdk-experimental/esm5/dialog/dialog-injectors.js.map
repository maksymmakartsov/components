{"version":3,"file":"dialog-injectors.js","sourceRoot":"","sources":["../../../../../src/cdk-experimental/dialog/dialog-injectors.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,cAAc,EAAC,MAAM,eAAe,CAAC;AAC7C,OAAO,EAEL,OAAO,GAER,MAAM,sBAAsB,CAAC;;;;;AAM9B,MAAM,KAAO,sBAAsB,GAC/B,IAAI,cAAc,CAAuB,sBAAsB,CAAC;;;;;AAGpE,MAAM,KAAO,WAAW,GAAG,IAAI,cAAc,CAAM,YAAY,CAAC;;;;;AAGhE,MAAM,KAAO,UAAU,GAAG,IAAI,cAAc,CAAiB,WAAW,CAAC;;;;;AAGzE,MAAM,KAAO,aAAa,GAAG,IAAI,cAAc,CAAe,cAAc,CAAC;;;;;AAG7E,MAAM,KAAO,gBAAgB,GACzB,IAAI,cAAc,CAAoC,iBAAiB,CAAC;;;;;;AAG5E,MAAM,UAAU,2CAA2C,CAAC,OAAgB;IAE1E;;;IAAO,cAAM,OAAA,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAhC,CAAgC,EAAC;AAChD,CAAC;;;;;AAGD,MAAM,KAAO,mCAAmC,GAAG;IACjD,OAAO,EAAE,sBAAsB;IAC/B,IAAI,EAAE,CAAC,OAAO,CAAC;IACf,UAAU,EAAE,2CAA2C;CACxD","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {\n  ComponentType,\n  Overlay,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {DialogRef} from './dialog-ref';\nimport {CdkDialogContainer} from './dialog-container';\nimport {DialogConfig} from './dialog-config';\n\n/** Injection token for the Dialog's ScrollStrategy. */\nexport const DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('DialogScrollStrategy');\n\n/** Injection token for the Dialog's Data. */\nexport const DIALOG_DATA = new InjectionToken<any>('DialogData');\n\n/** Injection token for the DialogRef constructor. */\nexport const DIALOG_REF = new InjectionToken<DialogRef<any>>('DialogRef');\n\n/** Injection token for the DialogConfig. */\nexport const DIALOG_CONFIG = new InjectionToken<DialogConfig>('DialogConfig');\n\n/** Injection token for the Dialog's DialogContainer component. */\nexport const DIALOG_CONTAINER =\n    new InjectionToken<ComponentType<CdkDialogContainer>>('DialogContainer');\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n"]}