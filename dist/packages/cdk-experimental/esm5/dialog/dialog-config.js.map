{"version":3,"file":"dialog-config.js","sourceRoot":"","sources":["../../../../../src/cdk-experimental/dialog/dialog-config.ts"],"names":[],"mappings":";;;;;;;;AAgBA,oCAKC;;;IAJC,6BAAa;;IACb,gCAAgB;;IAChB,8BAAc;;IACd,+BAAe;;;;;AAGjB;;;;IAAA;;;;QAgBE,SAAI,GAAgB,QAAQ,CAAC;;;;QAG7B,eAAU,GAAuB,EAAE,CAAC;;;;QAGpC,gBAAW,GAAa,IAAI,CAAC;;;;QAG7B,kBAAa,GAAwB,EAAE,CAAC;;;;QAGxC,iBAAY,GAAa,KAAK,CAAC;;;;QAG/B,UAAK,GAAY,EAAE,CAAC;;;;QAGpB,WAAM,GAAY,EAAE,CAAC;;;;QAGrB,aAAQ,GAAqB,EAAE,CAAC;;;;QAGhC,cAAS,GAAqB,EAAE,CAAC;;;;QAGjC,aAAQ,GAAqB,MAAM,CAAC;;;;QAGpC,cAAS,GAAqB,EAAE,CAAC;;;;QAMjC,SAAI,GAAc,IAAI,CAAC;;;;QAMvB,oBAAe,GAAmB,IAAI,CAAC;;;;QAGvC,cAAS,GAAmB,IAAI,CAAC;;;;QAGjC,cAAS,GAAa,IAAI,CAAC;;;;QAG3B,2BAAsB,GAAY,OAAO,CAAC;;;;QAG1C,0BAAqB,GAAY,OAAO,CAAC;IAC3C,CAAC;IAAD,mBAAC;AAAD,CAAC,AAvED,IAuEC;;;;;;;;;;IArEC,0CAAuD;;;;;;;;IAQvD,wCAAoC;;;;;IAGpC,0BAAY;;;;;IAGZ,4BAA6B;;;;;IAG7B,kCAAoC;;;;;IAGpC,mCAA6B;;;;;IAG7B,qCAAwC;;;;;IAGxC,oCAA+B;;;;;IAG/B,6BAAoB;;;;;IAGpB,8BAAqB;;;;;IAGrB,gCAAgC;;;;;IAGhC,iCAAiC;;;;;IAGjC,gCAAoC;;;;;IAGpC,iCAAiC;;;;;IAGjC,gCAA0B;;;;;IAG1B,4BAAuB;;;;;IAGvB,iCAAsB;;;;;IAGtB,uCAAuC;;;;;IAGvC,iCAAiC;;;;;IAGjC,iCAA2B;;;;;IAG3B,8CAA0C;;;;;IAG1C,6CAAyC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ViewContainerRef} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ComponentType} from '@angular/cdk/overlay';\nimport {CdkDialogContainer} from './dialog-container';\n\n/** Valid ARIA roles for a dialog element. */\nexport type DialogRole = 'dialog' | 'alertdialog';\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  top?: string;\n  bottom?: string;\n  left?: string;\n  right?: string;\n}\n\nexport class DialogConfig<D = any> {\n  /** Component to use as the container for the dialog. */\n  containerComponent?: ComponentType<CdkDialogContainer>;\n\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** The id of the dialog. */\n  id?: string;\n\n  /** The ARIA role of the dialog. */\n  role?: DialogRole = 'dialog';\n\n  /** Custom class(es) for the overlay panel. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the dialog has a background. */\n  hasBackdrop?: boolean = true;\n\n  /** Custom class(es) for the backdrop. */\n  backdropClass?: string | undefined = '';\n\n  /** Whether the dialog can be closed by user interaction. */\n  disableClose?: boolean = false;\n\n  /** The width of the dialog. */\n  width?: string = '';\n\n  /** The height of the dialog. */\n  height?: string = '';\n\n  /** The minimum width of the dialog. */\n  minWidth?: string | number = '';\n\n  /** The minimum height of the dialog. */\n  minHeight?: string | number = '';\n\n  /** The maximum width of the dialog. */\n  maxWidth?: string | number = '80vw';\n\n  /** The maximum height of the dialog. */\n  maxHeight?: string | number = '';\n\n  /** The position of the dialog. */\n  position?: DialogPosition;\n\n  /** Data to be injected into the dialog content. */\n  data?: D | null = null;\n\n  /** The layout direction for the dialog content. */\n  direction?: Direction;\n\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy?: string | null = null;\n\n  /** Aria label to assign to the dialog element */\n  ariaLabel?: string | null = null;\n\n  /** Whether the dialog should focus the first focusable element on open. */\n  autoFocus?: boolean = true;\n\n  /** Duration of the enter animation. Has to be a valid CSS value (e.g. 100ms). */\n  enterAnimationDuration?: string = '225ms';\n\n  /** Duration of the exit animation. Has to be a valid CSS value (e.g. 50ms). */\n  exitAnimationDuration?: string = '225ms';\n}\n"]}