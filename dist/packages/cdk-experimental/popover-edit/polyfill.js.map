{"version":3,"file":"polyfill.js","sourceRoot":"","sources":["../../../../src/cdk-experimental/popover-edit/polyfill.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AASA,MAAM,UAAU,OAAO,CAAC,OAAgB,EAAE,QAAgB;IACxD,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC;QACpB,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3B,CAAC,mBAAA,OAAO,EAAO,CAAC,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,CAAC;AACtD,CAAC;;;;;;;AAGD,MAAM,UAAU,OAAO,CAAC,OAA2C,EAAE,QAAgB;IAEnF,IAAI,CAAC,CAAC,OAAO,YAAY,IAAI,CAAC,EAAE;QAAE,OAAO,IAAI,CAAC;KAAE;;QAE5C,IAAI,GAAc,OAAO;IAC7B,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,YAAY,OAAO,CAAC,EAAE;QACjD,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,OAAO,IAAI,IAAI,mBAAA,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAgB,CAAC;AAChF,CAAC;;;;;;;AAGD,SAAS,eAAe,CAAC,OAAgB,EAAE,QAAgB;;QACrD,IAAI,GAAc,OAAO;IAC7B,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,YAAY,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE;QAC5E,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,OAAO,mBAAA,CAAC,IAAI,IAAI,IAAI,CAAC,EAAgB,CAAC;AACxC,CAAC;;MAEK,gBAAgB,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IE 11 compatible matches implementation. */\nexport function matches(element: Element, selector: string): boolean {\n  return element.matches ?\n      element.matches(selector) :\n      (element as any)['msMatchesSelector'](selector);\n}\n\n/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */\nexport function closest(element: EventTarget|Element|null|undefined, selector: string):\n    Element|null {\n  if (!(element instanceof Node)) { return null; }\n\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element)) {\n    curr = curr.parentNode;\n  }\n\n  return curr && (hasNativeClosest ?\n      curr.closest(selector) : polyfillClosest(curr, selector)) as Element|null;\n}\n\n/** Polyfill for browsers without Element.closest. */\nfunction polyfillClosest(element: Element, selector: string): Element|null {\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n    curr = curr.parentNode;\n  }\n\n  return (curr || null) as Element|null;\n}\n\nconst hasNativeClosest = !!Element.prototype.closest;\n"]}