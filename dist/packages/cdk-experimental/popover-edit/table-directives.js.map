{"version":3,"file":"table-directives.js","sourceRoot":"","sources":["../../../../src/cdk-experimental/popover-edit/table-directives.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {FocusTrap} from '@angular/cdk/a11y';\nimport {OverlayRef, PositionStrategy} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  NgZone,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n  HostListener,\n} from '@angular/core';\nimport {fromEvent, fromEventPattern, merge, ReplaySubject} from 'rxjs';\nimport {\n  filter,\n  map,\n  mapTo,\n  share,\n  startWith,\n  takeUntil,\n  throttleTime,\n  withLatestFrom,\n} from 'rxjs/operators';\n\nimport {CELL_SELECTOR, EDIT_PANE_CLASS, EDIT_PANE_SELECTOR, ROW_SELECTOR} from './constants';\nimport {EditEventDispatcher, HoverContentState} from './edit-event-dispatcher';\nimport {EditServices} from './edit-services';\nimport {FocusDispatcher} from './focus-dispatcher';\nimport {\n  FocusEscapeNotifier,\n  FocusEscapeNotifierDirection,\n  FocusEscapeNotifierFactory\n} from './focus-escape-notifier';\nimport {closest} from './polyfill';\n\n/**\n * Describes the number of columns before and after the originating cell that the\n * edit popup should span. In left to right locales, before means left and after means\n * right. In right to left locales before means right and after means left.\n */\nexport interface CdkPopoverEditColspan {\n  before?: number;\n  after?: number;\n}\n\n/** Used for rate-limiting mousemove events. */\nconst MOUSE_MOVE_THROTTLE_TIME_MS = 10;\n\n/**\n * A directive that must be attached to enable editability on a table.\n * It is responsible for setting up delegated event handlers and providing the\n * EditEventDispatcher service for use by the other edit directives.\n */\n@Directive({\n  selector: 'table[editable], cdk-table[editable], mat-table[editable]',\n  providers: [EditEventDispatcher, EditServices],\n})\nexport class CdkEditable implements AfterViewInit, OnDestroy {\n  protected readonly destroyed = new ReplaySubject<void>();\n\n  constructor(\n      protected readonly elementRef: ElementRef,\n      protected readonly editEventDispatcher: EditEventDispatcher,\n      protected readonly focusDispatcher: FocusDispatcher, protected readonly ngZone: NgZone) {}\n\n  ngAfterViewInit(): void {\n    this._listenForTableEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  private _listenForTableEvents(): void {\n    const element = this.elementRef.nativeElement;\n    const toClosest = (selector: string) =>\n        map((event: UIEvent) => closest(event.target, selector));\n\n    this.ngZone.runOutsideAngular(() => {\n      // Track mouse movement over the table to hide/show hover content.\n      fromEvent<MouseEvent>(element, 'mouseover').pipe(\n          toClosest(ROW_SELECTOR),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.hovering);\n      fromEvent<MouseEvent>(element, 'mouseleave').pipe(\n          mapTo(null),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.hovering);\n      fromEvent<MouseEvent>(element, 'mousemove').pipe(\n          throttleTime(MOUSE_MOVE_THROTTLE_TIME_MS),\n          toClosest(ROW_SELECTOR),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.mouseMove);\n\n      // Track focus within the table to hide/show/make focusable hover content.\n      fromEventPattern<FocusEvent>(\n          (handler) => element.addEventListener('focus', handler, true),\n          (handler) => element.removeEventListener('focus', handler, true)\n          ).pipe(\n              takeUntil(this.destroyed),\n              toClosest(ROW_SELECTOR),\n              share(),\n              ).subscribe(this.editEventDispatcher.focused);\n      fromEventPattern<FocusEvent>(\n          (handler) => element.addEventListener('blur', handler, true),\n          (handler) => element.removeEventListener('blur', handler, true)\n          ).pipe(\n              takeUntil(this.destroyed),\n              mapTo(null),\n              share(),\n              ).subscribe(this.editEventDispatcher.focused);\n\n      // Keep track of rows within the table. This is used to know which rows with hover content\n      // are first or last in the table. They are kept focusable in case focus enters from above\n      // or below the table.\n      this.ngZone.onStable.pipe(\n          takeUntil(this.destroyed),\n          // Optimization: ignore dom changes while focus is within the table as we already\n          // ensure that rows above and below the focused/active row are tabbable.\n          withLatestFrom(this.editEventDispatcher.editingOrFocused),\n          filter(([_, activeRow]) => activeRow == null),\n          map(() => element.querySelectorAll(ROW_SELECTOR)),\n          share(),\n          ).subscribe(this.editEventDispatcher.allRows);\n\n      fromEvent<KeyboardEvent>(element, 'keydown').pipe(\n          filter(event => event.key === 'Enter'),\n          toClosest(CELL_SELECTOR),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.editing);\n\n      // Keydown must be used here or else key autorepeat does not work properly on some platforms.\n      fromEvent<KeyboardEvent>(element, 'keydown')\n          .pipe(takeUntil(this.destroyed))\n          .subscribe(this.focusDispatcher.keyObserver);\n    });\n  }\n}\n\nconst POPOVER_EDIT_HOST_BINDINGS = {\n  'tabIndex': '0',\n  'class': 'cdk-popover-edit-cell',\n  '[attr.aria-haspopup]': 'true',\n};\n\nconst POPOVER_EDIT_INPUTS = [\n  'template: cdkPopoverEdit',\n  'context: cdkPopoverEditContext',\n  'colspan: cdkPopoverEditColspan',\n];\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[cdkPopoverEdit]:not([cdkPopoverEditTabOut])',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class CdkPopoverEdit<C> implements AfterViewInit, OnDestroy {\n  /** The edit lens template shown over the cell on edit. */\n  template: TemplateRef<any>|null = null;\n\n  /**\n   * Implicit context to pass along to the template. Can be omitted if the template\n   * is defined within the cell.\n   */\n  context?: C;\n\n  /**\n   * Specifies that the popup should cover additional table cells before and/or after\n   * this one.\n   */\n  get colspan(): CdkPopoverEditColspan {\n    return this._colspan;\n  }\n  set colspan(value: CdkPopoverEditColspan) {\n    this._colspan = value;\n\n    // Recompute positioning when the colspan changes.\n    if (this.overlayRef) {\n      this.overlayRef.updatePositionStrategy(this._getPositionStrategy());\n\n      if (this.overlayRef.hasAttached()) {\n        this._updateOverlaySize();\n      }\n    }\n  }\n  private _colspan: CdkPopoverEditColspan = {};\n\n  protected focusTrap?: FocusTrap;\n  protected overlayRef?: OverlayRef;\n  protected readonly destroyed = new ReplaySubject<void>();\n\n  constructor(\n      protected readonly services: EditServices, protected readonly elementRef: ElementRef,\n      protected readonly viewContainerRef: ViewContainerRef) {}\n\n  ngAfterViewInit(): void {\n    this._startListeningToEditEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n\n    if (this.focusTrap) {\n      this.focusTrap.destroy();\n      this.focusTrap = undefined;\n    }\n\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n    }\n  }\n\n  protected initFocusTrap(): void {\n    this.focusTrap = this.services.focusTrapFactory.create(this.overlayRef!.overlayElement);\n  }\n\n  protected closeEditOverlay(): void {\n    this.services.editEventDispatcher.doneEditingCell(this.elementRef.nativeElement!);\n  }\n\n  protected panelClass(): string {\n    return EDIT_PANE_CLASS;\n  }\n\n  private _startListeningToEditEvents(): void {\n    this.services.editEventDispatcher.editingCell(this.elementRef.nativeElement!)\n        .pipe(takeUntil(this.destroyed))\n        .subscribe((open) => {\n          if (open && this.template) {\n            if (!this.overlayRef) {\n              this._createEditOverlay();\n            }\n\n            this._showEditOverlay();\n          } else if (this.overlayRef) {\n            this._maybeReturnFocusToCell();\n\n            this.overlayRef.detach();\n          }\n        });\n  }\n\n  private _createEditOverlay(): void {\n    this.overlayRef = this.services.overlay.create({\n      disposeOnNavigation: true,\n      panelClass: this.panelClass(),\n      positionStrategy: this._getPositionStrategy(),\n      scrollStrategy: this.services.overlay.scrollStrategies.reposition(),\n      direction: this.services.directionality,\n    });\n\n    this.initFocusTrap();\n    this.overlayRef.overlayElement.setAttribute('aria-role', 'dialog');\n\n    this.overlayRef.detachments().subscribe(() => this.closeEditOverlay());\n  }\n\n  private _showEditOverlay(): void {\n    this.overlayRef!.attach(new TemplatePortal(\n        this.template!,\n        this.viewContainerRef,\n        {$implicit: this.context}));\n\n    // We have to defer trapping focus, because doing so too early can cause the form inside\n    // the overlay to be submitted immediately if it was opened on an Enter keydown event.\n    this.services.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.focusTrap!.focusInitialElement();\n      });\n    });\n\n    // Update the size of the popup initially and on subsequent changes to\n    // scroll position and viewport size.\n    merge(this.services.scrollDispatcher.scrolled(), this.services.viewportRuler.change())\n        .pipe(\n            startWith(null),\n            takeUntil(this.overlayRef!.detachments()),\n            takeUntil(this.destroyed),\n            )\n        .subscribe(() => {\n          this._updateOverlaySize();\n        });\n  }\n\n  private _getOverlayCells(): HTMLElement[] {\n    const cell = closest(this.elementRef.nativeElement!, CELL_SELECTOR) as HTMLElement;\n\n    if (!this._colspan.before && !this._colspan.after) {\n      return [cell];\n    }\n\n    const row = closest(this.elementRef.nativeElement!, ROW_SELECTOR)!;\n    const rowCells = Array.from(row.querySelectorAll(CELL_SELECTOR)) as HTMLElement[];\n    const ownIndex = rowCells.indexOf(cell);\n\n    return rowCells.slice(\n        ownIndex - (this._colspan.before || 0), ownIndex + (this._colspan.after || 0) + 1);\n  }\n\n  private _getPositionStrategy(): PositionStrategy {\n    return this.services.positionFactory.positionStrategyForCells(this._getOverlayCells());\n  }\n\n  private _updateOverlaySize(): void {\n    this.overlayRef!.updateSize(\n        this.services.positionFactory.sizeConfigForCells(this._getOverlayCells()));\n  }\n\n  private _maybeReturnFocusToCell(): void {\n    if (closest(document.activeElement, EDIT_PANE_SELECTOR) ===\n        this.overlayRef!.overlayElement) {\n      this.elementRef.nativeElement!.focus();\n    }\n  }\n}\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[cdkPopoverEdit][cdkPopoverEditTabOut]',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class CdkPopoverEditTabOut<C> extends CdkPopoverEdit<C> {\n  protected focusTrap?: FocusEscapeNotifier;\n\n  constructor(\n      elementRef: ElementRef, viewContainerRef: ViewContainerRef, services: EditServices,\n      protected readonly focusEscapeNotifierFactory: FocusEscapeNotifierFactory) {\n    super(services, elementRef, viewContainerRef);\n  }\n\n  protected initFocusTrap(): void {\n    this.focusTrap = this.focusEscapeNotifierFactory.create(this.overlayRef!.overlayElement);\n\n    this.focusTrap.escapes().pipe(takeUntil(this.destroyed)).subscribe(direction => {\n      if (this.services.editEventDispatcher.editRef) {\n        this.services.editEventDispatcher.editRef.blur();\n      }\n\n      this.services.focusDispatcher.moveFocusHorizontally(\n          closest(this.elementRef.nativeElement!, CELL_SELECTOR) as HTMLElement,\n          direction === FocusEscapeNotifierDirection.START ? -1 : 1);\n\n      this.closeEditOverlay();\n    });\n  }\n}\n\n/**\n * A structural directive that shows its contents when the table row containing\n * it is hovered or when an element in the row has focus.\n */\n@Directive({\n  selector: '[cdkRowHoverContent]',\n})\nexport class CdkRowHoverContent implements AfterViewInit, OnDestroy {\n  protected readonly destroyed = new ReplaySubject<void>();\n  protected viewRef: EmbeddedViewRef<any>|null = null;\n\n  private _row?: Element;\n\n  constructor(\n      protected readonly services: EditServices, protected readonly elementRef: ElementRef,\n      protected readonly templateRef: TemplateRef<any>,\n      protected readonly viewContainerRef: ViewContainerRef) {}\n\n  ngAfterViewInit(): void {\n    this._row = closest(this.elementRef.nativeElement!, ROW_SELECTOR)!;\n\n    this.services.editEventDispatcher.registerRowWithHoverContent(this._row);\n    this._listenForHoverAndFocusEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n\n    if (this.viewRef) {\n      this.viewRef.destroy();\n    }\n\n    if (this._row) {\n      this.services.editEventDispatcher.deregisterRowWithHoverContent(this._row);\n    }\n  }\n\n  /**\n   * Called immediately after the hover content is created and added to the dom.\n   * In the CDK version, this is a noop but subclasses such as MatRowHoverContent use this\n   * to prepare/style the inserted element.\n   */\n  protected initElement(_: HTMLElement): void {\n  }\n\n  /**\n   * Called when the hover content needs to be focusable to preserve a reasonable tab ordering\n   * but should not yet be shown.\n   */\n  protected makeElementHiddenButFocusable(element: HTMLElement): void {\n    element.style.opacity = '0';\n  }\n\n  /**\n   * Called when the hover content needs to be focusable to preserve a reasonable tab ordering\n   * but should not yet be shown.\n   */\n  protected makeElementVisible(element: HTMLElement): void {\n    element.style.opacity = '';\n  }\n\n  private _listenForHoverAndFocusEvents(): void {\n    this.services.editEventDispatcher.hoverOrFocusOnRow(this._row!)\n        .pipe(takeUntil(this.destroyed))\n        .subscribe(eventState => {\n          // When in FOCUSABLE state, add the hover content to the dom but make it transparent so\n          // that it is in the tab order relative to the currently focused row.\n\n          if (eventState === HoverContentState.ON || eventState === HoverContentState.FOCUSABLE) {\n            if (!this.viewRef) {\n              this.viewRef = this.viewContainerRef.createEmbeddedView(this.templateRef, {});\n              this.initElement(this.viewRef.rootNodes[0] as HTMLElement);\n            } else if (this.viewContainerRef.indexOf(this.viewRef) === -1) {\n              this.viewContainerRef.insert(this.viewRef!);\n            }\n\n            if (eventState === HoverContentState.ON) {\n              this.makeElementVisible(this.viewRef.rootNodes[0] as HTMLElement);\n            } else {\n              this.makeElementHiddenButFocusable(this.viewRef.rootNodes[0] as HTMLElement);\n            }\n          } else if (this.viewRef) {\n            this.viewContainerRef.detach(this.viewContainerRef.indexOf(this.viewRef));\n          }\n        });\n  }\n}\n\n/**\n * Opens the closest edit popover to this element, whether it's associated with this exact\n * element or an ancestor element.\n */\n@Directive({\n  selector: '[cdkEditOpen]',\n})\nexport class CdkEditOpen {\n  constructor(\n      protected readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly editEventDispatcher: EditEventDispatcher) {\n\n    const nativeElement = elementRef.nativeElement;\n\n    // Prevent accidental form submits.\n    if (nativeElement.nodeName === 'BUTTON' && !nativeElement.getAttribute('type')) {\n      nativeElement.setAttribute('type', 'button');\n    }\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('click', ['$event'])\n  openEdit(evt: Event): void {\n    this.editEventDispatcher.editing.next(closest(this.elementRef.nativeElement!, CELL_SELECTOR));\n    evt.stopPropagation();\n  }\n}\n"]}