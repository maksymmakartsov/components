{"version":3,"file":"table-directives.js","sourceRoot":"","sources":["../../../../src/material-experimental/popover-edit/table-directives.ts"],"names":[],"mappings":";;;;;;;;;;;AAOA,OAAO,EAAC,SAAS,EAAC,MAAM,eAAe,CAAC;AACxC,OAAO,EACL,cAAc,EACd,QAAQ,EACR,cAAc,EACd,oBAAoB,EACpB,kBAAkB,EAClB,WAAW,EACZ,MAAM,wCAAwC,CAAC;;MAE1C,0BAA0B,GAAG;IACjC,UAAU,EAAE,GAAG;IACf,OAAO,EAAE,uBAAuB;IAChC,sBAAsB,EAAE,MAAM;CAC/B;;MAEK,mBAAmB,GAAG;IAC1B,0BAA0B;IAC1B,gCAAgC;IAChC,gCAAgC;CACjC;;MAEK,eAAe,GAAG,eAAe;;MAEjC,mBAAmB,GAAG,uBAAuB;;MAC7C,uBAAuB,GAAG,mBAAmB,GAAG,MAAM;;MACtD,2BAA2B,GAAG,mBAAmB,GAAG,UAAU;;MAC9D,wBAAwB,GAAG,mBAAmB,GAAG,YAAY;;;;;;;AAYnE,MAAM,OAAO,cAAkB,SAAQ,cAAiB;;;;;IAC5C,UAAU;QAClB,OAAO,eAAe,CAAC;IACzB,CAAC;;;YARF,SAAS,SAAC;gBACT,QAAQ,EAAE,8CAA8C;gBACxD,IAAI,EAAE,0BAA0B;gBAChC,MAAM,EAAE,mBAAmB;aAC5B;;;;;;;;AAiBD,MAAM,OAAO,oBAAwB,SAAQ,oBAAuB;;;;;IACxD,UAAU;QAClB,OAAO,eAAe,CAAC;IACzB,CAAC;;;YARF,SAAS,SAAC;gBACT,QAAQ,EAAE,wCAAwC;gBAClD,IAAI,EAAE,0BAA0B;gBAChC,MAAM,EAAE,mBAAmB;aAC5B;;;;;;AAcD,MAAM,OAAO,kBAAmB,SAAQ,kBAAkB;;;;;;IAC9C,WAAW,CAAC,OAAoB;QACxC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC3B,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAC7C,CAAC;;;;;;IAES,6BAA6B,CAAC,OAAoB;QAC1D,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;IACxD,CAAC;;;;;;IAES,kBAAkB,CAAC,OAAoB;QAC/C,mBAAA,QAAQ,CAAC,mBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,EAAC,EAAE,cAAc,CAAC,EAAC,CACpD,SAAS,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QAE7C,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,KAAK,KAAK,EAAE;YAChD,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;SAChD;aAAM;YACL,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;SACnD;QAED,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB;;;QAAC,GAAG,EAAE;YAC1C,UAAU;;;YAAC,GAAG,EAAE;gBACd,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;YACrD,CAAC,EAAC,CAAC;QACL,CAAC,EAAC,CAAC;IACL,CAAC;;;YA7BF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;aACjC;;;;;;AAqCD,MAAM,OAAO,WAAY,SAAQ,WAAW;;;YAH3C,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;aAC1B","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive} from '@angular/core';\nimport {\n  _CELL_SELECTOR,\n  _closest,\n  CdkPopoverEdit,\n  CdkPopoverEditTabOut,\n  CdkRowHoverContent,\n  CdkEditOpen\n} from '@angular/cdk-experimental/popover-edit';\n\nconst POPOVER_EDIT_HOST_BINDINGS = {\n  'tabIndex': '0',\n  'class': 'mat-popover-edit-cell',\n  '[attr.aria-haspopup]': 'true',\n};\n\nconst POPOVER_EDIT_INPUTS = [\n  'template: matPopoverEdit',\n  'context: matPopoverEditContext',\n  'colspan: matPopoverEditColspan',\n];\n\nconst EDIT_PANE_CLASS = 'mat-edit-pane';\n\nconst MAT_ROW_HOVER_CLASS = 'mat-row-hover-content';\nconst MAT_ROW_HOVER_RTL_CLASS = MAT_ROW_HOVER_CLASS + '-rtl';\nconst MAT_ROW_HOVER_ANIMATE_CLASS = MAT_ROW_HOVER_CLASS + '-visible';\nconst MAT_ROW_HOVER_CELL_CLASS = MAT_ROW_HOVER_CLASS + '-host-cell';\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[matPopoverEdit]:not([matPopoverEditTabOut])',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class MatPopoverEdit<C> extends CdkPopoverEdit<C> {\n  protected panelClass(): string {\n    return EDIT_PANE_CLASS;\n  }\n}\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[matPopoverEdit][matPopoverEditTabOut]',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class MatPopoverEditTabOut<C> extends CdkPopoverEditTabOut<C> {\n  protected panelClass(): string {\n    return EDIT_PANE_CLASS;\n  }\n}\n\n/**\n * A structural directive that shows its contents when the table row containing\n * it is hovered or when an element in the row has focus.\n */\n@Directive({\n  selector: '[matRowHoverContent]',\n})\nexport class MatRowHoverContent extends CdkRowHoverContent {\n  protected initElement(element: HTMLElement) {\n    super.initElement(element);\n    element.classList.add(MAT_ROW_HOVER_CLASS);\n  }\n\n  protected makeElementHiddenButFocusable(element: HTMLElement): void {\n    element.classList.remove(MAT_ROW_HOVER_ANIMATE_CLASS);\n  }\n\n  protected makeElementVisible(element: HTMLElement): void {\n    _closest(this.elementRef.nativeElement!, _CELL_SELECTOR)!\n        .classList.add(MAT_ROW_HOVER_CELL_CLASS);\n\n    if (this.services.directionality.value === 'rtl') {\n      element.classList.add(MAT_ROW_HOVER_RTL_CLASS);\n    } else {\n      element.classList.remove(MAT_ROW_HOVER_RTL_CLASS);\n    }\n\n    element.classList.remove(MAT_ROW_HOVER_ANIMATE_CLASS);\n    this.services.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        element.classList.add(MAT_ROW_HOVER_ANIMATE_CLASS);\n      });\n    });\n  }\n}\n\n/**\n * Opens the closest edit popover to this element, whether it's associated with this exact\n * element or an ancestor element.\n */\n@Directive({\n  selector: '[matEditOpen]',\n})\nexport class MatEditOpen extends CdkEditOpen {\n}\n"]}