{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../src/material-experimental/mdc-button/button.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,QAAQ,EAAC,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,UAAU,EACV,MAAM,EACN,MAAM,EACN,QAAQ,EACR,iBAAiB,EAClB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,qBAAqB,EAAC,MAAM,sCAAsC,CAAC;AAE3E,OAAO,EACL,eAAe,EACf,iBAAiB,EACjB,eAAe,EACf,iBAAiB,EACjB,aAAa,EACb,aAAa,EACd,MAAM,eAAe,CAAC;;;;;;;;;;AAyBvB,MAAM,OAAO,SAAU,SAAQ,aAAa;;;;;;;IAC1C,YACI,UAAsB,EAAE,QAAkB,EAAE,MAAc,EACf,aAAsB;QACnE,KAAK,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;IACrD,CAAC;;;YAnBF,SAAS,SAAC;gBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;gBACnB,QAAQ,EAAE;;;GAGT;gBACD,WAAW,EAAE,aAAa;gBAC1B,SAAS,EAAE,CAAC,YAAY,CAAC;gBACzB,MAAM,EAAE,iBAAiB;gBACzB,IAAI,EAAE,eAAe;gBACrB,QAAQ,EAAE,WAAW;gBACrB,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;;YAvCC,UAAU;YAJJ,QAAQ;YAMd,MAAM;yCAyCD,QAAQ,YAAI,MAAM,SAAC,qBAAqB;;;;;;;;;;;;AA0B/C,MAAM,OAAO,SAAU,SAAQ,aAAa;;;;;;;IAC1C,YACI,UAAsB,EAAE,QAAkB,EAAE,MAAc,EACf,aAAsB;QACnE,KAAK,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;IACrD,CAAC;;;YAhBF,SAAS,SAAC;gBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;gBACnB,QAAQ,EAAE,gFAAgF;gBAC1F,QAAQ,EAAE,sBAAsB;gBAChC,IAAI,EAAE,eAAe;gBACrB,MAAM,EAAE,iBAAiB;gBACzB,WAAW,EAAE,aAAa;gBAC1B,SAAS,EAAE,CAAC,YAAY,CAAC;gBACzB,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;;YApEC,UAAU;YAJJ,QAAQ;YAMd,MAAM;yCAsED,QAAQ,YAAI,MAAM,SAAC,qBAAqB","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  NgZone,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\nimport {\n  MAT_ANCHOR_HOST,\n  MAT_ANCHOR_INPUTS,\n  MAT_BUTTON_HOST,\n  MAT_BUTTON_INPUTS,\n  MatAnchorBase,\n  MatButtonBase\n} from './button-base';\n\n/**\n * Material Design button component. Users interact with a button to perform an action.\n * See https://material.io/components/buttons\n *\n * The `MatButton` class applies to native button elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatButton` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\n@Component({\n  moduleId: module.id,\n  selector: `\n    button[mat-button], button[mat-raised-button], button[mat-flat-button],\n    button[mat-stroked-button]\n  `,\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  inputs: MAT_BUTTON_INPUTS,\n  host: MAT_BUTTON_HOST,\n  exportAs: 'matButton',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatButton extends MatButtonBase {\n  constructor(\n      elementRef: ElementRef, platform: Platform, ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n}\n\n/**\n * Material Design button component for anchor elements. Anchor elements are used to provide\n * links for the user to navigate across different routes or pages.\n * See https://material.io/components/buttons\n *\n * The `MatAnchor` class applies to native anchor elements and captures the appearances for\n * \"text button\", \"outlined button\", and \"contained button\" per the Material Design\n * specification. `MatAnchor` additionally captures an additional \"flat\" appearance, which matches\n * \"contained\" but without elevation.\n */\n@Component({\n  moduleId: module.id,\n  selector: `a[mat-button], a[mat-raised-button], a[mat-flat-button], a[mat-stroked-button]`,\n  exportAs: 'matButton, matAnchor',\n  host: MAT_ANCHOR_HOST,\n  inputs: MAT_ANCHOR_INPUTS,\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatAnchor extends MatAnchorBase {\n  constructor(\n      elementRef: ElementRef, platform: Platform, ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, platform, ngZone, animationMode);\n  }\n}\n"]}