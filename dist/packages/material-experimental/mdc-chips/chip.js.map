{"version":3,"file":"chip.js","sourceRoot":"","sources":["../../../../src/material-experimental/mdc-chips/chip.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Platform} from '@angular/cdk/platform';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinColor,\n  mixinDisableRipple,\n  mixinTabIndex,\n  RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n} from '@angular/material/core';\nimport {MDCChipAdapter, MDCChipFoundation} from '@material/chips';\nimport {numbers} from '@material/ripple';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MatChipAvatar, MatChipTrailingIcon, MatChipRemove} from './chip-icons';\n\n\nlet uid = 0;\n\n/** Represents an event fired on an individual `mat-chip`. */\nexport interface MatChipEvent {\n  /** The chip the event was fired on. */\n  chip: MatChip;\n}\n\n/**\n * Directive to add MDC CSS to non-basic chips.\n * @docs-private\n */\n@Directive({\n  selector: `mat-chip, mat-chip-option, mat-chip-row, [mat-chip], [mat-chip-option],\n    [mat-chip-row]`,\n  host: {'class': 'mat-mdc-chip mdc-chip'}\n})\nexport class MatChipCssInternalOnly { }\n\n/**\n * Boilerplate for applying mixins to MatChip.\n * @docs-private\n */\nclass MatChipBase {\n  disabled!: boolean;\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst _MatChipMixinBase:\n  CanColorCtor &\n  CanDisableRippleCtor &\n  HasTabIndexCtor &\n  typeof MatChipBase =\n    mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-basic-chip, mat-chip',\n  inputs: ['color', 'disableRipple'],\n  exportAs: 'matChip',\n  templateUrl: 'chip.html',\n  styleUrls: ['chips.css'],\n  host: {\n    '[class.mat-mdc-chip-disabled]': 'disabled',\n    '[class.mat-mdc-chip-highlighted]': 'highlighted',\n    '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n    '[class.mat-mdc-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n    '[class.mat-mdc-basic-chip]': '_isBasicChip()',\n    '[class.mat-mdc-standard-chip]': '!_isBasicChip()',\n    '[class._mat-animation-noopable]': '_animationsDisabled',\n    '[id]': 'id',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(transitionend)': '_chipFoundation.handleTransitionEnd($event)'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatChip extends _MatChipMixinBase implements AfterContentInit, AfterViewInit,\n  CanColor, CanDisableRipple, HasTabIndex, RippleTarget, OnDestroy {\n  /** Emits when the chip is focused. */\n  readonly _onFocus = new Subject<MatChipEvent>();\n\n  /** Emits when the chip is blurred. */\n  readonly _onBlur = new Subject<MatChipEvent>();\n\n  readonly HANDLED_KEYS: number[] = [];\n\n  /** Whether the chip has focus. */\n  protected _hasFocusInternal = false;\n\n    /** Whether animations for the chip are enabled. */\n  _animationsDisabled: boolean;\n\n  get _hasFocus() {\n    return this._hasFocusInternal;\n  }\n\n  /** Default unique id for the chip. */\n  private _uniqueId = `mat-mdc-chip-${uid++}`;\n\n  /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n  @Input() id: string = this._uniqueId;\n\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    if (this.removeIcon) {\n      this.removeIcon.disabled = value;\n    }\n  }\n  protected _disabled: boolean = false;\n\n\n  /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n  @Input()\n  get value(): any {\n    return this._value !== undefined\n      ? this._value\n      : this._elementRef.nativeElement.textContent;\n  }\n  set value(value: any) { this._value = value; }\n  protected _value: any;\n\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  @Input()\n  get removable(): boolean { return this._removable; }\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  protected _removable: boolean = true;\n\n  /**\n   * Colors the chip for emphasis as if it were selected.\n   */\n  @Input()\n  get highlighted(): boolean { return this._highlighted; }\n  set highlighted(value: boolean) {\n    this._highlighted = coerceBooleanProperty(value);\n  }\n  protected _highlighted: boolean = false;\n\n  /** Emitted when the user interacts with the remove icon. */\n  @Output() removeIconInteraction = new EventEmitter<string>();\n\n  /** Emitted when the user interacts with the chip. */\n  @Output() interaction = new EventEmitter<string>();\n\n  /** Emitted when the chip is destroyed. */\n  @Output() readonly destroyed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** Emitted when a chip is to be removed. */\n  @Output() readonly removed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** The MDC foundation containing business logic for MDC chip. */\n  _chipFoundation: MDCChipFoundation;\n\n  /** The unstyled chip selector for this component. */\n  protected basicChipAttrName = 'mat-basic-chip';\n\n  /** Subject that emits when the component has been destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** The ripple renderer for this chip. */\n  private _rippleRenderer: RippleRenderer;\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down.\n   * Implemented as part of RippleTarget.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Implemented as part of RippleTarget. Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || !!this.rippleConfig.disabled ||\n      this._isBasicChip();\n  }\n\n  /** The chip's leading icon. */\n  @ContentChild(MatChipAvatar, {static: false}) leadingIcon: MatChipAvatar;\n\n  /** The chip's trailing icon. */\n  @ContentChild(MatChipTrailingIcon, {static: false}) trailingIcon: MatChipTrailingIcon;\n\n  /** The chip's trailing remove icon. */\n  @ContentChild(MatChipRemove, {static: false}) removeIcon: MatChipRemove;\n\n /**\n  * Implementation of the MDC chip adapter interface.\n  * These methods are called by the chip foundation.\n  */\n  protected _chipAdapter: MDCChipAdapter = {\n    addClass: (className) => this._setMdcClass(className, true),\n    removeClass: (className) => this._setMdcClass(className, false),\n    hasClass: (className) => this._elementRef.nativeElement.classList.contains(className),\n    addClassToLeadingIcon: (className) => this.leadingIcon.setClass(className, true),\n    removeClassFromLeadingIcon: (className) => this.leadingIcon.setClass(className, false),\n    eventTargetHasClass: (target: EventTarget | null, className: string) => {\n      return target ? (target as Element).classList.contains(className) : false;\n    },\n    notifyInteraction: () => this.interaction.emit(this.id),\n    notifySelection: () => {\n      // No-op. We call dispatchSelectionEvent ourselves in MatChipOption, because we want to\n      // specify whether selection occurred via user input.\n    },\n    notifyNavigation: () => {\n      // TODO: This is a new feature added by MDC; consider exposing this event to users in the\n      // future.\n    },\n    notifyTrailingIconInteraction: () => this.removeIconInteraction.emit(this.id),\n    notifyRemoval: () => this.removed.emit({chip: this}),\n    getComputedStyleValue: propertyName =>\n        window.getComputedStyle(this._elementRef.nativeElement).getPropertyValue(propertyName),\n    setStyleProperty: (propertyName: string, value: string) => {\n      this._elementRef.nativeElement.style.setProperty(propertyName, value);\n    },\n    hasLeadingIcon: () => !!this.leadingIcon,\n    hasTrailingAction: () => !!this.trailingIcon,\n    isRTL: () => !!this._dir && this._dir.value === 'rtl',\n    focusPrimaryAction: () => {\n      // Angular Material MDC chips fully manage focus. TODO: Managing focus and handling keyboard\n      // events was added by MDC after our implementation; consider consolidating.\n    },\n    focusTrailingAction: () => {},\n    setTrailingActionAttr: (attr, value) =>\n        this.trailingIcon && this.trailingIcon.setAttribute(attr, value),\n    setPrimaryActionAttr: (name: string, value: string) => {\n      // MDC is currently using this method to set aria-checked on choice and filter chips,\n      // which in the MDC templates have role=\"checkbox\" and role=\"radio\" respectively.\n      // We have role=\"option\" on those chips instead, so we do not want aria-checked.\n      // Since we also manage the tabindex ourselves, we don't allow MDC to set it.\n      if (name === 'aria-checked' || name === 'tabindex') {\n        return;\n      }\n      this._elementRef.nativeElement.setAttribute(name, value);\n    },\n    // The 2 functions below are used by the MDC ripple, which we aren't using,\n    // so they will never be called\n    getRootBoundingClientRect: () => this._elementRef.nativeElement.getBoundingClientRect(),\n    getCheckmarkBoundingClientRect: () => null,\n };\n\n constructor(\n    public _changeDetectorRef: ChangeDetectorRef,\n    readonly _elementRef: ElementRef,\n    private _platform: Platform,\n    protected _ngZone: NgZone,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS)\n    private _globalRippleOptions: RippleGlobalOptions | null,\n    @Optional() private _dir: Directionality,\n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(_elementRef);\n    this._chipFoundation = new MDCChipFoundation(this._chipAdapter);\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n  }\n\n  ngAfterContentInit() {\n    this._initRemoveIcon();\n  }\n\n  ngAfterViewInit() {\n    this._initRipple();\n    this._chipFoundation.init();\n  }\n\n  ngOnDestroy() {\n    this.destroyed.emit({chip: this});\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._rippleRenderer._removeTriggerEvents();\n    this._chipFoundation.destroy();\n  }\n\n  /** Sets up the remove icon chip foundation, and subscribes to remove icon events. */\n  _initRemoveIcon() {\n    if (this.removeIcon) {\n      this._chipFoundation.setShouldRemoveOnTrailingIconClick(true);\n      this._listenToRemoveIconInteraction();\n      this.removeIcon.disabled = this.disabled;\n    }\n  }\n\n  /** Handles interaction with the remove icon. */\n  _listenToRemoveIconInteraction() {\n    this.removeIcon.interaction\n        .pipe(takeUntil(this._destroyed))\n        .subscribe((event) => {\n          // The MDC chip foundation calls stopPropagation() for any trailing icon interaction\n          // event, even ones it doesn't handle, so we want to avoid passing it keyboard events\n          // for which we have a custom handler.\n          if (this.disabled || (event instanceof KeyboardEvent &&\n            this.HANDLED_KEYS.indexOf(event.keyCode) !== -1)) {\n            return;\n          }\n          this._chipFoundation.handleTrailingIconInteraction(event);\n        });\n  }\n\n  /**\n   * Allows for programmatic removal of the chip.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove(): void {\n    if (this.removable) {\n      this._chipFoundation.beginExit();\n    }\n  }\n\n  /** Whether this chip is a basic (unstyled) chip. */\n  _isBasicChip() {\n    const element = this._elementRef.nativeElement as HTMLElement;\n    return element.hasAttribute(this.basicChipAttrName) ||\n      element.tagName.toLowerCase() === this.basicChipAttrName;\n  }\n\n  /** Sets whether the given CSS class should be applied to the MDC chip. */\n  private _setMdcClass(cssClass: string, active: boolean) {\n      const classes = this._elementRef.nativeElement.classList;\n      active ? classes.add(cssClass) : classes.remove(cssClass);\n      this._changeDetectorRef.markForCheck();\n  }\n\n  /** Initializes the ripple renderer. */\n  private _initRipple() {\n    this.rippleConfig = this._globalRippleOptions || {};\n\n    // Configure ripple animation to match MDC Ripple.\n    this.rippleConfig.animation = {\n      enterDuration: numbers.DEACTIVATION_TIMEOUT_MS,\n      exitDuration: numbers.FG_DEACTIVATION_MS,\n    };\n\n    this._rippleRenderer =\n      new RippleRenderer(this, this._ngZone, this._elementRef, this._platform);\n    this._rippleRenderer.setupTriggerEvents(this._elementRef);\n  }\n\n  /** Forwards interaction events to the MDC chip foundation. */\n  _handleInteraction(event: MouseEvent | KeyboardEvent) {\n    if (!this.disabled) {\n      this._chipFoundation.handleInteraction(event);\n    }\n  }\n}\n"]}