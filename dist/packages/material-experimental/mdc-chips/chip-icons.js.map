{"version":3,"file":"chip-icons.js","sourceRoot":"","sources":["../../../../src/material-experimental/mdc-chips/chip-icons.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EACL,iBAAiB,EACjB,SAAS,EACT,UAAU,GACX,MAAM,eAAe,CAAC;AACvB,OAAO,EAKL,aAAa,EACb,aAAa,GACd,MAAM,wBAAwB,CAAC;AAChC,OAAO,EAAC,OAAO,EAAC,MAAM,MAAM,CAAC;;;;;AAc7B,MAAM,OAAO,aAAa;;;;;IACxB,YAAoB,kBAAqC,EACrC,WAAoC;QADpC,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,gBAAW,GAAX,WAAW,CAAyB;IAAG,CAAC;;;;;;;IAG5D,QAAQ,CAAC,QAAgB,EAAE,MAAe;QACxC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;;;YAfF,SAAS,SAAC;gBACT,QAAQ,EAAE,kCAAkC;gBAC5C,IAAI,EAAE;oBACJ,OAAO,EAAE,4DAA4D;oBACrE,MAAM,EAAE,KAAK;iBACd;aACF;;;;YAzBC,iBAAiB;YAEjB,UAAU;;;;;;;IAyBE,2CAA6C;;;;;IAC7C,oCAA4C;;;;;;AAqB1D,MAAM,OAAO,mBAAmB;;;;IAC9B,YAAmB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAAG,CAAC;;;;IAE9C,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;;;;;;;IAGD,YAAY,CAAC,IAAY,EAAE,KAAa;QACtC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;;;YAlBF,SAAS,SAAC;gBACT,QAAQ,EAAE,+CAA+C;gBACzD,IAAI,EAAE;oBACJ,OAAO,EAAE,oEAAoE;oBAC7E,UAAU,EAAE,IAAI;oBAChB,aAAa,EAAE,MAAM;iBACtB;aACF;;;;YA9CC,UAAU;;;;IAgDE,0CAA8B;;;;;;AAgB5C,MAAM,iBAAkB,SAAQ,mBAAmB;;;;IACjD,YAAY,WAAuB;QACjC,KAAK,CAAC,WAAW,CAAC,CAAC;IACrB,CAAC;CACF;;MAEK,uBAAuB,GAIzB,aAAa,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;;;;;;;;;;;;;;AA2BnD,MAAM,OAAO,aAAc,SAAQ,uBAAuB;;;;IAOxD,YAAY,WAAuB;QACjC,KAAK,CAAC,WAAW,CAAC,CAAC;;;;;QAHrB,gBAAW,GAAwC,IAAI,OAAO,EAA8B,CAAC;IAI7F,CAAC;;;YArBF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;gBAChC,IAAI,EAAE;oBACJ,OAAO,EACL,wFAAwF;oBAC1F,YAAY,EAAE,UAAU;oBACxB,MAAM,EAAE,QAAQ;oBAChB,SAAS,EAAE,0BAA0B;oBACrC,WAAW,EAAE,0BAA0B;iBACxC;aACF;;;;YApGC,UAAU;;;;;;;;IA0GV,oCAA6F","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n} from '@angular/core';\nimport {\n  CanDisable,\n  CanDisableCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinDisabled,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\n\n\n/**\n * Directive to add CSS classes to chip leading icon.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-avatar, [matChipAvatar]',\n  host: {\n    'class': 'mat-mdc-chip-avatar mdc-chip__icon mdc-chip__icon--leading',\n    'role': 'img'\n  }\n})\nexport class MatChipAvatar {\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef<HTMLElement>) {}\n\n  /** Sets whether the given CSS class should be applied to the leading icon. */\n  setClass(cssClass: string, active: boolean) {\n    this._elementRef.nativeElement.classList.toggle(cssClass, active);\n    this._changeDetectorRef.markForCheck();\n  }\n}\n\n/**\n * Directive to add CSS classes to and configure attributes for chip trailing icon.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n  host: {\n    'class': 'mat-mdc-chip-trailing-icon mdc-chip__icon mdc-chip__icon--trailing',\n    'tabindex': '-1',\n    'aria-hidden': 'true',\n  }\n})\nexport class MatChipTrailingIcon {\n  constructor(public _elementRef: ElementRef) {}\n\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Sets an attribute on the icon. */\n  setAttribute(name: string, value: string) {\n    this._elementRef.nativeElement.setAttribute(name, value);\n  }\n}\n\n/**\n * Boilerplate for applying mixins to MatChipRemove.\n * @docs-private\n */\nclass MatChipRemoveBase extends MatChipTrailingIcon {\n  constructor(_elementRef: ElementRef) {\n    super(_elementRef);\n  }\n}\n\nconst _MatChipRemoveMixinBase:\n  CanDisableCtor &\n  HasTabIndexCtor &\n  typeof MatChipRemoveBase =\n    mixinTabIndex(mixinDisabled(MatChipRemoveBase));\n\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n */\n@Directive({\n  selector: '[matChipRemove]',\n  inputs: ['disabled', 'tabIndex'],\n  host: {\n    'class':\n      'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mdc-chip__icon mdc-chip__icon--trailing',\n    '[tabIndex]': 'tabIndex',\n    'role': 'button',\n    '(click)': 'interaction.next($event)',\n    '(keydown)': 'interaction.next($event)',\n  }\n})\nexport class MatChipRemove extends _MatChipRemoveMixinBase implements CanDisable, HasTabIndex {\n  /**\n   * Emits when the user interacts with the icon.\n   * @docs-private\n   */\n  interaction: Subject<MouseEvent | KeyboardEvent> = new Subject<MouseEvent | KeyboardEvent>();\n\n  constructor(_elementRef: ElementRef) {\n    super(_elementRef);\n  }\n}\n"]}