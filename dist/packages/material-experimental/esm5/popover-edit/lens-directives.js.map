{"version":3,"file":"lens-directives.js","sourceRoot":"","sources":["../../../../../src/material-experimental/popover-edit/lens-directives.ts"],"names":[],"mappings":";;;;;;;;;;;;AAQA,OAAO,EAAC,SAAS,EAAC,MAAM,eAAe,CAAC;AAExC,OAAO,EACL,cAAc,EACd,aAAa,EACb,YAAY,EACZ,OAAO,GACR,MAAM,wCAAwC,CAAC;;;;;;;;AAQhD;IAa4C,uCAAyB;IAbrE;;IAcA,CAAC;;gBAdA,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,IAAI,EAAE;wBACJ,OAAO,EAAE,eAAe;qBACzB;oBACD,MAAM,EAAE;wBACN,+CAA+C;wBAC/C,mDAAmD;wBACnD,6DAA6D;qBAC9D;oBACD,OAAO,EAAE,CAAC,+DAA+D,CAAC;oBAC1E,SAAS,EAAE,CAAC,OAAO,CAAC;iBACrB;;IAED,kBAAC;CAAA,AAdD,CAa4C,cAAc,GACzD;SADY,WAAW;;;;;AAIxB;IAM8C,yCAAwB;IANtE;;IAOA,CAAC;;gBAPA,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,IAAI,EAAE;wBACJ,MAAM,EAAE,QAAQ;qBACjB;iBACF;;IAED,oBAAC;CAAA,AAPD,CAM8C,aAAa,GAC1D;SADY,aAAa;;;;;AAI1B;IAM6C,wCAAuB;IANpE;;IAOA,CAAC;;gBAPA,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,IAAI,EAAE;wBACJ,MAAM,EAAE,QAAQ;qBACjB;iBACF;;IAED,mBAAC;CAAA,AAPD,CAM6C,YAAY,GACxD;SADY,YAAY","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\nimport {\n  CdkEditControl,\n  CdkEditRevert,\n  CdkEditClose,\n  EditRef,\n} from '@angular/cdk-experimental/popover-edit';\n\n/**\n * A component that attaches to a form within the edit.\n * It coordinates the form state with the table-wide edit system and handles\n * closing the edit when the form is submitted or the user clicks\n * out.\n */\n@Directive({\n  selector: 'form[matEditLens]',\n  host: {\n    'class': 'mat-edit-lens',\n  },\n  inputs: [\n    'clickOutBehavior: matEditLensClickOutBehavior',\n    'preservedFormValue: matEditLensPreservedFormValue',\n    'ignoreSubmitUnlessValid: matEditLensIgnoreSubmitUnlessValid',\n  ],\n  outputs: ['preservedFormValueChange: matEditLensPreservedFormValueChange'],\n  providers: [EditRef],\n})\nexport class MatEditLens<FormValue> extends CdkEditControl<FormValue> {\n}\n\n/** Reverts the form to its initial or previously submitted state on click. */\n@Directive({\n  selector: 'button[matEditRevert]',\n  host: {\n    'type': 'button', // Prevents accidental form submits.\n  }\n})\nexport class MatEditRevert<FormValue> extends CdkEditRevert<FormValue> {\n}\n\n/** Closes the lens on click. */\n@Directive({\n  selector: 'button[matEditClose]',\n  host: {\n    'type': 'button', // Prevents accidental form submits.\n  }\n})\nexport class MatEditClose<FormValue> extends CdkEditClose<FormValue> {\n}\n"]}