{"version":3,"file":"card.js","sourceRoot":"","sources":["../../../../../src/material-experimental/mdc-card/card.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\n\n\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-card',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  host: {'class': 'mat-mdc-card mdc-card'},\n  exportAs: 'matCard',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCard {\n  // TODO(jelbourn): add `outline` option to card (supported by MDC)\n}\n\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n\n\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {'class': 'mat-mdc-card-title'}\n})\nexport class MatCardTitle {}\n\n\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-mdc-card-title-group'}\n})\nexport class MatCardTitleGroup {}\n\n\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: 'mat-card-content',\n  host: {'class': 'mat-mdc-card-content'}\n})\nexport class MatCardContent {}\n\n\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {'class': 'mat-mdc-card-subtitle'}\n})\nexport class MatCardSubtitle {}\n\n\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-mdc-card-actions mdc-card__actions',\n    '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"',\n  }\n})\nexport class MatCardActions {\n  // TODO(jelbourn): deprecate `align` in favor of `actionPositon` or `actionAlignment`\n  // as to not conflict with the native `align` attribute.\n\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n\n  // TODO(jelbourn): support `.mdc-card__actions--full-bleed`.\n\n  // TODO(jelbourn): support  `.mdc-card__action-buttons` and `.mdc-card__action-icons`.\n\n  // TODO(jelbourn): figure out how to use `.mdc-card__action`, `.mdc-card__action--button`, and\n  // `mdc-card__action--icon`. They're used primarily for positioning, which we might be able to\n  // do implicitly.\n}\n\n\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-mdc-card-header'}\n})\nexport class MatCardHeader {}\n\n\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-mdc-card-footer'}\n})\nexport class MatCardFooter {}\n\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n\n// TODO(jelbourn): support `.mdc-card__media-content`.\n\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-mdc-card-image mdc-card__media'}\n})\nexport class MatCardImage {\n  // TODO(jelbourn): support `.mdc-card__media--square` and `.mdc-card__media--16-9`.\n}\n\n\n/** Same as `MatCardImage`, but small. */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-mdc-card-sm-image mdc-card__media'}\n})\nexport class MatCardSmImage {}\n\n\n/** Same as `MatCardImage`, but medium. */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-mdc-card-md-image mdc-card__media'}\n})\nexport class MatCardMdImage {}\n\n\n/** Same as `MatCardImage`, but large. */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-mdc-card-lg-image mdc-card__media'}\n})\nexport class MatCardLgImage {}\n\n\n/** Same as `MatCardImage`, but extra-large. */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-mdc-card-xl-image mdc-card__media'}\n})\nexport class MatCardXlImage {}\n\n\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-mdc-card-avatar'}\n})\nexport class MatCardAvatar {}\n\n"]}