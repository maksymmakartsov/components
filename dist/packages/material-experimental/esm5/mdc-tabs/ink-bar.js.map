{"version":3,"file":"ink-bar.js","sourceRoot":"","sources":["../../../../../src/material-experimental/mdc-tabs/ink-bar.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef, QueryList} from '@angular/core';\nimport {\n  MDCTabIndicatorFoundation,\n  MDCSlidingTabIndicatorFoundation,\n  MDCTabIndicatorAdapter\n} from '@material/tab-indicator';\n\n/**\n * Item inside a tab header relative to which the ink bar can be aligned.\n * @docs-private\n */\nexport interface MatInkBarItem {\n  _foundation: MatInkBarFoundation;\n  elementRef: ElementRef<HTMLElement>;\n}\n\n/**\n * Abstraction around the MDC tab indicator that manages the ink bar of a tab header.\n * @docs-private\n */\nexport class MatInkBar {\n  /** Item to which the ink bar is aligned currently. */\n  private _currentItem: MatInkBarItem|undefined;\n\n  constructor(private _items: QueryList<MatInkBarItem>) {}\n\n  /** Hides the ink bar. */\n  hide() {\n    this._items.forEach(item => item._foundation.deactivate());\n  }\n\n  /** Aligns the ink bar to a DOM node. */\n  alignToElement(element: HTMLElement) {\n    const correspondingItem = this._items.find(item => item.elementRef.nativeElement === element);\n    const currentItem = this._currentItem;\n\n    if (currentItem) {\n      currentItem._foundation.deactivate();\n    }\n\n    if (correspondingItem) {\n      const clientRect = currentItem ?\n          currentItem._foundation.computeContentClientRect() : undefined;\n\n      // The MDC indicator won't animate unless we give it the `ClientRect` of the previous item.\n      correspondingItem._foundation.activate(clientRect);\n      this._currentItem = correspondingItem;\n    }\n  }\n}\n\n/**\n * Implementation of MDC's sliding tab indicator foundation.\n * @docs-private\n */\nexport class MatInkBarFoundation {\n  private _destroyed: boolean;\n  private _foundation: MDCTabIndicatorFoundation;\n  private _element: HTMLElement;\n  private _indicator: HTMLElement;\n  private _indicatorContent: HTMLElement;\n  private _adapter: MDCTabIndicatorAdapter = {\n    addClass: className => {\n      if (!this._destroyed) {\n        this._element.classList.add(className);\n      }\n    },\n    removeClass: className => {\n      if (!this._destroyed) {\n        this._element.classList.remove(className);\n      }\n    },\n    setContentStyleProperty: (propName, value) => {\n      this._indicatorContent.style.setProperty(propName, value);\n    },\n    computeContentClientRect: () => {\n      // `getBoundingClientRect` isn't available on the server.\n      return this._destroyed || !this._indicatorContent.getBoundingClientRect ? {\n        width: 0, height: 0, top: 0, left: 0, right: 0, bottom: 0\n      } : this._indicatorContent.getBoundingClientRect();\n    }\n  };\n\n  constructor(elementRef: ElementRef<HTMLElement>, document: Document) {\n    this._element = elementRef.nativeElement;\n    this._foundation = new MDCSlidingTabIndicatorFoundation(this._adapter);\n    this._createIndicator(document);\n  }\n\n  /** Aligns the ink bar to the current item. */\n  activate(clientRect?: ClientRect) {\n    this._foundation.activate(clientRect);\n  }\n\n  /** Removes the ink bar from the current item. */\n  deactivate() {\n    this._foundation.deactivate();\n  }\n\n  /** Gets the ClientRect of the indicator. */\n  computeContentClientRect() {\n    return this._foundation.computeContentClientRect();\n  }\n\n  /** Initializes the foundation. */\n  init() {\n    this._foundation.init();\n  }\n\n  /** Destroys the foundation. */\n  destroy() {\n    const indicator = this._indicator;\n\n    if (indicator.parentNode) {\n      indicator.parentNode.removeChild(indicator);\n    }\n\n    this._element = this._indicator = this._indicatorContent = null!;\n    this._foundation.destroy();\n    this._destroyed = true;\n  }\n\n  private _createIndicator(document: Document) {\n    if (!this._indicator) {\n      const indicator = this._indicator = document.createElement('span');\n      const content = this._indicatorContent = document.createElement('span');\n\n      indicator.className = 'mdc-tab-indicator';\n      content.className = 'mdc-tab-indicator__content mdc-tab-indicator__content--underline';\n\n      indicator.appendChild(content);\n      this._element.appendChild(indicator);\n    }\n  }\n}\n"]}