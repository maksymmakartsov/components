{"version":3,"file":"tab-label-wrapper.js","sourceRoot":"","sources":["../../../../../src/material-experimental/mdc-tabs/tab-label-wrapper.ts"],"names":[],"mappings":";;;;;;;;;;;;AAQA,OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,MAAM,EAAY,MAAM,eAAe,CAAC;AACvE,OAAO,EAAC,QAAQ,EAAC,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAC,kBAAkB,IAAI,sBAAsB,EAAC,MAAM,wBAAwB,CAAC;AACpF,OAAO,EAAC,mBAAmB,EAAgB,MAAM,WAAW,CAAC;;;;;AAM7D;IAQwC,8CAAsB;IAG5D,4BAAmB,UAAsB,EAAoB,SAAc;QAA3E,YACE,kBAAM,UAAU,CAAC,SAGlB;QAJkB,gBAAU,GAAV,UAAU,CAAY;QAEvC,KAAI,CAAC,WAAW,GAAG,IAAI,mBAAmB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAClE,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;;IAC1B,CAAC;;;;IAED,wCAAW;;;IAAX;QACE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,wCAAwC;;;;;IACxC,kCAAK;;;;IAAL;QACE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACxC,CAAC;;gBAxBF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,MAAM,EAAE,CAAC,UAAU,CAAC;oBACpB,IAAI,EAAE;wBACJ,8BAA8B,EAAE,UAAU;wBAC1C,sBAAsB,EAAE,YAAY;qBACrC;iBACF;;;;gBAhBkB,UAAU;gDAoBiB,MAAM,SAAC,QAAQ;;IAc7D,yBAAC;CAAA,AAzBD,CAQwC,sBAAsB,GAiB7D;SAjBY,kBAAkB;;;IAC7B,yCAAiC;;IAErB,wCAA6B","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {MatTabLabelWrapper as BaseMatTabLabelWrapper} from '@angular/material/tabs';\nimport {MatInkBarFoundation, MatInkBarItem} from './ink-bar';\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-mdc-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends BaseMatTabLabelWrapper implements MatInkBarItem, OnDestroy {\n  _foundation: MatInkBarFoundation;\n\n  constructor(public elementRef: ElementRef, @Inject(DOCUMENT) _document: any) {\n    super(elementRef);\n    this._foundation = new MatInkBarFoundation(elementRef, _document);\n    this._foundation.init();\n  }\n\n  ngOnDestroy() {\n    this._foundation.destroy();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n}\n"]}