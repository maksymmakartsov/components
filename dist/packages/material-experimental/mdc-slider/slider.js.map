{"version":3,"file":"slider.js","sourceRoot":"","sources":["../../../../src/material-experimental/mdc-slider/slider.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {normalizePassiveListenerOptions, Platform} from '@angular/cdk/platform';\nimport {\n  AfterViewInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {ThemePalette} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MDCSliderAdapter, MDCSliderFoundation} from '@material/slider';\nimport {Subscription} from 'rxjs';\n\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n\n/**\n * Size of a tick marker for a slider. The size of a tick is based on the Material\n * Design guidelines and the MDC slider implementation.\n * TODO(devversion): ideally MDC would expose the tick marker size as constant\n */\nconst TICK_MARKER_SIZE = 2;\n\n/** Options to pass to the slider interaction listeners. */\nconst listenerOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nexport const MAT_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n\n/** A simple change event emitted by the MatSlider component. */\nexport class MatSliderChange {\n  /** The MatSlider that changed. */\n  source: MatSlider;\n\n  /** The new value of the source slider. */\n  value: number;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-slider',\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  host: {\n    'class': 'mat-mdc-slider mdc-slider',\n    'role': 'slider',\n    'aria-orientation': 'horizontal',\n    // The tabindex if the slider turns disabled is managed by the MDC foundation which\n    // dynamically updates and restores the \"tabindex\" attribute.\n    '[attr.tabindex]': 'tabIndex || 0',\n    '[class.mdc-slider--discrete]': 'thumbLabel',\n    '[class.mat-slider-has-ticks]': 'tickInterval !== 0',\n    '[class.mdc-slider--display-markers]': 'tickInterval !== 0',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-primary]': 'color == \"primary\"',\n    '[class.mat-accent]': 'color == \"accent\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    '(blur)': '_markAsTouched()',\n  },\n  exportAs: 'matSlider',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\n})\nexport class MatSlider implements AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {\n  /** Event emitted when the slider value has changed. */\n  @Output() readonly change: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /** Event emitted when the slider thumb moves. */\n  @Output() readonly input: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /**\n   * Emits when the raw value of the slider changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Tabindex for the slider. */\n  @Input() tabIndex: number = 0;\n\n  /** The color palette for this slider. */\n  @Input() color: ThemePalette = 'accent';\n\n  /**\n   * Function that will be used to format the value before it is displayed\n   * in the thumb label. Can be used to format very large number in order\n   * for them to fit into the slider thumb.\n   */\n  @Input() displayWith: (value: number) => string | number;\n\n  /** The minimum value that the slider can have. */\n  @Input()\n  get min(): number {\n    return this._min;\n  }\n  set min(value: number) {\n    this._min = coerceNumberProperty(value);\n  }\n  private _min = 0;\n\n  /** The maximum value that the slider can have. */\n  @Input()\n  get max(): number {\n    return this._max;\n  }\n  set max(value: number) {\n    this._max = coerceNumberProperty(value);\n  }\n  private _max = 100;\n\n  /** Value of the slider. */\n  @Input()\n  get value(): number|null {\n    // If the value needs to be read and it is still uninitialized, initialize\n    // it to the current minimum value.\n    if (this._value === null) {\n      this.value = this.min;\n    }\n    return this._value;\n  }\n  set value(value: number|null) {\n    this._value = coerceNumberProperty(value);\n  }\n  private _value: number|null = null;\n\n  /** The values at which the thumb will snap. */\n  @Input()\n  get step(): number {\n    return this._step;\n  }\n  set step(v: number) {\n    this._step = coerceNumberProperty(v, this._step);\n  }\n  private _step: number = 1;\n\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n  @Input()\n  get tickInterval() {\n    return this._tickInterval;\n  }\n  set tickInterval(value: number|'auto') {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  private _tickInterval: number|'auto' = 0;\n\n  /** Whether or not to show the thumb label. */\n  @Input()\n  get thumbLabel(): boolean {\n    return this._thumbLabel;\n  }\n  set thumbLabel(value: boolean) {\n    this._thumbLabel = coerceBooleanProperty(value);\n  }\n  private _thumbLabel: boolean = false;\n\n  /** Whether the slider is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(disabled) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n  private _disabled = false;\n\n  /** Adapter for the MDC slider foundation. */\n  private _sliderAdapter: MDCSliderAdapter = {\n    hasClass: (className) => this._elementRef.nativeElement.classList.contains(className),\n    addClass: (className) => this._elementRef.nativeElement.classList.add(className),\n    removeClass: (className) => this._elementRef.nativeElement.classList.remove(className),\n    getAttribute: (name) => this._elementRef.nativeElement.getAttribute(name),\n    setAttribute: (name, value) => this._elementRef.nativeElement.setAttribute(name, value),\n    removeAttribute: (name) => this._elementRef.nativeElement.removeAttribute(name),\n    computeBoundingRect: () => this._elementRef.nativeElement.getBoundingClientRect(),\n    getTabIndex: () => this._elementRef.nativeElement.tabIndex,\n    registerInteractionHandler: (evtType, handler) =>\n        // Interaction event handlers (which handle keyboard interaction) cannot be passive\n        // as they will prevent the default behavior. Additionally we can't run these event\n        // handlers outside of the Angular zone because we rely on the events to cause the\n        // component tree to be re-checked.\n    this._elementRef.nativeElement.addEventListener(evtType, handler),\n    deregisterInteractionHandler: (evtType, handler) =>\n        this._elementRef.nativeElement.removeEventListener(evtType, handler),\n    registerThumbContainerInteractionHandler:\n        (evtType, handler) => {\n          // The thumb container interaction handlers are currently just used for transition\n          // events which don't need to run in the Angular zone.\n          this._ngZone.runOutsideAngular(() => {\n            this._thumbContainer.nativeElement.addEventListener(evtType, handler, listenerOptions);\n          });\n        },\n    deregisterThumbContainerInteractionHandler:\n        (evtType, handler) => {\n          this._thumbContainer.nativeElement.removeEventListener(evtType, handler, listenerOptions);\n        },\n    registerBodyInteractionHandler: (evtType, handler) =>\n        // Body event handlers (which handle thumb sliding) cannot be passive as they will\n        // prevent the default behavior. Additionally we can't run these event handlers\n        // outside of the Angular zone because we rely on the events to cause the component\n        // tree to be re-checked.\n    document.body.addEventListener(evtType, handler),\n    deregisterBodyInteractionHandler: (evtType, handler) =>\n        document.body.removeEventListener(evtType, handler),\n    registerResizeHandler:\n        (handler) => {\n          // The resize handler is currently responsible for detecting slider dimension\n          // changes and therefore doesn't cause a value change that needs to be propagated.\n          this._ngZone.runOutsideAngular(() => {\n            window.addEventListener('resize', handler, listenerOptions);\n          });\n        },\n    deregisterResizeHandler: (handler) =>\n        window.removeEventListener('resize', handler, listenerOptions),\n    notifyInput:\n        () => {\n          const newValue = this._foundation.getValue();\n          // MDC currently fires the input event multiple times.\n          // TODO(devversion): remove this check once the input notifications are fixed.\n          if (newValue !== this.value) {\n            this.value = newValue;\n            this.input.emit(this._createChangeEvent(newValue));\n          }\n        },\n    notifyChange:\n        () => {\n          // TODO(devversion): bug in MDC where only the \"change\" event is emitted if a keypress\n          // updated the value. Material and native range sliders also emit an input event.\n          // Usually we sync the \"value\" in the \"input\" event, but as a workaround we now sync\n          // the value in the \"change\" event.\n          this.value = this._foundation.getValue();\n          this._emitChangeEvent(this.value!);\n        },\n    setThumbContainerStyleProperty:\n        (propertyName, value) => {\n          this._thumbContainer.nativeElement.style.setProperty(propertyName, value);\n        },\n    setTrackStyleProperty:\n        (propertyName, value) => {\n          this._track.nativeElement.style.setProperty(propertyName, value);\n        },\n    setMarkerValue:\n        () => {\n          // Mark the component for check as the thumb label needs to be re-rendered.\n          this._changeDetectorRef.markForCheck();\n        },\n    setTrackMarkers:\n        (step, max, min) => {\n          this._trackMarker.nativeElement.style.setProperty(\n              'background', this._getTrackMarkersBackground(min, max, step));\n        },\n    isRTL: () => this._dir && this._dir.value === 'rtl',\n  };\n\n  /** Instance of the MDC slider foundation for this slider. */\n  private _foundation = new MDCSliderFoundation(this._sliderAdapter);\n\n  /** Whether the MDC foundation has been initialized. */\n  private _isInitialized = false;\n\n  /** Function that notifies the control value accessor about a value change. */\n  private _controlValueAccessorChangeFn: (value: number) => void = () => {};\n\n  /** Subscription to the Directionality change EventEmitter. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Function that marks the slider as touched. Registered via \"registerOnTouch\". */\n  _markAsTouched: () => any = () => {};\n\n  @ViewChild('thumbContainer', {static: false}) _thumbContainer: ElementRef<HTMLElement>;\n  @ViewChild('track', {static: false}) _track: ElementRef<HTMLElement>;\n  @ViewChild('pinValueMarker', {static: false}) _pinValueMarker: ElementRef<HTMLElement>;\n  @ViewChild('trackMarker', {static: false}) _trackMarker: ElementRef<HTMLElement>;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>,\n      private _changeDetectorRef: ChangeDetectorRef,\n      private _ngZone: NgZone,\n      private _platform: Platform,\n      @Optional() private _dir: Directionality,\n      @Attribute('tabindex') tabIndex: string,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        // In case the directionality changes, we need to refresh the rendered MDC slider.\n        // Note that we need to wait until the page actually updated as otherwise the\n        // client rectangle wouldn't reflect the new directionality.\n        // TODO(devversion): ideally the MDC slider would just compute dimensions similarly\n        // to the standard Material slider on \"mouseenter\".\n        this._ngZone.runOutsideAngular(() => setTimeout(() => this._foundation.layout()));\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    this._isInitialized = true;\n\n    if (this._platform.isBrowser) {\n      // The MDC slider foundation accesses DOM globals, so we cannot initialize the\n      // foundation on the server. The foundation would be needed to move the thumb\n      // to the proper position and to render the ticks.\n      this._foundation.init();\n\n      // The standard Angular Material slider is always using discrete values. We always\n      // want to enable discrete values and support ticks, but want to still provide\n      // non-discrete slider visual looks if thumb label is disabled.\n      // TODO(devversion): check if we can get a public API for this.\n      // Tracked with: https://github.com/material-components/material-components-web/issues/5020\n      (this._foundation as any).isDiscrete_ = true;\n\n      // These bindings cannot be synced in the foundation, as the foundation is not\n      // initialized and they cause DOM globals to be accessed (to move the thumb)\n      this._syncStep();\n      this._syncValue();\n      this._syncMax();\n      this._syncMin();\n    }\n\n    this._syncDisabled();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    if (changes['step']) {\n      this._syncStep();\n    }\n    if (changes['max']) {\n      this._syncMax();\n    }\n    if (changes['min']) {\n      this._syncMin();\n    }\n    if (changes['disabled']) {\n      this._syncDisabled();\n    }\n    if (changes['value']) {\n      this._syncValue();\n    }\n    if (changes['tickInterval']) {\n      this._refreshTrackMarkers();\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    // The foundation cannot be destroyed on the server, as the foundation\n    // has not be initialized on the server.\n    if (this._platform.isBrowser) {\n      this._foundation.destroy();\n    }\n  }\n\n  /** Focuses the slider. */\n  focus(options?: FocusOptions) {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  /** Blurs the slider. */\n  blur() {\n    this._elementRef.nativeElement.blur();\n  }\n\n  /** Gets the display text of the current value. */\n  get displayValue() {\n    if (this.displayWith) {\n      return this.displayWith(this.value!).toString();\n    }\n    return this.value!.toString() || '0';\n  }\n\n  /** Creates a slider change object from the specified value. */\n  private _createChangeEvent(newValue: number): MatSliderChange {\n    const event = new MatSliderChange();\n    event.source = this;\n    event.value = newValue;\n    return event;\n  }\n\n  /** Emits a change event and notifies the control value accessor. */\n  private _emitChangeEvent(newValue: number) {\n    this._controlValueAccessorChangeFn(newValue);\n    this.valueChange.emit(newValue);\n    this.change.emit(this._createChangeEvent(newValue));\n  }\n\n  /** Computes the CSS background value for the track markers (aka ticks). */\n  private _getTrackMarkersBackground(min: number, max: number, step: number) {\n    if (!this.tickInterval) {\n      return '';\n    }\n\n    const markerWidth = `${TICK_MARKER_SIZE}px`;\n    const markerBackground =\n        `linear-gradient(to right, currentColor ${markerWidth}, transparent 0)`;\n\n    if (this.tickInterval === 'auto') {\n      const trackSize = this._elementRef.nativeElement.getBoundingClientRect().width;\n      const pixelsPerStep = trackSize * step / (max - min);\n      const stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      const pixelsPerTick = stepsPerTick * step;\n      return `${markerBackground} 0 center / ${pixelsPerTick}px 100% repeat-x`;\n    }\n\n    // keep calculation in css for better rounding/subpixel behavior\n    const markerAmount = `(((${max} - ${min}) / ${step}) / ${this.tickInterval})`;\n    const markerBkgdLayout =\n        `0 center / calc((100% - ${markerWidth}) / ${markerAmount}) 100% repeat-x`;\n    return `${markerBackground} ${markerBkgdLayout}`;\n  }\n\n  /** Method that ensures that track markers are refreshed. */\n  private _refreshTrackMarkers() {\n    // MDC only checks whether the slider has markers once on init by looking for the\n    // `mdc-slider--display-markers` class in the DOM, whereas we support changing and hiding\n    // the markers dynamically. This is a workaround until we can get a public API for it. See:\n    // https://github.com/material-components/material-components-web/issues/5020\n    (this._foundation as any).hasTrackMarker_ = this.tickInterval !== 0;\n    this._foundation.setupTrackMarker();\n  }\n\n  /** Syncs the \"step\" input value with the MDC foundation. */\n  private _syncStep() {\n    this._foundation.setStep(this.step);\n  }\n\n  /** Syncs the \"max\" input value with the MDC foundation. */\n  private _syncMax() {\n    this._foundation.setMax(this.max);\n  }\n\n  /** Syncs the \"min\" input value with the MDC foundation. */\n  private _syncMin() {\n    this._foundation.setMin(this.min);\n  }\n\n  /** Syncs the \"value\" input binding with the MDC foundation. */\n  private _syncValue() {\n    this._foundation.setValue(this.value!);\n  }\n\n  /** Syncs the \"disabled\" input value with the MDC foundation. */\n  private _syncDisabled() {\n    this._foundation.setDisabled(this.disabled);\n  }\n\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: any) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this._markAsTouched = fn;\n  }\n\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this._syncDisabled();\n  }\n\n  /**\n   * Sets the model value.\n   * Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value: any) {\n    this.value = value;\n    this._syncValue();\n  }\n}\n"]}