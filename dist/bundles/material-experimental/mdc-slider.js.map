{"version":3,"file":"mdc-slider.js","sources":["../../../src/material-experimental/mdc-slider/module.ts","../../../src/material-experimental/mdc-slider/slider.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatSlider} from './slider';\n\n@NgModule({\n  imports: [MatCommonModule, CommonModule],\n  exports: [MatSlider, MatCommonModule],\n  declarations: [MatSlider],\n})\nexport class MatSliderModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {normalizePassiveListenerOptions, Platform} from '@angular/cdk/platform';\nimport {\n  AfterViewInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {ThemePalette} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MDCSliderAdapter, MDCSliderFoundation} from '@material/slider';\nimport {Subscription} from 'rxjs';\n\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n\n/**\n * Size of a tick marker for a slider. The size of a tick is based on the Material\n * Design guidelines and the MDC slider implementation.\n * TODO(devversion): ideally MDC would expose the tick marker size as constant\n */\nconst TICK_MARKER_SIZE = 2;\n\n/** Options to pass to the slider interaction listeners. */\nconst listenerOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nexport const MAT_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n\n/** A simple change event emitted by the MatSlider component. */\nexport class MatSliderChange {\n  /** The MatSlider that changed. */\n  source: MatSlider;\n\n  /** The new value of the source slider. */\n  value: number;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-slider',\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  host: {\n    'class': 'mat-mdc-slider mdc-slider',\n    'role': 'slider',\n    'aria-orientation': 'horizontal',\n    // The tabindex if the slider turns disabled is managed by the MDC foundation which\n    // dynamically updates and restores the \"tabindex\" attribute.\n    '[attr.tabindex]': 'tabIndex || 0',\n    '[class.mdc-slider--discrete]': 'thumbLabel',\n    '[class.mat-slider-has-ticks]': 'tickInterval !== 0',\n    '[class.mdc-slider--display-markers]': 'tickInterval !== 0',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-primary]': 'color == \"primary\"',\n    '[class.mat-accent]': 'color == \"accent\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n    '(blur)': '_markAsTouched()',\n  },\n  exportAs: 'matSlider',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\n})\nexport class MatSlider implements AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {\n  /** Event emitted when the slider value has changed. */\n  @Output() readonly change: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /** Event emitted when the slider thumb moves. */\n  @Output() readonly input: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /**\n   * Emits when the raw value of the slider changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Tabindex for the slider. */\n  @Input() tabIndex: number = 0;\n\n  /** The color palette for this slider. */\n  @Input() color: ThemePalette = 'accent';\n\n  /**\n   * Function that will be used to format the value before it is displayed\n   * in the thumb label. Can be used to format very large number in order\n   * for them to fit into the slider thumb.\n   */\n  @Input() displayWith: (value: number) => string | number;\n\n  /** The minimum value that the slider can have. */\n  @Input()\n  get min(): number {\n    return this._min;\n  }\n  set min(value: number) {\n    this._min = coerceNumberProperty(value);\n  }\n  private _min = 0;\n\n  /** The maximum value that the slider can have. */\n  @Input()\n  get max(): number {\n    return this._max;\n  }\n  set max(value: number) {\n    this._max = coerceNumberProperty(value);\n  }\n  private _max = 100;\n\n  /** Value of the slider. */\n  @Input()\n  get value(): number|null {\n    // If the value needs to be read and it is still uninitialized, initialize\n    // it to the current minimum value.\n    if (this._value === null) {\n      this.value = this.min;\n    }\n    return this._value;\n  }\n  set value(value: number|null) {\n    this._value = coerceNumberProperty(value);\n  }\n  private _value: number|null = null;\n\n  /** The values at which the thumb will snap. */\n  @Input()\n  get step(): number {\n    return this._step;\n  }\n  set step(v: number) {\n    this._step = coerceNumberProperty(v, this._step);\n  }\n  private _step: number = 1;\n\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n  @Input()\n  get tickInterval() {\n    return this._tickInterval;\n  }\n  set tickInterval(value: number|'auto') {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  private _tickInterval: number|'auto' = 0;\n\n  /** Whether or not to show the thumb label. */\n  @Input()\n  get thumbLabel(): boolean {\n    return this._thumbLabel;\n  }\n  set thumbLabel(value: boolean) {\n    this._thumbLabel = coerceBooleanProperty(value);\n  }\n  private _thumbLabel: boolean = false;\n\n  /** Whether the slider is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(disabled) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n  private _disabled = false;\n\n  /** Adapter for the MDC slider foundation. */\n  private _sliderAdapter: MDCSliderAdapter = {\n    hasClass: (className) => this._elementRef.nativeElement.classList.contains(className),\n    addClass: (className) => this._elementRef.nativeElement.classList.add(className),\n    removeClass: (className) => this._elementRef.nativeElement.classList.remove(className),\n    getAttribute: (name) => this._elementRef.nativeElement.getAttribute(name),\n    setAttribute: (name, value) => this._elementRef.nativeElement.setAttribute(name, value),\n    removeAttribute: (name) => this._elementRef.nativeElement.removeAttribute(name),\n    computeBoundingRect: () => this._elementRef.nativeElement.getBoundingClientRect(),\n    getTabIndex: () => this._elementRef.nativeElement.tabIndex,\n    registerInteractionHandler: (evtType, handler) =>\n        // Interaction event handlers (which handle keyboard interaction) cannot be passive\n        // as they will prevent the default behavior. Additionally we can't run these event\n        // handlers outside of the Angular zone because we rely on the events to cause the\n        // component tree to be re-checked.\n    this._elementRef.nativeElement.addEventListener(evtType, handler),\n    deregisterInteractionHandler: (evtType, handler) =>\n        this._elementRef.nativeElement.removeEventListener(evtType, handler),\n    registerThumbContainerInteractionHandler:\n        (evtType, handler) => {\n          // The thumb container interaction handlers are currently just used for transition\n          // events which don't need to run in the Angular zone.\n          this._ngZone.runOutsideAngular(() => {\n            this._thumbContainer.nativeElement.addEventListener(evtType, handler, listenerOptions);\n          });\n        },\n    deregisterThumbContainerInteractionHandler:\n        (evtType, handler) => {\n          this._thumbContainer.nativeElement.removeEventListener(evtType, handler, listenerOptions);\n        },\n    registerBodyInteractionHandler: (evtType, handler) =>\n        // Body event handlers (which handle thumb sliding) cannot be passive as they will\n        // prevent the default behavior. Additionally we can't run these event handlers\n        // outside of the Angular zone because we rely on the events to cause the component\n        // tree to be re-checked.\n    document.body.addEventListener(evtType, handler),\n    deregisterBodyInteractionHandler: (evtType, handler) =>\n        document.body.removeEventListener(evtType, handler),\n    registerResizeHandler:\n        (handler) => {\n          // The resize handler is currently responsible for detecting slider dimension\n          // changes and therefore doesn't cause a value change that needs to be propagated.\n          this._ngZone.runOutsideAngular(() => {\n            window.addEventListener('resize', handler, listenerOptions);\n          });\n        },\n    deregisterResizeHandler: (handler) =>\n        window.removeEventListener('resize', handler, listenerOptions),\n    notifyInput:\n        () => {\n          const newValue = this._foundation.getValue();\n          // MDC currently fires the input event multiple times.\n          // TODO(devversion): remove this check once the input notifications are fixed.\n          if (newValue !== this.value) {\n            this.value = newValue;\n            this.input.emit(this._createChangeEvent(newValue));\n          }\n        },\n    notifyChange:\n        () => {\n          // TODO(devversion): bug in MDC where only the \"change\" event is emitted if a keypress\n          // updated the value. Material and native range sliders also emit an input event.\n          // Usually we sync the \"value\" in the \"input\" event, but as a workaround we now sync\n          // the value in the \"change\" event.\n          this.value = this._foundation.getValue();\n          this._emitChangeEvent(this.value!);\n        },\n    setThumbContainerStyleProperty:\n        (propertyName, value) => {\n          this._thumbContainer.nativeElement.style.setProperty(propertyName, value);\n        },\n    setTrackStyleProperty:\n        (propertyName, value) => {\n          this._track.nativeElement.style.setProperty(propertyName, value);\n        },\n    setMarkerValue:\n        () => {\n          // Mark the component for check as the thumb label needs to be re-rendered.\n          this._changeDetectorRef.markForCheck();\n        },\n    setTrackMarkers:\n        (step, max, min) => {\n          this._trackMarker.nativeElement.style.setProperty(\n              'background', this._getTrackMarkersBackground(min, max, step));\n        },\n    isRTL: () => this._dir && this._dir.value === 'rtl',\n  };\n\n  /** Instance of the MDC slider foundation for this slider. */\n  private _foundation = new MDCSliderFoundation(this._sliderAdapter);\n\n  /** Whether the MDC foundation has been initialized. */\n  private _isInitialized = false;\n\n  /** Function that notifies the control value accessor about a value change. */\n  private _controlValueAccessorChangeFn: (value: number) => void = () => {};\n\n  /** Subscription to the Directionality change EventEmitter. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Function that marks the slider as touched. Registered via \"registerOnTouch\". */\n  _markAsTouched: () => any = () => {};\n\n  @ViewChild('thumbContainer', {static: false}) _thumbContainer: ElementRef<HTMLElement>;\n  @ViewChild('track', {static: false}) _track: ElementRef<HTMLElement>;\n  @ViewChild('pinValueMarker', {static: false}) _pinValueMarker: ElementRef<HTMLElement>;\n  @ViewChild('trackMarker', {static: false}) _trackMarker: ElementRef<HTMLElement>;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>,\n      private _changeDetectorRef: ChangeDetectorRef,\n      private _ngZone: NgZone,\n      private _platform: Platform,\n      @Optional() private _dir: Directionality,\n      @Attribute('tabindex') tabIndex: string,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        // In case the directionality changes, we need to refresh the rendered MDC slider.\n        // Note that we need to wait until the page actually updated as otherwise the\n        // client rectangle wouldn't reflect the new directionality.\n        // TODO(devversion): ideally the MDC slider would just compute dimensions similarly\n        // to the standard Material slider on \"mouseenter\".\n        this._ngZone.runOutsideAngular(() => setTimeout(() => this._foundation.layout()));\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    this._isInitialized = true;\n\n    if (this._platform.isBrowser) {\n      // The MDC slider foundation accesses DOM globals, so we cannot initialize the\n      // foundation on the server. The foundation would be needed to move the thumb\n      // to the proper position and to render the ticks.\n      this._foundation.init();\n\n      // The standard Angular Material slider is always using discrete values. We always\n      // want to enable discrete values and support ticks, but want to still provide\n      // non-discrete slider visual looks if thumb label is disabled.\n      // TODO(devversion): check if we can get a public API for this.\n      // Tracked with: https://github.com/material-components/material-components-web/issues/5020\n      (this._foundation as any).isDiscrete_ = true;\n\n      // These bindings cannot be synced in the foundation, as the foundation is not\n      // initialized and they cause DOM globals to be accessed (to move the thumb)\n      this._syncStep();\n      this._syncValue();\n      this._syncMax();\n      this._syncMin();\n    }\n\n    this._syncDisabled();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    if (changes['step']) {\n      this._syncStep();\n    }\n    if (changes['max']) {\n      this._syncMax();\n    }\n    if (changes['min']) {\n      this._syncMin();\n    }\n    if (changes['disabled']) {\n      this._syncDisabled();\n    }\n    if (changes['value']) {\n      this._syncValue();\n    }\n    if (changes['tickInterval']) {\n      this._refreshTrackMarkers();\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    // The foundation cannot be destroyed on the server, as the foundation\n    // has not be initialized on the server.\n    if (this._platform.isBrowser) {\n      this._foundation.destroy();\n    }\n  }\n\n  /** Focuses the slider. */\n  focus(options?: FocusOptions) {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  /** Blurs the slider. */\n  blur() {\n    this._elementRef.nativeElement.blur();\n  }\n\n  /** Gets the display text of the current value. */\n  get displayValue() {\n    if (this.displayWith) {\n      return this.displayWith(this.value!).toString();\n    }\n    return this.value!.toString() || '0';\n  }\n\n  /** Creates a slider change object from the specified value. */\n  private _createChangeEvent(newValue: number): MatSliderChange {\n    const event = new MatSliderChange();\n    event.source = this;\n    event.value = newValue;\n    return event;\n  }\n\n  /** Emits a change event and notifies the control value accessor. */\n  private _emitChangeEvent(newValue: number) {\n    this._controlValueAccessorChangeFn(newValue);\n    this.valueChange.emit(newValue);\n    this.change.emit(this._createChangeEvent(newValue));\n  }\n\n  /** Computes the CSS background value for the track markers (aka ticks). */\n  private _getTrackMarkersBackground(min: number, max: number, step: number) {\n    if (!this.tickInterval) {\n      return '';\n    }\n\n    const markerWidth = `${TICK_MARKER_SIZE}px`;\n    const markerBackground =\n        `linear-gradient(to right, currentColor ${markerWidth}, transparent 0)`;\n\n    if (this.tickInterval === 'auto') {\n      const trackSize = this._elementRef.nativeElement.getBoundingClientRect().width;\n      const pixelsPerStep = trackSize * step / (max - min);\n      const stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      const pixelsPerTick = stepsPerTick * step;\n      return `${markerBackground} 0 center / ${pixelsPerTick}px 100% repeat-x`;\n    }\n\n    // keep calculation in css for better rounding/subpixel behavior\n    const markerAmount = `(((${max} - ${min}) / ${step}) / ${this.tickInterval})`;\n    const markerBkgdLayout =\n        `0 center / calc((100% - ${markerWidth}) / ${markerAmount}) 100% repeat-x`;\n    return `${markerBackground} ${markerBkgdLayout}`;\n  }\n\n  /** Method that ensures that track markers are refreshed. */\n  private _refreshTrackMarkers() {\n    // MDC only checks whether the slider has markers once on init by looking for the\n    // `mdc-slider--display-markers` class in the DOM, whereas we support changing and hiding\n    // the markers dynamically. This is a workaround until we can get a public API for it. See:\n    // https://github.com/material-components/material-components-web/issues/5020\n    (this._foundation as any).hasTrackMarker_ = this.tickInterval !== 0;\n    this._foundation.setupTrackMarker();\n  }\n\n  /** Syncs the \"step\" input value with the MDC foundation. */\n  private _syncStep() {\n    this._foundation.setStep(this.step);\n  }\n\n  /** Syncs the \"max\" input value with the MDC foundation. */\n  private _syncMax() {\n    this._foundation.setMax(this.max);\n  }\n\n  /** Syncs the \"min\" input value with the MDC foundation. */\n  private _syncMin() {\n    this._foundation.setMin(this.min);\n  }\n\n  /** Syncs the \"value\" input binding with the MDC foundation. */\n  private _syncValue() {\n    this._foundation.setValue(this.value!);\n  }\n\n  /** Syncs the \"disabled\" input value with the MDC foundation. */\n  private _syncDisabled() {\n    this._foundation.setDisabled(this.disabled);\n  }\n\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: any) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this._markAsTouched = fn;\n  }\n\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this._syncDisabled();\n  }\n\n  /**\n   * Sets the model value.\n   * Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value: any) {\n    this.value = value;\n    this._syncValue();\n  }\n}\n"],"names":[],"mappings":"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"}