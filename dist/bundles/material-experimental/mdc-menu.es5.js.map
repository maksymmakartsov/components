{"version":3,"file":"mdc-menu.es5.js","sources":["../../../src/material-experimental/mdc-menu/module.ts","../../../src/material-experimental/mdc-menu/menu-item.ts","../../../src/material-experimental/mdc-menu/menu.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {_MatMenuDirectivesModule} from '@angular/material/menu';\nimport {MatMenu, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER} from './menu';\nimport {MatMenuItem} from './menu-item';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    MatCommonModule,\n    OverlayModule,\n    _MatMenuDirectivesModule\n  ],\n  exports: [MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n  declarations: [MatMenu, MatMenuItem],\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class MatMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {MatMenuItem as BaseMatMenuItem} from '@angular/material/menu';\n\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-menu-item]',\n  exportAs: 'matMenuItem',\n  inputs: ['disabled', 'disableRipple'],\n  host: {\n    '[attr.role]': 'role',\n    'class': 'mat-mdc-menu-item',\n    '[class.mat-mdc-menu-item-highlighted]': '_highlighted',\n    '[class.mat-mdc-menu-item-submenu-trigger]': '_triggersSubmenu',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.disabled]': 'disabled || null',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: 'menu-item.html',\n  providers: [\n    {provide: BaseMatMenuItem, useExisting: MatMenuItem},\n  ]\n})\nexport class MatMenuItem extends BaseMatMenuItem {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Overlay, ScrollStrategy} from '@angular/cdk/overlay';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  NgZone,\n  Provider,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  MAT_MENU_DEFAULT_OPTIONS,\n  MAT_MENU_PANEL,\n  MAT_MENU_SCROLL_STRATEGY,\n  MatMenu as BaseMatMenu,\n  matMenuAnimations,\n  MatMenuDefaultOptions,\n} from '@angular/material/menu';\n\n/** @docs-private */\nexport function MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER: Provider = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-menu',\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matMenu',\n  animations: [\n    matMenuAnimations.transformMenu,\n    matMenuAnimations.fadeInItems\n  ],\n  providers: [\n    {provide: MAT_MENU_PANEL, useExisting: MatMenu},\n    {provide: BaseMatMenu, useExisting: MatMenu},\n  ]\n})\nexport class MatMenu extends BaseMatMenu {\n\n  constructor(_elementRef: ElementRef<HTMLElement>,\n              _ngZone: NgZone,\n              @Inject(MAT_MENU_DEFAULT_OPTIONS) _defaultOptions: MatMenuDefaultOptions) {\n    super(_elementRef, _ngZone, _defaultOptions);\n  }\n\n  setElevation(_depth: number) {\n    // TODO(crisbeto): MDC's styles come with elevation already and we haven't mapped our mixins\n    // to theirs. Disable the elevation stacking for now until everything has been mapped.\n    // The following unit tests should be re-enabled:\n    // - should not remove mat-elevation class from overlay when panelClass is changed\n    // - should increase the sub-menu elevation based on its depth\n    // - should update the elevation when the same menu is opened at a different depth\n    // - should not increase the elevation if the user specified a custom one\n  }\n}\n"],"names":["MatMenu","MatMenuItem","BaseMatMenuItem","tslib_1.__extends","BaseMatMenu"],"mappings":"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"}