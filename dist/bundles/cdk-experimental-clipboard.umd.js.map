{"version":3,"file":"cdk-experimental-clipboard.umd.js","sources":["../../src/cdk-experimental/clipboard/clipboard-module.ts","../../src/cdk-experimental/clipboard/copy-to-clipboard.ts","../../src/cdk-experimental/clipboard/clipboard.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {CdkCopyToClipboard} from './copy-to-clipboard';\n\n@NgModule({\n  declarations: [CdkCopyToClipboard],\n  imports: [CommonModule],\n  exports: [CdkCopyToClipboard],\n})\nexport class ClipboardModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EventEmitter, Input, Output} from '@angular/core';\n\nimport {Clipboard} from './clipboard';\n\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n *\n * Example usage:\n *\n * `<button copyToClipboard=\"Content to be copied\">Copy me!</button>`\n */\n@Directive({\n  selector: '[cdkCopyToClipboard]',\n  host: {\n    '(click)': 'doCopy()',\n  }\n})\nexport class CdkCopyToClipboard {\n  /** Content to be copied. */\n  @Input('cdkCopyToClipboard') text = '';\n\n  @Output() copied = new EventEmitter<boolean>();\n\n  constructor(private readonly clipboard: Clipboard) {}\n\n  doCopy() {\n    this.copied.emit(this.clipboard.copy(this.text));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\n/**\n * A service for copying text to the clipboard.\n *\n * Example usage:\n *\n * clipboard.copy(\"copy this text\");\n */\n@Injectable({providedIn: 'root'})\nexport class Clipboard {\n  private _document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  /**\n   * Copies the provided text into the user's clipboard.\n   *\n   * @param text The string to copy.\n   * @returns Whether the operation was successful.\n   */\n  copy(text: string): boolean {\n    const pendingCopy = this.beginCopy(text);\n    const successful = pendingCopy.copy();\n    pendingCopy.destroy();\n\n    return successful;\n  }\n\n  /**\n   * Prepares a string to be copied later. This is useful for large strings\n   * which take too long to successfully render and be copied in the same tick.\n   *\n   * The caller must call `destroy` on the returned `PendingCopy`.\n   *\n   * @param text The string to copy.\n   * @returns the pending copy operation.\n   */\n  beginCopy(text: string): PendingCopy {\n    return new PendingCopy(text, this._document);\n  }\n}\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a relayout. This relayout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * relayout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nexport class PendingCopy {\n  private _textarea: HTMLTextAreaElement|undefined;\n\n  constructor(text: string, private readonly _document: Document) {\n    const textarea = this._textarea = this._document.createElement('textarea');\n    const styles = textarea.style;\n\n    // Hide the element for display and accessibility. Set an\n    // absolute position so the page layout isn't affected.\n    styles.opacity = '0';\n    styles.position = 'absolute';\n    styles.left = styles.top = '-999em';\n    textarea.setAttribute('aria-hidden', 'true');\n    textarea.value = text;\n    this._document.body.appendChild(textarea);\n  }\n\n  /** Finishes copying the text. */\n  copy(): boolean {\n    const textarea = this._textarea;\n    let successful = false;\n\n    try {  // Older browsers could throw if copy is not supported.\n      if (textarea) {\n        const currentFocus = this._document.activeElement;\n\n        textarea.select();\n        textarea.setSelectionRange(0, textarea.value.length);\n        successful = this._document.execCommand('copy');\n\n        if (currentFocus && currentFocus instanceof HTMLElement) {\n          currentFocus.focus();\n        }\n      }\n    } catch {\n      // Discard error.\n      // Initial setting of {@code successful} will represent failure here.\n    }\n\n    return successful;\n  }\n\n  /** Cleans up DOM changes used to perform the copy operation. */\n  destroy() {\n    const textarea = this._textarea;\n\n    if (textarea) {\n      if (textarea.parentNode) {\n        textarea.parentNode.removeChild(textarea);\n      }\n\n      this._textarea = undefined;\n    }\n  }\n}\n"],"names":["CommonModule","NgModule","Output","Input","Directive","EventEmitter","Inject","DOCUMENT","Injectable"],"mappings":"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"}